<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Routing">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Routing.Configuration">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Routing.Configuration" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Routing.Configuration.FilterType" />
        <element api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata group="api" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata name="BackupEndpointCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata name="BackupEndpointCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata group="api" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata name="BackupEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata name="BackupEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName">
      <topicdata group="api" />
      <apidata name="EndpointName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointName" />
      <setter name="set_EndpointName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpointName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata group="api" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>backupList</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata name="BackupListCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata name="BackupListCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata group="api" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata name="FilterElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata name="FilterElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType">
      <topicdata group="api" />
      <apidata name="CustomType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomType" />
      <setter name="set_CustomType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>customType</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1">
      <topicdata group="api" />
      <apidata name="Filter1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter1" />
      <setter name="set_Filter1" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter1</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2">
      <topicdata group="api" />
      <apidata name="Filter2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter2" />
      <setter name="set_Filter2" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter2</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData">
      <topicdata group="api" />
      <apidata name="FilterData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterData" />
      <setter name="set_FilterData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterData</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType">
      <topicdata group="api" />
      <apidata name="FilterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterType" />
      <setter name="set_FilterType" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterType</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata group="api" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata name="FilterElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata name="FilterElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="IsElementRemovable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata group="api" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>filterTable</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata name="FilterTableCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata name="FilterTableCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata group="api" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata name="FilterTableEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata name="FilterTableEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata group="api" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata name="FilterTableEntryElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata name="FilterTableEntryElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList">
      <topicdata group="api" />
      <apidata name="BackupList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BackupList" />
      <setter name="set_BackupList" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>backupList</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName">
      <topicdata group="api" />
      <apidata name="EndpointName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointName" />
      <setter name="set_EndpointName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpointName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName">
      <topicdata group="api" />
      <apidata name="FilterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterName" />
      <setter name="set_FilterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Priority" />
      <setter name="set_Priority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>priority</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterType">
      <topicdata group="api" />
      <apidata name="FilterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.Action">
      <topicdata group="api" notopic="" />
      <apidata name="Action" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.And">
      <topicdata group="api" notopic="" />
      <apidata name="And" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress">
      <topicdata group="api" notopic="" />
      <apidata name="EndpointAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName">
      <topicdata group="api" notopic="" />
      <apidata name="EndpointName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll">
      <topicdata group="api" notopic="" />
      <apidata name="MatchAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress">
      <topicdata group="api" notopic="" />
      <apidata name="PrefixEndpointAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.XPath">
      <topicdata group="api" notopic="" />
      <apidata name="XPath" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata group="api" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata name="NamespaceElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata name="NamespaceElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>namespace</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>prefix</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata group="api" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata name="NamespaceElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata name="NamespaceElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata group="api" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata name="RoutingExtensionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata name="RoutingExtensionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch">
      <topicdata group="api" />
      <apidata name="EnsureOrderedDispatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureOrderedDispatch" />
      <setter name="set_EnsureOrderedDispatch" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ensureOrderedDispatch</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName">
      <topicdata group="api" />
      <apidata name="FilterTableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterTableName" />
      <setter name="set_FilterTableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterTableName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly">
      <topicdata group="api" />
      <apidata name="RouteOnHeadersOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RouteOnHeadersOnly" />
      <setter name="set_RouteOnHeadersOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>routeOnHeadersOnly</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled">
      <topicdata group="api" />
      <apidata name="SoapProcessingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapProcessingEnabled" />
      <setter name="set_SoapProcessingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>soapProcessingEnabled</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata group="api" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.RoutingSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata name="RoutingSection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata name="RoutingSection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.RoutingSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists">
      <topicdata group="api" />
      <apidata name="BackupLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BackupLists" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>backupLists</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters">
      <topicdata group="api" />
      <apidata name="Filters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filters" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filters</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables">
      <topicdata group="api" />
      <apidata name="FilterTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilterTables" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterTables</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable">
      <topicdata group="api" />
      <apidata name="NamespaceTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceTable" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>namespaceTable</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata group="api" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata name="SoapProcessingExtensionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata name="SoapProcessingExtensionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior">
      <topicdata group="api" />
      <apidata name="CreateBehavior" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.BehaviorExtensionElement.CreateBehavior">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages">
      <topicdata group="api" />
      <apidata name="ProcessMessages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProcessMessages" />
      <setter name="set_ProcessMessages" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>processMessages</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>