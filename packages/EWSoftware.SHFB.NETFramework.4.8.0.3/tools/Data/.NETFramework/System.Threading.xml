<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="mscorlib">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BED7F4EA-1A96-11d2-8F08-00A0C9A6186D</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Threading">
      <topicdata group="api" />
      <apidata name="System.Threading" group="namespace" />
      <elements>
        <element api="T:System.Threading.AbandonedMutexException" />
        <element api="T:System.Threading.AsyncLocal`1" />
        <element api="T:System.Threading.AsyncLocalValueChangedArgs`1" />
        <element api="T:System.Threading.AutoResetEvent" />
        <element api="T:System.Threading.SendOrPostCallback" />
        <element api="T:System.Threading.SynchronizationContext" />
        <element api="T:System.Threading.CompressedStack" />
        <element api="T:System.Threading.EventResetMode" />
        <element api="T:System.Threading.EventWaitHandle" />
        <element api="T:System.Threading.ContextCallback" />
        <element api="T:System.Threading.AsyncFlowControl" />
        <element api="T:System.Threading.ExecutionContext" />
        <element api="T:System.Threading.Interlocked" />
        <element api="T:System.Threading.HostExecutionContext" />
        <element api="T:System.Threading.HostExecutionContextManager" />
        <element api="T:System.Threading.LockCookie" />
        <element api="T:System.Threading.LockRecursionException" />
        <element api="T:System.Threading.ManualResetEvent" />
        <element api="T:System.Threading.Monitor" />
        <element api="T:System.Threading.Mutex" />
        <element api="T:System.Threading.NativeOverlapped" />
        <element api="T:System.Threading.Overlapped" />
        <element api="T:System.Threading.PreAllocatedOverlapped" />
        <element api="T:System.Threading.ThreadPoolBoundHandle" />
        <element api="T:System.Threading.ParameterizedThreadStart" />
        <element api="T:System.Threading.ReaderWriterLock" />
        <element api="T:System.Threading.SemaphoreFullException" />
        <element api="T:System.Threading.SynchronizationLockException" />
        <element api="T:System.Threading.Thread" />
        <element api="T:System.Threading.ThreadAbortException" />
        <element api="T:System.Threading.ThreadInterruptedException" />
        <element api="T:System.Threading.RegisteredWaitHandle" />
        <element api="T:System.Threading.WaitCallback" />
        <element api="T:System.Threading.WaitOrTimerCallback" />
        <element api="T:System.Threading.IOCompletionCallback" />
        <element api="T:System.Threading.ThreadPool" />
        <element api="T:System.Threading.ThreadPriority" />
        <element api="T:System.Threading.ThreadStart" />
        <element api="T:System.Threading.ThreadState" />
        <element api="T:System.Threading.ThreadStateException" />
        <element api="T:System.Threading.ThreadStartException" />
        <element api="T:System.Threading.Timeout" />
        <element api="T:System.Threading.TimerCallback" />
        <element api="T:System.Threading.Timer" />
        <element api="T:System.Threading.Volatile" />
        <element api="T:System.Threading.WaitHandle" />
        <element api="T:System.Threading.WaitHandleExtensions" />
        <element api="T:System.Threading.WaitHandleCannotBeOpenedException" />
        <element api="T:System.Threading.ApartmentState" />
        <element api="T:System.Threading.SpinLock" />
        <element api="T:System.Threading.SpinWait" />
        <element api="T:System.Threading.CountdownEvent" />
        <element api="T:System.Threading.LazyThreadSafetyMode" />
        <element api="T:System.Threading.LazyInitializer" />
        <element api="T:System.Threading.ThreadLocal`1" />
        <element api="T:System.Threading.SemaphoreSlim" />
        <element api="T:System.Threading.ManualResetEventSlim" />
        <element api="T:System.Threading.CancellationTokenRegistration" />
        <element api="T:System.Threading.CancellationTokenSource" />
        <element api="T:System.Threading.CancellationToken" />
        <element api="T:System.Threading.Semaphore" />
        <element api="T:System.Threading.BarrierPostPhaseException" />
        <element api="T:System.Threading.Barrier" />
        <element api="T:System.Threading.ThreadExceptionEventArgs" />
        <element api="T:System.Threading.ThreadExceptionEventHandler" />
        <element api="T:System.Threading.LockRecursionPolicy" />
        <element api="T:System.Threading.ReaderWriterLockSlim" />
      </elements>
    </api>
    <api id="T:System.Threading.AbandonedMutexException">
      <topicdata group="api" />
      <apidata name="AbandonedMutexException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.AbandonedMutexException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.AbandonedMutexException.#ctor">
          <element api="M:System.Threading.AbandonedMutexException.#ctor" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String)" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
          <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Threading.AbandonedMutexException.Mutex" />
        <element api="P:System.Threading.AbandonedMutexException.MutexIndex" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.AbandonedMutexException">
      <topicdata name="AbandonedMutexException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.AbandonedMutexException" />
      <apidata name="AbandonedMutexException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.AbandonedMutexException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.AbandonedMutexException">
      <topicdata name="AbandonedMutexException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.AbandonedMutexException" />
      <apidata name="AbandonedMutexException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.AbandonedMutexException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Threading.AbandonedMutexException.Mutex" />
        <element api="P:System.Threading.AbandonedMutexException.MutexIndex" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.AbandonedMutexException">
      <topicdata name="AbandonedMutexException" group="list" subgroup="Events" typeTopicId="T:System.Threading.AbandonedMutexException" />
      <apidata name="AbandonedMutexException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.AbandonedMutexException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.AbandonedMutexException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.AbandonedMutexException.#ctor" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String)" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
        <element api="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="location">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="handle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="handle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AbandonedMutexException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="handle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.AbandonedMutexException.Mutex">
      <topicdata group="api" />
      <apidata name="Mutex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Mutex" />
      <returns>
        <type api="T:System.Threading.Mutex" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.AbandonedMutexException.MutexIndex">
      <topicdata group="api" />
      <apidata name="MutexIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MutexIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AbandonedMutexException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ApartmentState">
      <topicdata group="api" />
      <apidata name="ApartmentState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Threading.ApartmentState.STA" />
        <element api="F:System.Threading.ApartmentState.MTA" />
        <element api="F:System.Threading.ApartmentState.Unknown" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Threading.ApartmentState.MTA">
      <topicdata group="api" notopic="" />
      <apidata name="MTA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ApartmentState.STA">
      <topicdata group="api" notopic="" />
      <apidata name="STA" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ApartmentState.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.AsyncFlowControl">
      <topicdata group="api" />
      <apidata name="AsyncFlowControl" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.AsyncFlowControl.Dispose" />
        <element api="Overload:System.Threading.AsyncFlowControl.Equals">
          <element api="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
          <element api="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.AsyncFlowControl.GetHashCode" />
        <element api="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
        <element api="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
        <element api="M:System.Threading.AsyncFlowControl.Undo" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.AsyncFlowControl">
      <topicdata name="AsyncFlowControl" group="list" subgroup="Methods" typeTopicId="T:System.Threading.AsyncFlowControl" />
      <apidata name="AsyncFlowControl" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.AsyncFlowControl.Dispose" />
        <element api="Overload:System.Threading.AsyncFlowControl.Equals">
          <element api="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
          <element api="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.AsyncFlowControl.GetHashCode" />
        <element api="M:System.Threading.AsyncFlowControl.Undo" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" />
      </containers>
    </api>
    <api id="Operators.T:System.Threading.AsyncFlowControl">
      <topicdata name="AsyncFlowControl" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Threading.AsyncFlowControl" />
      <apidata name="AsyncFlowControl" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
        <element api="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" />
      </containers>
    </api>
    <api id="Overload:System.Threading.AsyncFlowControl.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
        <element api="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.AsyncFlowControl.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.AsyncFlowControl.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Threading.AsyncFlowControl" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Threading.AsyncFlowControl" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Threading.AsyncFlowControl" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Threading.AsyncFlowControl" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Threading.AsyncFlowControl" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncFlowControl.Undo">
      <topicdata group="api" />
      <apidata name="Undo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.AsyncLocal`1">
      <topicdata group="api" />
      <apidata name="AsyncLocal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.AsyncLocal`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.AsyncLocal`1.#ctor">
          <element api="M:System.Threading.AsyncLocal`1.#ctor" />
          <element api="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})" />
        </element>
        <element api="P:System.Threading.AsyncLocal`1.Value" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.AsyncLocal`1">
      <topicdata name="AsyncLocal" group="list" subgroup="Methods" typeTopicId="T:System.Threading.AsyncLocal`1" />
      <apidata name="AsyncLocal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.AsyncLocal`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.AsyncLocal`1">
      <topicdata name="AsyncLocal" group="list" subgroup="Properties" typeTopicId="T:System.Threading.AsyncLocal`1" />
      <apidata name="AsyncLocal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.AsyncLocal`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Threading.AsyncLocal`1.Value" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" />
      </containers>
    </api>
    <api id="Overload:System.Threading.AsyncLocal`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.AsyncLocal`1.#ctor" />
        <element api="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncLocal`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AsyncLocal`1.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.AsyncLocal`1.#ctor(System.Action{System.Threading.AsyncLocalValueChangedArgs{`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.AsyncLocal`1.#ctor" />
      <parameters>
        <parameter name="valueChangedHandler">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" ref="false">
                <specialization>
                  <template name="T" index="0" api="T:System.Threading.AsyncLocal`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.AsyncLocal`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:System.Threading.AsyncLocal`1" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocal`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.AsyncLocalValueChangedArgs`1">
      <topicdata group="api" />
      <apidata name="AsyncLocalValueChangedArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue" />
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue" />
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.AsyncLocalValueChangedArgs`1">
      <topicdata name="AsyncLocalValueChangedArgs" group="list" subgroup="Methods" typeTopicId="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      <apidata name="AsyncLocalValueChangedArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.AsyncLocalValueChangedArgs`1">
      <topicdata name="AsyncLocalValueChangedArgs" group="list" subgroup="Properties" typeTopicId="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      <apidata name="AsyncLocalValueChangedArgs" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue" />
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue" />
        <element api="P:System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      </containers>
    </api>
    <api id="P:System.Threading.AsyncLocalValueChangedArgs`1.CurrentValue">
      <topicdata group="api" />
      <apidata name="CurrentValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentValue" />
      <returns>
        <template name="T" index="0" api="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.AsyncLocalValueChangedArgs`1.PreviousValue">
      <topicdata group="api" />
      <apidata name="PreviousValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousValue" />
      <returns>
        <template name="T" index="0" api="T:System.Threading.AsyncLocalValueChangedArgs`1" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.AsyncLocalValueChangedArgs`1.ThreadContextChanged">
      <topicdata group="api" />
      <apidata name="ThreadContextChanged" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ThreadContextChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AsyncLocalValueChangedArgs`1" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.AutoResetEvent">
      <topicdata group="api" />
      <apidata name="AutoResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Threading.EventWaitHandle" ref="true" />
          <type api="T:System.Threading.WaitHandle" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.AutoResetEvent.#ctor(System.Boolean)" />
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.AutoResetEvent.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.AutoResetEvent">
      <topicdata name="AutoResetEvent" group="list" subgroup="Methods" typeTopicId="T:System.Threading.AutoResetEvent" />
      <apidata name="AutoResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.AutoResetEvent.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AutoResetEvent" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.AutoResetEvent">
      <topicdata name="AutoResetEvent" group="list" subgroup="Properties" typeTopicId="T:System.Threading.AutoResetEvent" />
      <apidata name="AutoResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AutoResetEvent" />
      </containers>
    </api>
    <api id="M:System.Threading.AutoResetEvent.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.AutoResetEvent" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.Barrier">
      <topicdata group="api" />
      <apidata name="Barrier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Barrier.#ctor">
          <element api="M:System.Threading.Barrier.#ctor(System.Int32)" />
          <element api="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
        </element>
        <element api="M:System.Threading.Barrier.AddParticipant" />
        <element api="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
        <element api="Overload:System.Threading.Barrier.Dispose">
          <element api="M:System.Threading.Barrier.Dispose" />
          <element api="M:System.Threading.Barrier.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.Barrier.RemoveParticipant" />
        <element api="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
        <element api="Overload:System.Threading.Barrier.SignalAndWait">
          <element api="M:System.Threading.Barrier.SignalAndWait" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.Threading.Barrier.CurrentPhaseNumber" />
        <element api="P:System.Threading.Barrier.ParticipantCount" />
        <element api="P:System.Threading.Barrier.ParticipantsRemaining" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Barrier">
      <topicdata name="Barrier" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Barrier" />
      <apidata name="Barrier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Barrier.AddParticipant" />
        <element api="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
        <element api="Overload:System.Threading.Barrier.Dispose">
          <element api="M:System.Threading.Barrier.Dispose" />
          <element api="M:System.Threading.Barrier.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.Barrier.RemoveParticipant" />
        <element api="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
        <element api="Overload:System.Threading.Barrier.SignalAndWait">
          <element api="M:System.Threading.Barrier.SignalAndWait" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.Barrier">
      <topicdata name="Barrier" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Barrier" />
      <apidata name="Barrier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.Barrier.CurrentPhaseNumber" />
        <element api="P:System.Threading.Barrier.ParticipantCount" />
        <element api="P:System.Threading.Barrier.ParticipantsRemaining" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Barrier.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Barrier.#ctor(System.Int32)" />
        <element api="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Barrier.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Barrier.Dispose" />
        <element api="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Barrier.SignalAndWait">
      <topicdata name="SignalAndWait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Barrier.SignalAndWait" />
        <element api="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
        <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
        <element api="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Barrier.#ctor" />
      <parameters>
        <parameter name="participantCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Barrier.#ctor" />
      <parameters>
        <parameter name="participantCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="postPhaseAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Barrier" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.AddParticipant">
      <topicdata group="api" />
      <apidata name="AddParticipant" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.AddParticipants(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddParticipants" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="participantCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Barrier.CurrentPhaseNumber">
      <topicdata group="api" />
      <apidata name="CurrentPhaseNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentPhaseNumber" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.Barrier.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Barrier.ParticipantCount">
      <topicdata group="api" />
      <apidata name="ParticipantCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParticipantCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Barrier.ParticipantsRemaining">
      <topicdata group="api" />
      <apidata name="ParticipantsRemaining" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParticipantsRemaining" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.RemoveParticipant">
      <topicdata group="api" />
      <apidata name="RemoveParticipant" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.RemoveParticipants(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveParticipants" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="participantCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait(System.Int32)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Barrier.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Barrier" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.BarrierPostPhaseException">
      <topicdata group="api" />
      <apidata name="BarrierPostPhaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.BarrierPostPhaseException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.BarrierPostPhaseException.#ctor">
          <element api="M:System.Threading.BarrierPostPhaseException.#ctor" />
          <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)" />
          <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)" />
          <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.BarrierPostPhaseException">
      <topicdata name="BarrierPostPhaseException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.BarrierPostPhaseException" />
      <apidata name="BarrierPostPhaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.BarrierPostPhaseException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.BarrierPostPhaseException">
      <topicdata name="BarrierPostPhaseException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.BarrierPostPhaseException" />
      <apidata name="BarrierPostPhaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.BarrierPostPhaseException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.BarrierPostPhaseException">
      <topicdata name="BarrierPostPhaseException" group="list" subgroup="Events" typeTopicId="T:System.Threading.BarrierPostPhaseException" />
      <apidata name="BarrierPostPhaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.BarrierPostPhaseException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.BarrierPostPhaseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.BarrierPostPhaseException.#ctor" />
        <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)" />
        <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)" />
        <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.BarrierPostPhaseException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.BarrierPostPhaseException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.BarrierPostPhaseException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.BarrierPostPhaseException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.BarrierPostPhaseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.BarrierPostPhaseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.BarrierPostPhaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.BarrierPostPhaseException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.BarrierPostPhaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.BarrierPostPhaseException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.CancellationToken">
      <topicdata group="api" />
      <apidata name="CancellationToken" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.CancellationToken.#ctor(System.Boolean)" />
        <element api="Overload:System.Threading.CancellationToken.Equals">
          <element api="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CancellationToken.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.CancellationToken.GetHashCode" />
        <element api="M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
        <element api="Overload:System.Threading.CancellationToken.Register">
          <element api="M:System.Threading.CancellationToken.Register(System.Action)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Threading.CancellationToken.ThrowIfCancellationRequested" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Threading.CancellationToken.CanBeCanceled" />
        <element api="P:System.Threading.CancellationToken.IsCancellationRequested" />
        <element api="P:System.Threading.CancellationToken.None" />
        <element api="P:System.Threading.CancellationToken.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.CancellationToken">
      <topicdata name="CancellationToken" group="list" subgroup="Methods" typeTopicId="T:System.Threading.CancellationToken" />
      <apidata name="CancellationToken" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Threading.CancellationToken.Equals">
          <element api="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CancellationToken.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.CancellationToken.GetHashCode" />
        <element api="Overload:System.Threading.CancellationToken.Register">
          <element api="M:System.Threading.CancellationToken.Register(System.Action)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)" />
          <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Threading.CancellationToken.ThrowIfCancellationRequested" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" />
      </containers>
    </api>
    <api id="Operators.T:System.Threading.CancellationToken">
      <topicdata name="CancellationToken" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Threading.CancellationToken" />
      <apidata name="CancellationToken" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.CancellationToken">
      <topicdata name="CancellationToken" group="list" subgroup="Properties" typeTopicId="T:System.Threading.CancellationToken" />
      <apidata name="CancellationToken" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Threading.CancellationToken.CanBeCanceled" />
        <element api="P:System.Threading.CancellationToken.IsCancellationRequested" />
        <element api="P:System.Threading.CancellationToken.None" />
        <element api="P:System.Threading.CancellationToken.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationToken.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.CancellationToken.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationToken.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationToken.Register(System.Action)" />
        <element api="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)" />
        <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)" />
        <element api="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="canceled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationToken.CanBeCanceled">
      <topicdata group="api" />
      <apidata name="CanBeCanceled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanBeCanceled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Equals(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationToken.IsCancellationRequested">
      <topicdata group="api" />
      <apidata name="IsCancellationRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCancellationRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationToken.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_None" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.op_Equality(System.Threading.CancellationToken,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.op_Inequality(System.Threading.CancellationToken,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Register(System.Action)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="useSynchronizationContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationToken.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="useSynchronizationContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationToken.ThrowIfCancellationRequested">
      <topicdata group="api" />
      <apidata name="ThrowIfCancellationRequested" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationToken.WaitHandle">
      <topicdata group="api" />
      <apidata name="WaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.CancellationTokenRegistration">
      <topicdata group="api" />
      <apidata name="CancellationTokenRegistration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.CancellationTokenRegistration.Dispose" />
        <element api="Overload:System.Threading.CancellationTokenRegistration.Equals">
          <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
          <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
        <element api="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
        <element api="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.CancellationTokenRegistration">
      <topicdata name="CancellationTokenRegistration" group="list" subgroup="Methods" typeTopicId="T:System.Threading.CancellationTokenRegistration" />
      <apidata name="CancellationTokenRegistration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.CancellationTokenRegistration.Dispose" />
        <element api="Overload:System.Threading.CancellationTokenRegistration.Equals">
          <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
          <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" />
      </containers>
    </api>
    <api id="Operators.T:System.Threading.CancellationTokenRegistration">
      <topicdata name="CancellationTokenRegistration" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Threading.CancellationTokenRegistration" />
      <apidata name="CancellationTokenRegistration" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
        <element api="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenRegistration.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
        <element api="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenRegistration.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenRegistration.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenRegistration" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.CancellationTokenSource">
      <topicdata group="api" />
      <apidata name="CancellationTokenSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.CancellationTokenSource.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.CancellationTokenSource.#ctor">
          <element api="M:System.Threading.CancellationTokenSource.#ctor" />
          <element api="M:System.Threading.CancellationTokenSource.#ctor(System.Int32)" />
          <element api="M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.Cancel">
          <element api="M:System.Threading.CancellationTokenSource.Cancel" />
          <element api="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.CancelAfter">
          <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)" />
          <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.CreateLinkedTokenSource">
          <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])" />
          <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.Dispose">
          <element api="M:System.Threading.CancellationTokenSource.Dispose" />
          <element api="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Threading.CancellationTokenSource.IsCancellationRequested" />
        <element api="P:System.Threading.CancellationTokenSource.Token" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.CancellationTokenSource">
      <topicdata name="CancellationTokenSource" group="list" subgroup="Methods" typeTopicId="T:System.Threading.CancellationTokenSource" />
      <apidata name="CancellationTokenSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.CancellationTokenSource.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.CancellationTokenSource.Cancel">
          <element api="M:System.Threading.CancellationTokenSource.Cancel" />
          <element api="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.CancelAfter">
          <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)" />
          <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.CreateLinkedTokenSource">
          <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])" />
          <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.CancellationTokenSource.Dispose">
          <element api="M:System.Threading.CancellationTokenSource.Dispose" />
          <element api="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.CancellationTokenSource">
      <topicdata name="CancellationTokenSource" group="list" subgroup="Properties" typeTopicId="T:System.Threading.CancellationTokenSource" />
      <apidata name="CancellationTokenSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.CancellationTokenSource.#ctor" />
      <elements>
        <element api="P:System.Threading.CancellationTokenSource.IsCancellationRequested" />
        <element api="P:System.Threading.CancellationTokenSource.Token" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenSource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.CancellationTokenSource.#ctor" />
        <element api="M:System.Threading.CancellationTokenSource.#ctor(System.Int32)" />
        <element api="M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenSource.Cancel">
      <topicdata name="Cancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationTokenSource.Cancel" />
        <element api="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenSource.CancelAfter">
      <topicdata name="CancelAfter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CancelAfter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)" />
        <element api="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenSource.CreateLinkedTokenSource">
      <topicdata name="CreateLinkedTokenSource" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateLinkedTokenSource" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])" />
        <element api="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CancellationTokenSource.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CancellationTokenSource.Dispose" />
        <element api="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.CancellationTokenSource.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.CancellationTokenSource.#ctor" />
      <parameters>
        <parameter name="millisecondsDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.#ctor(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.CancellationTokenSource.#ctor" />
      <parameters>
        <parameter name="delay">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenSource.Cancel" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.Cancel(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenSource.Cancel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="throwOnFirstException">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.CancelAfter(System.Int32)">
      <topicdata group="api" />
      <apidata name="CancelAfter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenSource.CancelAfter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.CancelAfter(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="CancelAfter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenSource.CancelAfter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delay">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="CreateLinkedTokenSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.CancellationTokenSource.CreateLinkedTokenSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token1">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="token2">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])">
      <topicdata group="api" />
      <apidata name="CreateLinkedTokenSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.CancellationTokenSource.CreateLinkedTokenSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tokens" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.CancellationToken" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CancellationTokenSource.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CancellationTokenSource.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.CancellationTokenSource.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationTokenSource.IsCancellationRequested">
      <topicdata group="api" />
      <apidata name="IsCancellationRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCancellationRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CancellationTokenSource.Token">
      <topicdata group="api" />
      <apidata name="Token" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Token" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CancellationTokenSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.CompressedStack">
      <topicdata group="api" />
      <apidata name="CompressedStack" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.CompressedStack.Capture" />
        <element api="M:System.Threading.CompressedStack.CreateCopy" />
        <element api="M:System.Threading.CompressedStack.GetCompressedStack" />
        <element api="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.CompressedStack">
      <topicdata name="CompressedStack" group="list" subgroup="Methods" typeTopicId="T:System.Threading.CompressedStack" />
      <apidata name="CompressedStack" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.CompressedStack.Capture" />
        <element api="M:System.Threading.CompressedStack.CreateCopy" />
        <element api="M:System.Threading.CompressedStack.GetCompressedStack" />
        <element api="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" />
      </containers>
    </api>
    <api id="M:System.Threading.CompressedStack.Capture">
      <topicdata group="api" />
      <apidata name="Capture" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CompressedStack.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.CompressedStack.GetCompressedStack">
      <topicdata group="api" />
      <apidata name="GetCompressedStack" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="compressedStack">
          <type api="T:System.Threading.CompressedStack" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Threading.ContextCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ContextCallback">
      <topicdata group="api" />
      <apidata name="ContextCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.CountdownEvent">
      <topicdata group="api" />
      <apidata name="CountdownEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.CountdownEvent.#ctor(System.Int32)" />
        <element api="Overload:System.Threading.CountdownEvent.AddCount">
          <element api="M:System.Threading.CountdownEvent.AddCount" />
          <element api="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Dispose">
          <element api="M:System.Threading.CountdownEvent.Dispose" />
          <element api="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Reset">
          <element api="M:System.Threading.CountdownEvent.Reset" />
          <element api="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Signal">
          <element api="M:System.Threading.CountdownEvent.Signal" />
          <element api="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.TryAddCount">
          <element api="M:System.Threading.CountdownEvent.TryAddCount" />
          <element api="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Wait">
          <element api="M:System.Threading.CountdownEvent.Wait" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.Threading.CountdownEvent.CurrentCount" />
        <element api="P:System.Threading.CountdownEvent.InitialCount" />
        <element api="P:System.Threading.CountdownEvent.IsSet" />
        <element api="P:System.Threading.CountdownEvent.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.CountdownEvent">
      <topicdata name="CountdownEvent" group="list" subgroup="Methods" typeTopicId="T:System.Threading.CountdownEvent" />
      <apidata name="CountdownEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.CountdownEvent.AddCount">
          <element api="M:System.Threading.CountdownEvent.AddCount" />
          <element api="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Dispose">
          <element api="M:System.Threading.CountdownEvent.Dispose" />
          <element api="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Reset">
          <element api="M:System.Threading.CountdownEvent.Reset" />
          <element api="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Signal">
          <element api="M:System.Threading.CountdownEvent.Signal" />
          <element api="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.TryAddCount">
          <element api="M:System.Threading.CountdownEvent.TryAddCount" />
          <element api="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.CountdownEvent.Wait">
          <element api="M:System.Threading.CountdownEvent.Wait" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.CountdownEvent">
      <topicdata name="CountdownEvent" group="list" subgroup="Properties" typeTopicId="T:System.Threading.CountdownEvent" />
      <apidata name="CountdownEvent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.CountdownEvent.CurrentCount" />
        <element api="P:System.Threading.CountdownEvent.InitialCount" />
        <element api="P:System.Threading.CountdownEvent.IsSet" />
        <element api="P:System.Threading.CountdownEvent.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.AddCount">
      <topicdata name="AddCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddCount" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.AddCount" />
        <element api="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.Dispose" />
        <element api="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.Reset">
      <topicdata name="Reset" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Reset" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.Reset" />
        <element api="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.Signal">
      <topicdata name="Signal" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Signal" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.Signal" />
        <element api="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.TryAddCount">
      <topicdata name="TryAddCount" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryAddCount" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.TryAddCount" />
        <element api="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.CountdownEvent.Wait">
      <topicdata name="Wait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Wait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.CountdownEvent.Wait" />
        <element api="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
        <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
        <element api="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.AddCount">
      <topicdata group="api" />
      <apidata name="AddCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.AddCount" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.AddCount(System.Int32)">
      <topicdata group="api" />
      <apidata name="AddCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.AddCount" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CountdownEvent.CurrentCount">
      <topicdata group="api" />
      <apidata name="CurrentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.CountdownEvent.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CountdownEvent.InitialCount">
      <topicdata group="api" />
      <apidata name="InitialCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitialCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CountdownEvent.IsSet">
      <topicdata group="api" />
      <apidata name="IsSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSet" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Reset" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Reset(System.Int32)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Reset" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Signal">
      <topicdata group="api" />
      <apidata name="Signal" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Signal" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Signal(System.Int32)">
      <topicdata group="api" />
      <apidata name="Signal" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Signal" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.TryAddCount">
      <topicdata group="api" />
      <apidata name="TryAddCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.TryAddCount" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryAddCount" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.TryAddCount" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait(System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.CountdownEvent.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.CountdownEvent.WaitHandle">
      <topicdata group="api" />
      <apidata name="WaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.CountdownEvent" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.EventResetMode">
      <topicdata group="api" />
      <apidata name="EventResetMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.EventResetMode.AutoReset" />
        <element api="F:System.Threading.EventResetMode.ManualReset" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Threading.EventResetMode.AutoReset">
      <topicdata group="api" notopic="" />
      <apidata name="AutoReset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.EventResetMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventResetMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.EventResetMode.ManualReset">
      <topicdata group="api" notopic="" />
      <apidata name="ManualReset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.EventResetMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventResetMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.EventWaitHandle">
      <topicdata group="api" />
      <apidata name="EventWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Threading.WaitHandle" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Threading.AutoResetEvent" ref="true" />
          <type api="T:System.Threading.ManualResetEvent" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Threading.EventWaitHandle.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.EventWaitHandle.#ctor">
          <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)" />
          <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
          <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
          <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
        </element>
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="Overload:System.Threading.EventWaitHandle.OpenExisting">
          <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
          <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
        </element>
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="Overload:System.Threading.EventWaitHandle.TryOpenExisting">
          <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
          <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="Overload:System.Threading.EventWaitHandle.Dispose">
          <element api="M:System.Threading.WaitHandle.Dispose" />
          <element api="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.EventWaitHandle.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.EventWaitHandle">
      <topicdata name="EventWaitHandle" group="list" subgroup="Methods" typeTopicId="T:System.Threading.EventWaitHandle" />
      <apidata name="EventWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Threading.EventWaitHandle.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="Overload:System.Threading.EventWaitHandle.OpenExisting">
          <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
          <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
        </element>
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="Overload:System.Threading.EventWaitHandle.TryOpenExisting">
          <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
          <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="Overload:System.Threading.EventWaitHandle.Dispose">
          <element api="M:System.Threading.WaitHandle.Dispose" />
          <element api="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.EventWaitHandle.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.EventWaitHandle">
      <topicdata name="EventWaitHandle" group="list" subgroup="Properties" typeTopicId="T:System.Threading.EventWaitHandle" />
      <apidata name="EventWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" />
      </containers>
    </api>
    <api id="Overload:System.Threading.EventWaitHandle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)" />
        <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)" />
        <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)" />
        <element api="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.EventWaitHandle.OpenExisting">
      <topicdata name="OpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String)" />
        <element api="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.EventWaitHandle.TryOpenExisting">
      <topicdata name="TryOpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)" />
        <element api="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.EventWaitHandle.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Threading.EventResetMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.EventWaitHandle.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Threading.EventResetMode" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.EventWaitHandle.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Threading.EventResetMode" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.EventWaitHandle.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Threading.EventResetMode" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="eventSecurity">
          <type api="T:System.Security.AccessControl.EventWaitHandleSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.GetAccessControl">
      <topicdata group="api" />
      <apidata name="GetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.AccessControl.EventWaitHandleSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.OpenExisting(System.String)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.EventWaitHandle.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.EventWaitHandle.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.EventWaitHandleRights" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.Set">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)">
      <topicdata group="api" />
      <apidata name="SetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventSecurity">
          <type api="T:System.Security.AccessControl.EventWaitHandleSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Threading.EventWaitHandle@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.EventWaitHandle.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.EventWaitHandleRights" ref="false" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.EventWaitHandle" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.EventWaitHandle.TryOpenExisting(System.String,System.Threading.EventWaitHandle@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.EventWaitHandle.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.EventWaitHandle" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.EventWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ExecutionContext">
      <topicdata group="api" />
      <apidata name="ExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ExecutionContext.Capture" />
        <element api="M:System.Threading.ExecutionContext.CreateCopy" />
        <element api="M:System.Threading.ExecutionContext.Dispose" />
        <element api="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
        <element api="M:System.Threading.ExecutionContext.RestoreFlow" />
        <element api="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
        <element api="M:System.Threading.ExecutionContext.SuppressFlow" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.ExecutionContext">
      <topicdata name="ExecutionContext" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ExecutionContext" />
      <apidata name="ExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ExecutionContext.Capture" />
        <element api="M:System.Threading.ExecutionContext.CreateCopy" />
        <element api="M:System.Threading.ExecutionContext.Dispose" />
        <element api="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
        <element api="M:System.Threading.ExecutionContext.RestoreFlow" />
        <element api="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
        <element api="M:System.Threading.ExecutionContext.SuppressFlow" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.Capture">
      <topicdata group="api" />
      <apidata name="Capture" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ExecutionContext.IsFlowSuppressed">
      <topicdata group="api" />
      <apidata name="IsFlowSuppressed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.RestoreFlow">
      <topicdata group="api" />
      <apidata name="RestoreFlow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Threading.ExecutionContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Threading.ContextCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ExecutionContext.SuppressFlow">
      <topicdata group="api" />
      <apidata name="SuppressFlow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.AsyncFlowControl" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.HostExecutionContext">
      <topicdata group="api" />
      <apidata name="HostExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.HostExecutionContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.HostExecutionContext.#ctor">
          <element api="M:System.Threading.HostExecutionContext.#ctor" />
          <element api="M:System.Threading.HostExecutionContext.#ctor(System.Object)" />
        </element>
        <element api="M:System.Threading.HostExecutionContext.CreateCopy" />
        <element api="Overload:System.Threading.HostExecutionContext.Dispose">
          <element api="M:System.Threading.HostExecutionContext.Dispose" />
          <element api="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Threading.HostExecutionContext.State" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.HostExecutionContext">
      <topicdata name="HostExecutionContext" group="list" subgroup="Methods" typeTopicId="T:System.Threading.HostExecutionContext" />
      <apidata name="HostExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.HostExecutionContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.HostExecutionContext.CreateCopy" />
        <element api="Overload:System.Threading.HostExecutionContext.Dispose">
          <element api="M:System.Threading.HostExecutionContext.Dispose" />
          <element api="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.HostExecutionContext">
      <topicdata name="HostExecutionContext" group="list" subgroup="Properties" typeTopicId="T:System.Threading.HostExecutionContext" />
      <apidata name="HostExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.HostExecutionContext.#ctor" />
      <elements>
        <element api="P:System.Threading.HostExecutionContext.State" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" />
      </containers>
    </api>
    <api id="Overload:System.Threading.HostExecutionContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.HostExecutionContext.#ctor" />
        <element api="M:System.Threading.HostExecutionContext.#ctor(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.HostExecutionContext.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.HostExecutionContext.Dispose" />
        <element api="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.HostExecutionContext.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContext.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.HostExecutionContext.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContext.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContext.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.HostExecutionContext.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContext.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.HostExecutionContext.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.HostExecutionContext.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.HostExecutionContextManager">
      <topicdata group="api" />
      <apidata name="HostExecutionContextManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.HostExecutionContextManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.HostExecutionContextManager.#ctor" />
        <element api="M:System.Threading.HostExecutionContextManager.Capture" />
        <element api="M:System.Threading.HostExecutionContextManager.Revert(System.Object)" />
        <element api="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.HostExecutionContextManager">
      <topicdata name="HostExecutionContextManager" group="list" subgroup="Methods" typeTopicId="T:System.Threading.HostExecutionContextManager" />
      <apidata name="HostExecutionContextManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.HostExecutionContextManager.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.HostExecutionContextManager.Capture" />
        <element api="M:System.Threading.HostExecutionContextManager.Revert(System.Object)" />
        <element api="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContextManager" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContextManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContextManager.Capture">
      <topicdata group="api" />
      <apidata name="Capture" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.HostExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.HostExecutionContextManager.Revert(System.Object)">
      <topicdata group="api" />
      <apidata name="Revert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="previousState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContextManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)">
      <topicdata group="api" />
      <apidata name="SetHostExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="hostExecutionContext">
          <type api="T:System.Threading.HostExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.HostExecutionContextManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.Interlocked">
      <topicdata group="api" />
      <apidata name="Interlocked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Threading.Interlocked.Add">
          <element api="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.CompareExchange">
          <element api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Decrement">
          <element api="M:System.Threading.Interlocked.Decrement(System.Int32@)" />
          <element api="M:System.Threading.Interlocked.Decrement(System.Int64@)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Exchange">
          <element api="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)" />
          <element api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Increment">
          <element api="M:System.Threading.Interlocked.Increment(System.Int32@)" />
          <element api="M:System.Threading.Interlocked.Increment(System.Int64@)" />
        </element>
        <element api="M:System.Threading.Interlocked.MemoryBarrier" />
        <element api="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <element api="M:System.Threading.Interlocked.SpeculationBarrier" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.Interlocked">
      <topicdata name="Interlocked" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Interlocked" />
      <apidata name="Interlocked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Interlocked.Add">
          <element api="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.CompareExchange">
          <element api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)" />
          <element api="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Decrement">
          <element api="M:System.Threading.Interlocked.Decrement(System.Int32@)" />
          <element api="M:System.Threading.Interlocked.Decrement(System.Int64@)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Exchange">
          <element api="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)" />
          <element api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)" />
          <element api="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)" />
        </element>
        <element api="Overload:System.Threading.Interlocked.Increment">
          <element api="M:System.Threading.Interlocked.Increment(System.Int32@)" />
          <element api="M:System.Threading.Interlocked.Increment(System.Int64@)" />
        </element>
        <element api="M:System.Threading.Interlocked.MemoryBarrier" />
        <element api="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <element api="M:System.Threading.Interlocked.SpeculationBarrier" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Interlocked.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)" />
        <element api="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Interlocked.CompareExchange">
      <topicdata name="CompareExchange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)" />
        <element api="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Interlocked.Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Interlocked.Decrement(System.Int32@)" />
        <element api="M:System.Threading.Interlocked.Decrement(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Interlocked.Exchange">
      <topicdata name="Exchange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)" />
        <element api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
        <element api="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)" />
        <element api="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)" />
        <element api="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)" />
        <element api="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)" />
        <element api="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Interlocked.Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Increment" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Interlocked.Increment(System.Int32@)" />
        <element api="M:System.Threading.Interlocked.Increment(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="comparand">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)">
      <topicdata group="api" />
      <apidata name="CompareExchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.CompareExchange" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
        </parameter>
        <parameter name="comparand">
          <template name="T" index="0" api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Interlocked.Decrement(System.Int32@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Decrement(System.Int64@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Exchange``1(``0@,``0)">
      <topicdata group="api" />
      <apidata name="Exchange" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Exchange" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="location1">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Interlocked.Increment(System.Int32@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Increment(System.Int64@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Interlocked.Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.MemoryBarrier">
      <topicdata group="api" />
      <apidata name="MemoryBarrier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.Read(System.Int64@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Interlocked.SpeculationBarrier">
      <topicdata group="api" />
      <apidata name="SpeculationBarrier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Interlocked" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.IOCompletionCallback">
      <topicdata group="api" />
      <apidata name="IOCompletionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="errorCode">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="numBytes">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="pOVERLAP">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.LazyInitializer">
      <topicdata group="api" />
      <apidata name="LazyInitializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Threading.LazyInitializer.EnsureInitialized">
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.LazyInitializer">
      <topicdata name="LazyInitializer" group="list" subgroup="Methods" typeTopicId="T:System.Threading.LazyInitializer" />
      <apidata name="LazyInitializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.LazyInitializer.EnsureInitialized">
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)" />
          <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" />
      </containers>
    </api>
    <api id="Overload:System.Threading.LazyInitializer.EnsureInitialized">
      <topicdata name="EnsureInitialized" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)" />
        <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
        <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)" />
        <element api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)">
      <topicdata group="api" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.LazyInitializer.EnsureInitialized" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@)" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)">
      <topicdata group="api" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.LazyInitializer.EnsureInitialized" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)" />
          </referenceTo>
        </parameter>
        <parameter name="initialized">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="syncLock">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.LazyInitializer.EnsureInitialized" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
          </referenceTo>
        </parameter>
        <parameter name="initialized">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="syncLock">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="valueFactory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})">
      <topicdata group="api" />
      <apidata name="EnsureInitialized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.LazyInitializer.EnsureInitialized" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="target">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
          </referenceTo>
        </parameter>
        <parameter name="valueFactory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.LazyThreadSafetyMode">
      <topicdata group="api" />
      <apidata name="LazyThreadSafetyMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.LazyThreadSafetyMode.None" />
        <element api="F:System.Threading.LazyThreadSafetyMode.PublicationOnly" />
        <element api="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication">
      <topicdata group="api" notopic="" />
      <apidata name="ExecutionAndPublication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.LazyThreadSafetyMode.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.LazyThreadSafetyMode.PublicationOnly">
      <topicdata group="api" notopic="" />
      <apidata name="PublicationOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LazyThreadSafetyMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.LockCookie">
      <topicdata group="api" />
      <apidata name="LockCookie" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Threading.LockCookie.Equals">
          <element api="M:System.Threading.LockCookie.Equals(System.Threading.LockCookie)" />
          <element api="M:System.Threading.LockCookie.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.LockCookie.GetHashCode" />
        <element api="M:System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)" />
        <element api="M:System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.LockCookie">
      <topicdata name="LockCookie" group="list" subgroup="Methods" typeTopicId="T:System.Threading.LockCookie" />
      <apidata name="LockCookie" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Threading.LockCookie.Equals">
          <element api="M:System.Threading.LockCookie.Equals(System.Threading.LockCookie)" />
          <element api="M:System.Threading.LockCookie.Equals(System.Object)" />
        </element>
        <element api="M:System.Threading.LockCookie.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" />
      </containers>
    </api>
    <api id="Operators.T:System.Threading.LockCookie">
      <topicdata name="LockCookie" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Threading.LockCookie" />
      <apidata name="LockCookie" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)" />
        <element api="M:System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" />
      </containers>
    </api>
    <api id="Overload:System.Threading.LockCookie.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.LockCookie.Equals(System.Threading.LockCookie)" />
        <element api="M:System.Threading.LockCookie.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.LockCookie.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.LockCookie.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.LockCookie.Equals(System.Threading.LockCookie)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.LockCookie.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Threading.LockCookie" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.LockCookie.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.LockCookie.op_Equality(System.Threading.LockCookie,System.Threading.LockCookie)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Threading.LockCookie" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Threading.LockCookie" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.LockCookie.op_Inequality(System.Threading.LockCookie,System.Threading.LockCookie)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Threading.LockCookie" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Threading.LockCookie" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockCookie" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.LockRecursionException">
      <topicdata group="api" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.LockRecursionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.LockRecursionException.#ctor">
          <element api="M:System.Threading.LockRecursionException.#ctor" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.String)" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.LockRecursionException">
      <topicdata name="LockRecursionException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.LockRecursionException" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.LockRecursionException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.LockRecursionException">
      <topicdata name="LockRecursionException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.LockRecursionException" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.LockRecursionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.LockRecursionException">
      <topicdata name="LockRecursionException" group="list" subgroup="Events" typeTopicId="T:System.Threading.LockRecursionException" />
      <apidata name="LockRecursionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.LockRecursionException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.LockRecursionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.LockRecursionException.#ctor" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.String)" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.LockRecursionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.LockRecursionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.LockRecursionPolicy">
      <topicdata group="api" />
      <apidata name="LockRecursionPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.LockRecursionPolicy.NoRecursion" />
        <element api="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="F:System.Threading.LockRecursionPolicy.NoRecursion">
      <topicdata group="api" notopic="" />
      <apidata name="NoRecursion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.LockRecursionPolicy.SupportsRecursion">
      <topicdata group="api" notopic="" />
      <apidata name="SupportsRecursion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.ManualResetEvent">
      <topicdata group="api" />
      <apidata name="ManualResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Threading.EventWaitHandle" ref="true" />
          <type api="T:System.Threading.WaitHandle" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="M:System.Threading.ManualResetEvent.#ctor(System.Boolean)" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.ManualResetEvent.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ManualResetEvent">
      <topicdata name="ManualResetEvent" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ManualResetEvent" />
      <apidata name="ManualResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.EventWaitHandle.GetAccessControl" />
        <element api="M:System.Threading.EventWaitHandle.Reset" />
        <element api="M:System.Threading.EventWaitHandle.Set" />
        <element api="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.ManualResetEvent.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEvent" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ManualResetEvent">
      <topicdata name="ManualResetEvent" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ManualResetEvent" />
      <apidata name="ManualResetEvent" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEvent" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEvent.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEvent" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ManualResetEventSlim">
      <topicdata group="api" />
      <apidata name="ManualResetEventSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ManualResetEventSlim.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ManualResetEventSlim.#ctor">
          <element api="M:System.Threading.ManualResetEventSlim.#ctor" />
          <element api="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean)" />
          <element api="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)" />
        </element>
        <element api="Overload:System.Threading.ManualResetEventSlim.Dispose">
          <element api="M:System.Threading.ManualResetEventSlim.Dispose" />
          <element api="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.ManualResetEventSlim.Reset" />
        <element api="M:System.Threading.ManualResetEventSlim.Set" />
        <element api="Overload:System.Threading.ManualResetEventSlim.Wait">
          <element api="M:System.Threading.ManualResetEventSlim.Wait" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.Threading.ManualResetEventSlim.IsSet" />
        <element api="P:System.Threading.ManualResetEventSlim.SpinCount" />
        <element api="P:System.Threading.ManualResetEventSlim.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ManualResetEventSlim">
      <topicdata name="ManualResetEventSlim" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ManualResetEventSlim" />
      <apidata name="ManualResetEventSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ManualResetEventSlim.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ManualResetEventSlim.Dispose">
          <element api="M:System.Threading.ManualResetEventSlim.Dispose" />
          <element api="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.ManualResetEventSlim.Reset" />
        <element api="M:System.Threading.ManualResetEventSlim.Set" />
        <element api="Overload:System.Threading.ManualResetEventSlim.Wait">
          <element api="M:System.Threading.ManualResetEventSlim.Wait" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ManualResetEventSlim">
      <topicdata name="ManualResetEventSlim" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ManualResetEventSlim" />
      <apidata name="ManualResetEventSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ManualResetEventSlim.#ctor" />
      <elements>
        <element api="P:System.Threading.ManualResetEventSlim.IsSet" />
        <element api="P:System.Threading.ManualResetEventSlim.SpinCount" />
        <element api="P:System.Threading.ManualResetEventSlim.WaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ManualResetEventSlim.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ManualResetEventSlim.#ctor" />
        <element api="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean)" />
        <element api="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ManualResetEventSlim.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ManualResetEventSlim.Dispose" />
        <element api="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ManualResetEventSlim.Wait">
      <topicdata name="Wait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Wait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ManualResetEventSlim.Wait" />
        <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)" />
        <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)" />
        <element api="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ManualResetEventSlim.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ManualResetEventSlim.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ManualResetEventSlim.#ctor" />
      <parameters>
        <parameter name="initialState">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="spinCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.ManualResetEventSlim.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ManualResetEventSlim.IsSet">
      <topicdata group="api" />
      <apidata name="IsSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSet" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Set">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ManualResetEventSlim.SpinCount">
      <topicdata group="api" />
      <apidata name="SpinCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpinCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait(System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ManualResetEventSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ManualResetEventSlim.WaitHandle">
      <topicdata group="api" />
      <apidata name="WaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ManualResetEventSlim" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.Monitor">
      <topicdata group="api" />
      <apidata name="Monitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Threading.Monitor.Enter">
          <element api="M:System.Threading.Monitor.Enter(System.Object)" />
          <element api="M:System.Threading.Monitor.Enter(System.Object,System.Boolean@)" />
        </element>
        <element api="M:System.Threading.Monitor.Exit(System.Object)" />
        <element api="M:System.Threading.Monitor.IsEntered(System.Object)" />
        <element api="M:System.Threading.Monitor.Pulse(System.Object)" />
        <element api="M:System.Threading.Monitor.PulseAll(System.Object)" />
        <element api="Overload:System.Threading.Monitor.TryEnter">
          <element api="M:System.Threading.Monitor.TryEnter(System.Object)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Boolean@)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32,System.Boolean@)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan,System.Boolean@)" />
        </element>
        <element api="Overload:System.Threading.Monitor.Wait">
          <element api="M:System.Threading.Monitor.Wait(System.Object)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Monitor">
      <topicdata name="Monitor" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Monitor" />
      <apidata name="Monitor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Monitor.Enter">
          <element api="M:System.Threading.Monitor.Enter(System.Object)" />
          <element api="M:System.Threading.Monitor.Enter(System.Object,System.Boolean@)" />
        </element>
        <element api="M:System.Threading.Monitor.Exit(System.Object)" />
        <element api="M:System.Threading.Monitor.IsEntered(System.Object)" />
        <element api="M:System.Threading.Monitor.Pulse(System.Object)" />
        <element api="M:System.Threading.Monitor.PulseAll(System.Object)" />
        <element api="Overload:System.Threading.Monitor.TryEnter">
          <element api="M:System.Threading.Monitor.TryEnter(System.Object)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Boolean@)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32,System.Boolean@)" />
          <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan,System.Boolean@)" />
        </element>
        <element api="Overload:System.Threading.Monitor.Wait">
          <element api="M:System.Threading.Monitor.Wait(System.Object)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Monitor.Enter">
      <topicdata name="Enter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Enter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Monitor.Enter(System.Object)" />
        <element api="M:System.Threading.Monitor.Enter(System.Object,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Monitor.TryEnter">
      <topicdata name="TryEnter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Monitor.TryEnter(System.Object)" />
        <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Boolean@)" />
        <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32)" />
        <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan)" />
        <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32,System.Boolean@)" />
        <element api="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Monitor.Wait">
      <topicdata name="Wait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Wait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Monitor.Wait(System.Object)" />
        <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32)" />
        <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan)" />
        <element api="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />
        <element api="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Enter(System.Object)">
      <topicdata group="api" />
      <apidata name="Enter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Enter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Enter(System.Object,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="Enter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Enter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Exit(System.Object)">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.IsEntered(System.Object)">
      <topicdata group="api" />
      <apidata name="IsEntered" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Pulse(System.Object)">
      <topicdata group="api" />
      <apidata name="Pulse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.PulseAll(System.Object)">
      <topicdata group="api" />
      <apidata name="PulseAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object,System.Int32,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.TryEnter(System.Object,System.TimeSpan,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Wait(System.Object)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Wait(System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Monitor.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Monitor" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.Mutex">
      <topicdata group="api" />
      <apidata name="Mutex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.Mutex.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Threading.WaitHandle" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Mutex.#ctor">
          <element api="M:System.Threading.Mutex.#ctor" />
          <element api="M:System.Threading.Mutex.#ctor(System.Boolean)" />
          <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String)" />
          <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)" />
          <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)" />
        </element>
        <element api="M:System.Threading.Mutex.GetAccessControl" />
        <element api="Overload:System.Threading.Mutex.OpenExisting">
          <element api="M:System.Threading.Mutex.OpenExisting(System.String)" />
          <element api="M:System.Threading.Mutex.OpenExisting(System.String,System.Security.AccessControl.MutexRights)" />
        </element>
        <element api="M:System.Threading.Mutex.ReleaseMutex" />
        <element api="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)" />
        <element api="Overload:System.Threading.Mutex.TryOpenExisting">
          <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)" />
          <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Security.AccessControl.MutexRights,System.Threading.Mutex@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.Mutex.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Mutex">
      <topicdata name="Mutex" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Mutex" />
      <apidata name="Mutex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.Mutex.#ctor" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Mutex.GetAccessControl" />
        <element api="Overload:System.Threading.Mutex.OpenExisting">
          <element api="M:System.Threading.Mutex.OpenExisting(System.String)" />
          <element api="M:System.Threading.Mutex.OpenExisting(System.String,System.Security.AccessControl.MutexRights)" />
        </element>
        <element api="M:System.Threading.Mutex.ReleaseMutex" />
        <element api="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)" />
        <element api="Overload:System.Threading.Mutex.TryOpenExisting">
          <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)" />
          <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Security.AccessControl.MutexRights,System.Threading.Mutex@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.Mutex.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.Mutex">
      <topicdata name="Mutex" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Mutex" />
      <apidata name="Mutex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.Mutex.#ctor" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Mutex.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Mutex.#ctor" />
        <element api="M:System.Threading.Mutex.#ctor(System.Boolean)" />
        <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String)" />
        <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)" />
        <element api="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Mutex.OpenExisting">
      <topicdata name="OpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Mutex.OpenExisting(System.String)" />
        <element api="M:System.Threading.Mutex.OpenExisting(System.String,System.Security.AccessControl.MutexRights)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Mutex.TryOpenExisting">
      <topicdata name="TryOpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)" />
        <element api="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Security.AccessControl.MutexRights,System.Threading.Mutex@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Mutex.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Mutex.#ctor" />
      <parameters>
        <parameter name="initiallyOwned">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.#ctor(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Mutex.#ctor" />
      <parameters>
        <parameter name="initiallyOwned">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Mutex.#ctor" />
      <parameters>
        <parameter name="initiallyOwned">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Mutex.#ctor" />
      <parameters>
        <parameter name="initiallyOwned">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="mutexSecurity">
          <type api="T:System.Security.AccessControl.MutexSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.GetAccessControl">
      <topicdata group="api" />
      <apidata name="GetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.AccessControl.MutexSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.OpenExisting(System.String)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Mutex.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Mutex" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.OpenExisting(System.String,System.Security.AccessControl.MutexRights)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Mutex.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.MutexRights" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Mutex" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.ReleaseMutex">
      <topicdata group="api" />
      <apidata name="ReleaseMutex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)">
      <topicdata group="api" />
      <apidata name="SetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mutexSecurity">
          <type api="T:System.Security.AccessControl.MutexSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Security.AccessControl.MutexRights,System.Threading.Mutex@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Mutex.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.MutexRights" ref="false" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.Mutex" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Mutex.TryOpenExisting(System.String,System.Threading.Mutex@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Mutex.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.Mutex" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Mutex" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.NativeOverlapped">
      <topicdata group="api" />
      <apidata name="NativeOverlapped" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Threading.NativeOverlapped.EventHandle" />
        <element api="F:System.Threading.NativeOverlapped.InternalHigh" />
        <element api="F:System.Threading.NativeOverlapped.InternalLow" />
        <element api="F:System.Threading.NativeOverlapped.OffsetHigh" />
        <element api="F:System.Threading.NativeOverlapped.OffsetLow" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.NativeOverlapped">
      <topicdata name="NativeOverlapped" group="list" subgroup="Methods" typeTopicId="T:System.Threading.NativeOverlapped" />
      <apidata name="NativeOverlapped" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" />
      </containers>
    </api>
    <api id="Fields.T:System.Threading.NativeOverlapped">
      <topicdata name="NativeOverlapped" group="list" subgroup="Fields" typeTopicId="T:System.Threading.NativeOverlapped" />
      <apidata name="NativeOverlapped" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="F:System.Threading.NativeOverlapped.EventHandle" />
        <element api="F:System.Threading.NativeOverlapped.InternalHigh" />
        <element api="F:System.Threading.NativeOverlapped.InternalLow" />
        <element api="F:System.Threading.NativeOverlapped.OffsetHigh" />
        <element api="F:System.Threading.NativeOverlapped.OffsetLow" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" />
      </containers>
    </api>
    <api id="F:System.Threading.NativeOverlapped.EventHandle">
      <topicdata group="api" />
      <apidata name="EventHandle" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.NativeOverlapped.InternalHigh">
      <topicdata group="api" />
      <apidata name="InternalHigh" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.NativeOverlapped.InternalLow">
      <topicdata group="api" />
      <apidata name="InternalLow" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.NativeOverlapped.OffsetHigh">
      <topicdata group="api" />
      <apidata name="OffsetHigh" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.NativeOverlapped.OffsetLow">
      <topicdata group="api" />
      <apidata name="OffsetLow" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.NativeOverlapped" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.Overlapped">
      <topicdata group="api" />
      <apidata name="Overlapped" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Overlapped.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Overlapped.#ctor">
          <element api="M:System.Threading.Overlapped.#ctor" />
          <element api="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)" />
          <element api="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" />
        </element>
        <element api="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)" />
        <element api="Overload:System.Threading.Overlapped.Pack">
          <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
          <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
        </element>
        <element api="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)" />
        <element api="Overload:System.Threading.Overlapped.UnsafePack">
          <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
          <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
        </element>
        <element api="P:System.Threading.Overlapped.AsyncResult" />
        <element api="P:System.Threading.Overlapped.EventHandle" />
        <element api="P:System.Threading.Overlapped.EventHandleIntPtr" />
        <element api="P:System.Threading.Overlapped.OffsetHigh" />
        <element api="P:System.Threading.Overlapped.OffsetLow" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Overlapped">
      <topicdata name="Overlapped" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Overlapped" />
      <apidata name="Overlapped" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Overlapped.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)" />
        <element api="Overload:System.Threading.Overlapped.Pack">
          <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
          <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
        </element>
        <element api="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)" />
        <element api="Overload:System.Threading.Overlapped.UnsafePack">
          <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
          <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.Overlapped">
      <topicdata name="Overlapped" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Overlapped" />
      <apidata name="Overlapped" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Overlapped.#ctor" />
      <elements>
        <element api="P:System.Threading.Overlapped.AsyncResult" />
        <element api="P:System.Threading.Overlapped.EventHandle" />
        <element api="P:System.Threading.Overlapped.EventHandleIntPtr" />
        <element api="P:System.Threading.Overlapped.OffsetHigh" />
        <element api="P:System.Threading.Overlapped.OffsetLow" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Overlapped.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Overlapped.#ctor" />
        <element api="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)" />
        <element api="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Overlapped.Pack">
      <topicdata name="Pack" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Pack" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)" />
        <element api="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Overlapped.UnsafePack">
      <topicdata name="UnsafePack" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnsafePack" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)" />
        <element api="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Overlapped.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Overlapped.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Overlapped.#ctor" />
      <parameters>
        <parameter name="offsetLo">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offsetHi">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hEvent">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This constructor is not 64-bit compatible.  Use the constructor that takes an IntPtr for the event handle.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Overlapped.#ctor" />
      <parameters>
        <parameter name="offsetLo">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offsetHi">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="hEvent">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="ar">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Overlapped.AsyncResult">
      <topicdata group="api" />
      <apidata name="AsyncResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsyncResult" />
      <setter name="set_AsyncResult" />
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Overlapped.EventHandle">
      <topicdata group="api" />
      <apidata name="EventHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EventHandle" />
      <setter name="set_EventHandle" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property is not 64-bit compatible.  Use EventHandleIntPtr instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Overlapped.EventHandleIntPtr">
      <topicdata group="api" />
      <apidata name="EventHandleIntPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EventHandleIntPtr" />
      <setter name="set_EventHandleIntPtr" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <topicdata group="api" />
      <apidata name="Free" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nativeOverlappedPtr">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Overlapped.OffsetHigh">
      <topicdata group="api" />
      <apidata name="OffsetHigh" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OffsetHigh" />
      <setter name="set_OffsetHigh" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Overlapped.OffsetLow">
      <topicdata group="api" />
      <apidata name="OffsetLow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OffsetLow" />
      <setter name="set_OffsetLow" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <topicdata group="api" />
      <apidata name="Pack" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Overlapped.Pack" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iocb">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is not safe.  Use Pack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Pack" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Overlapped.Pack" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iocb">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <topicdata group="api" />
      <apidata name="Unpack" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nativeOverlappedPtr">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Overlapped" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <topicdata group="api" />
      <apidata name="UnsafePack" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Overlapped.UnsafePack" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iocb">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is not safe.  Use UnsafePack (iocb, userData) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="UnsafePack" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Overlapped.UnsafePack" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iocb">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Overlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ParameterizedThreadStart">
      <topicdata group="api" />
      <apidata name="ParameterizedThreadStart" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.PreAllocatedOverlapped">
      <topicdata group="api" />
      <apidata name="PreAllocatedOverlapped" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
        <element api="M:System.Threading.PreAllocatedOverlapped.Dispose" />
        <element api="M:System.Threading.PreAllocatedOverlapped.Finalize" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.PreAllocatedOverlapped">
      <topicdata name="PreAllocatedOverlapped" group="list" subgroup="Methods" typeTopicId="T:System.Threading.PreAllocatedOverlapped" />
      <apidata name="PreAllocatedOverlapped" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.PreAllocatedOverlapped.Dispose" />
        <element api="M:System.Threading.PreAllocatedOverlapped.Finalize" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.PreAllocatedOverlapped" />
      </containers>
    </api>
    <api id="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="pinData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.PreAllocatedOverlapped" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.PreAllocatedOverlapped" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.PreAllocatedOverlapped" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ReaderWriterLock">
      <topicdata group="api" />
      <apidata name="ReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLock.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ReaderWriterLock.#ctor" />
        <element api="Overload:System.Threading.ReaderWriterLock.AcquireReaderLock">
          <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLock.AcquireWriterLock">
          <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.ReaderWriterLock.AnyWritersSince(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLock.DowngradeFromWriterLock(System.Threading.LockCookie@)" />
        <element api="M:System.Threading.ReaderWriterLock.Finalize" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseLock" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseReaderLock" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseWriterLock" />
        <element api="M:System.Threading.ReaderWriterLock.RestoreLock(System.Threading.LockCookie@)" />
        <element api="Overload:System.Threading.ReaderWriterLock.UpgradeToWriterLock">
          <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)" />
        </element>
        <element api="P:System.Threading.ReaderWriterLock.IsReaderLockHeld" />
        <element api="P:System.Threading.ReaderWriterLock.IsWriterLockHeld" />
        <element api="P:System.Threading.ReaderWriterLock.WriterSeqNum" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ReaderWriterLock">
      <topicdata name="ReaderWriterLock" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ReaderWriterLock" />
      <apidata name="ReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLock.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ReaderWriterLock.AcquireReaderLock">
          <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLock.AcquireWriterLock">
          <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.ReaderWriterLock.AnyWritersSince(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLock.DowngradeFromWriterLock(System.Threading.LockCookie@)" />
        <element api="M:System.Threading.ReaderWriterLock.Finalize" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseLock" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseReaderLock" />
        <element api="M:System.Threading.ReaderWriterLock.ReleaseWriterLock" />
        <element api="M:System.Threading.ReaderWriterLock.RestoreLock(System.Threading.LockCookie@)" />
        <element api="Overload:System.Threading.ReaderWriterLock.UpgradeToWriterLock">
          <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ReaderWriterLock">
      <topicdata name="ReaderWriterLock" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ReaderWriterLock" />
      <apidata name="ReaderWriterLock" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLock.#ctor" />
      <elements>
        <element api="P:System.Threading.ReaderWriterLock.IsReaderLockHeld" />
        <element api="P:System.Threading.ReaderWriterLock.IsWriterLockHeld" />
        <element api="P:System.Threading.ReaderWriterLock.WriterSeqNum" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLock.AcquireReaderLock">
      <topicdata name="AcquireReaderLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLock.AcquireWriterLock">
      <topicdata name="AcquireWriterLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLock.UpgradeToWriterLock">
      <topicdata name="UpgradeToWriterLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.AcquireReaderLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.AcquireReaderLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AcquireReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.AcquireReaderLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.AcquireWriterLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.AcquireWriterLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AcquireWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.AcquireWriterLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.AnyWritersSince(System.Int32)">
      <topicdata group="api" />
      <apidata name="AnyWritersSince" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seqNum">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.DowngradeFromWriterLock(System.Threading.LockCookie@)">
      <topicdata group="api" />
      <apidata name="DowngradeFromWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockCookie">
          <referenceTo>
            <type api="T:System.Threading.LockCookie" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLock.IsReaderLockHeld">
      <topicdata group="api" />
      <apidata name="IsReaderLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReaderLockHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLock.IsWriterLockHeld">
      <topicdata group="api" />
      <apidata name="IsWriterLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsWriterLockHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.ReleaseLock">
      <topicdata group="api" />
      <apidata name="ReleaseLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.ReleaseReaderLock">
      <topicdata group="api" />
      <apidata name="ReleaseReaderLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.ReleaseWriterLock">
      <topicdata group="api" />
      <apidata name="ReleaseWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.RestoreLock(System.Threading.LockCookie@)">
      <topicdata group="api" />
      <apidata name="RestoreLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockCookie">
          <referenceTo>
            <type api="T:System.Threading.LockCookie" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.UpgradeToWriterLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLock.UpgradeToWriterLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="UpgradeToWriterLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLock.UpgradeToWriterLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.LockCookie" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLock.WriterSeqNum">
      <topicdata group="api" />
      <apidata name="WriterSeqNum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WriterSeqNum" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLock" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ReaderWriterLockSlim">
      <topicdata group="api" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLockSlim.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.#ctor">
          <element api="M:System.Threading.ReaderWriterLockSlim.#ctor" />
          <element api="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)" />
        </element>
        <element api="M:System.Threading.ReaderWriterLockSlim.Dispose" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
        </element>
        <element api="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ReaderWriterLockSlim">
      <topicdata name="ReaderWriterLockSlim" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLockSlim.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ReaderWriterLockSlim.Dispose" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock" />
        <element api="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock" />
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
          <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ReaderWriterLockSlim">
      <topicdata name="ReaderWriterLockSlim" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ReaderWriterLockSlim" />
      <apidata name="ReaderWriterLockSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ReaderWriterLockSlim.#ctor" />
      <elements>
        <element api="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount" />
        <element api="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.#ctor" />
        <element api="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock">
      <topicdata name="TryEnterReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock">
      <topicdata name="TryEnterUpgradeableReadLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock">
      <topicdata name="TryEnterWriteLock" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)" />
        <element api="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ReaderWriterLockSlim.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.#ctor(System.Threading.LockRecursionPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ReaderWriterLockSlim.#ctor" />
      <parameters>
        <parameter name="recursionPolicy">
          <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.CurrentReadCount">
      <topicdata group="api" />
      <apidata name="CurrentReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentReadCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterReadLock">
      <topicdata group="api" />
      <apidata name="EnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock">
      <topicdata group="api" />
      <apidata name="EnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.EnterWriteLock">
      <topicdata group="api" />
      <apidata name="EnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitReadLock">
      <topicdata group="api" />
      <apidata name="ExitReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock">
      <topicdata group="api" />
      <apidata name="ExitUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.ExitWriteLock">
      <topicdata group="api" />
      <apidata name="ExitWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsReadLockHeld">
      <topicdata group="api" />
      <apidata name="IsReadLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadLockHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsUpgradeableReadLockHeld">
      <topicdata group="api" />
      <apidata name="IsUpgradeableReadLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsUpgradeableReadLockHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.IsWriteLockHeld">
      <topicdata group="api" />
      <apidata name="IsWriteLockHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsWriteLockHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursionPolicy">
      <topicdata group="api" />
      <apidata name="RecursionPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecursionPolicy" />
      <returns>
        <type api="T:System.Threading.LockRecursionPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveReadCount">
      <topicdata group="api" />
      <apidata name="RecursiveReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecursiveReadCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveUpgradeCount">
      <topicdata group="api" />
      <apidata name="RecursiveUpgradeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecursiveUpgradeCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.RecursiveWriteCount">
      <topicdata group="api" />
      <apidata name="RecursiveWriteCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecursiveWriteCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterReadLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterUpgradeableReadLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.Int32)">
      <topicdata group="api" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="TryEnterWriteLock" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ReaderWriterLockSlim.TryEnterWriteLock" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingReadCount">
      <topicdata group="api" />
      <apidata name="WaitingReadCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitingReadCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingUpgradeCount">
      <topicdata group="api" />
      <apidata name="WaitingUpgradeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitingUpgradeCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ReaderWriterLockSlim.WaitingWriteCount">
      <topicdata group="api" />
      <apidata name="WaitingWriteCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitingWriteCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ReaderWriterLockSlim" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.RegisteredWaitHandle">
      <topicdata group="api" />
      <apidata name="RegisteredWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.RegisteredWaitHandle.Unregister(System.Threading.WaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.RegisteredWaitHandle">
      <topicdata name="RegisteredWaitHandle" group="list" subgroup="Methods" typeTopicId="T:System.Threading.RegisteredWaitHandle" />
      <apidata name="RegisteredWaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.RegisteredWaitHandle.Unregister(System.Threading.WaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.RegisteredWaitHandle" />
      </containers>
    </api>
    <api id="M:System.Threading.RegisteredWaitHandle.Unregister(System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.Semaphore">
      <topicdata group="api" />
      <apidata name="Semaphore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Threading.WaitHandle" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Semaphore.#ctor">
          <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
          <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
          <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
          <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
        </element>
        <element api="M:System.Threading.Semaphore.GetAccessControl" />
        <element api="Overload:System.Threading.Semaphore.OpenExisting">
          <element api="M:System.Threading.Semaphore.OpenExisting(System.String)" />
          <element api="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
        </element>
        <element api="Overload:System.Threading.Semaphore.Release">
          <element api="M:System.Threading.Semaphore.Release" />
          <element api="M:System.Threading.Semaphore.Release(System.Int32)" />
        </element>
        <element api="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
        <element api="Overload:System.Threading.Semaphore.TryOpenExisting">
          <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
          <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.Semaphore.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Semaphore">
      <topicdata name="Semaphore" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Semaphore" />
      <apidata name="Semaphore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Semaphore.GetAccessControl" />
        <element api="Overload:System.Threading.Semaphore.OpenExisting">
          <element api="M:System.Threading.Semaphore.OpenExisting(System.String)" />
          <element api="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
        </element>
        <element api="Overload:System.Threading.Semaphore.Release">
          <element api="M:System.Threading.Semaphore.Release" />
          <element api="M:System.Threading.Semaphore.Release(System.Int32)" />
        </element>
        <element api="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
        <element api="Overload:System.Threading.Semaphore.TryOpenExisting">
          <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
          <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
        </element>
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="Overload:System.Threading.Semaphore.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.Semaphore">
      <topicdata name="Semaphore" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Semaphore" />
      <apidata name="Semaphore" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Semaphore.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
        <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
        <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
        <element api="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Semaphore.OpenExisting">
      <topicdata name="OpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Semaphore.OpenExisting(System.String)" />
        <element api="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Semaphore.Release">
      <topicdata name="Release" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Release" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Semaphore.Release" />
        <element api="M:System.Threading.Semaphore.Release(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Semaphore.TryOpenExisting">
      <topicdata name="TryOpenExisting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
        <element api="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Semaphore.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Semaphore.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Semaphore.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Semaphore.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maximumCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="createdNew" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="semaphoreSecurity">
          <type api="T:System.Security.AccessControl.SemaphoreSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.GetAccessControl">
      <topicdata group="api" />
      <apidata name="GetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.AccessControl.SemaphoreSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.OpenExisting(System.String)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Semaphore.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Semaphore" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)">
      <topicdata group="api" />
      <apidata name="OpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Semaphore.OpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.SemaphoreRights" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Semaphore" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.Release">
      <topicdata group="api" />
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Semaphore.Release" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.Release(System.Int32)">
      <topicdata group="api" />
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Semaphore.Release" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="releaseCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)">
      <topicdata group="api" />
      <apidata name="SetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="semaphoreSecurity">
          <type api="T:System.Security.AccessControl.SemaphoreSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Semaphore.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Security.AccessControl.SemaphoreRights" ref="false" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.Semaphore" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)">
      <topicdata group="api" />
      <apidata name="TryOpenExisting" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Semaphore.TryOpenExisting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Threading.Semaphore" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Semaphore" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.SemaphoreFullException">
      <topicdata group="api" />
      <apidata name="SemaphoreFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SemaphoreFullException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.SemaphoreFullException.#ctor">
          <element api="M:System.Threading.SemaphoreFullException.#ctor" />
          <element api="M:System.Threading.SemaphoreFullException.#ctor(System.String)" />
          <element api="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.SemaphoreFullException">
      <topicdata name="SemaphoreFullException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SemaphoreFullException" />
      <apidata name="SemaphoreFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SemaphoreFullException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SemaphoreFullException">
      <topicdata name="SemaphoreFullException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SemaphoreFullException" />
      <apidata name="SemaphoreFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SemaphoreFullException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.SemaphoreFullException">
      <topicdata name="SemaphoreFullException" group="list" subgroup="Events" typeTopicId="T:System.Threading.SemaphoreFullException" />
      <apidata name="SemaphoreFullException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SemaphoreFullException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreFullException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.SemaphoreFullException.#ctor" />
        <element api="M:System.Threading.SemaphoreFullException.#ctor(System.String)" />
        <element api="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreFullException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SemaphoreFullException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.SemaphoreFullException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SemaphoreFullException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SemaphoreFullException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreFullException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.SemaphoreSlim">
      <topicdata group="api" />
      <apidata name="SemaphoreSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.SemaphoreSlim.#ctor">
          <element api="M:System.Threading.SemaphoreSlim.#ctor(System.Int32)" />
          <element api="M:System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.Dispose">
          <element api="M:System.Threading.SemaphoreSlim.Dispose" />
          <element api="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.Release">
          <element api="M:System.Threading.SemaphoreSlim.Release" />
          <element api="M:System.Threading.SemaphoreSlim.Release(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.Wait">
          <element api="M:System.Threading.SemaphoreSlim.Wait" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.WaitAsync">
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.Threading.SemaphoreSlim.AvailableWaitHandle" />
        <element api="P:System.Threading.SemaphoreSlim.CurrentCount" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.SemaphoreSlim">
      <topicdata name="SemaphoreSlim" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SemaphoreSlim" />
      <apidata name="SemaphoreSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.SemaphoreSlim.Dispose">
          <element api="M:System.Threading.SemaphoreSlim.Dispose" />
          <element api="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.Release">
          <element api="M:System.Threading.SemaphoreSlim.Release" />
          <element api="M:System.Threading.SemaphoreSlim.Release(System.Int32)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.Wait">
          <element api="M:System.Threading.SemaphoreSlim.Wait" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.SemaphoreSlim.WaitAsync">
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SemaphoreSlim">
      <topicdata name="SemaphoreSlim" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SemaphoreSlim" />
      <apidata name="SemaphoreSlim" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.SemaphoreSlim.AvailableWaitHandle" />
        <element api="P:System.Threading.SemaphoreSlim.CurrentCount" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreSlim.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.SemaphoreSlim.#ctor(System.Int32)" />
        <element api="M:System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreSlim.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SemaphoreSlim.Dispose" />
        <element api="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreSlim.Release">
      <topicdata name="Release" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Release" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SemaphoreSlim.Release" />
        <element api="M:System.Threading.SemaphoreSlim.Release(System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreSlim.Wait">
      <topicdata name="Wait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Wait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SemaphoreSlim.Wait" />
        <element api="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32)" />
        <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)" />
        <element api="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SemaphoreSlim.WaitAsync">
      <topicdata name="WaitAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync" />
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)" />
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)" />
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SemaphoreSlim.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SemaphoreSlim.#ctor" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.SemaphoreSlim.AvailableWaitHandle">
      <topicdata group="api" />
      <apidata name="AvailableWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AvailableWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.SemaphoreSlim.CurrentCount">
      <topicdata group="api" />
      <apidata name="CurrentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.SemaphoreSlim.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Release">
      <topicdata group="api" />
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Release" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Release(System.Int32)">
      <topicdata group="api" />
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Release" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="releaseCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait(System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SemaphoreSlim.WaitAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SemaphoreSlim" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.SendOrPostCallback">
      <topicdata group="api" />
      <apidata name="SendOrPostCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="T:System.Threading.SpinLock">
      <topicdata group="api" />
      <apidata name="SpinLock" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.SpinLock.#ctor(System.Boolean)" />
        <element api="M:System.Threading.SpinLock.Enter(System.Boolean@)" />
        <element api="Overload:System.Threading.SpinLock.Exit">
          <element api="M:System.Threading.SpinLock.Exit" />
          <element api="M:System.Threading.SpinLock.Exit(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.SpinLock.TryEnter">
          <element api="M:System.Threading.SpinLock.TryEnter(System.Boolean@)" />
          <element api="M:System.Threading.SpinLock.TryEnter(System.Int32,System.Boolean@)" />
          <element api="M:System.Threading.SpinLock.TryEnter(System.TimeSpan,System.Boolean@)" />
        </element>
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Threading.SpinLock.IsHeld" />
        <element api="P:System.Threading.SpinLock.IsHeldByCurrentThread" />
        <element api="P:System.Threading.SpinLock.IsThreadOwnerTrackingEnabled" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.SpinLock">
      <topicdata name="SpinLock" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SpinLock" />
      <apidata name="SpinLock" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.SpinLock.Enter(System.Boolean@)" />
        <element api="Overload:System.Threading.SpinLock.Exit">
          <element api="M:System.Threading.SpinLock.Exit" />
          <element api="M:System.Threading.SpinLock.Exit(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.SpinLock.TryEnter">
          <element api="M:System.Threading.SpinLock.TryEnter(System.Boolean@)" />
          <element api="M:System.Threading.SpinLock.TryEnter(System.Int32,System.Boolean@)" />
          <element api="M:System.Threading.SpinLock.TryEnter(System.TimeSpan,System.Boolean@)" />
        </element>
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SpinLock">
      <topicdata name="SpinLock" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SpinLock" />
      <apidata name="SpinLock" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Threading.SpinLock.IsHeld" />
        <element api="P:System.Threading.SpinLock.IsHeldByCurrentThread" />
        <element api="P:System.Threading.SpinLock.IsThreadOwnerTrackingEnabled" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SpinLock.Exit">
      <topicdata name="Exit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Exit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SpinLock.Exit" />
        <element api="M:System.Threading.SpinLock.Exit(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SpinLock.TryEnter">
      <topicdata name="TryEnter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SpinLock.TryEnter(System.Boolean@)" />
        <element api="M:System.Threading.SpinLock.TryEnter(System.Int32,System.Boolean@)" />
        <element api="M:System.Threading.SpinLock.TryEnter(System.TimeSpan,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="enableThreadOwnerTracking">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.Enter(System.Boolean@)">
      <topicdata group="api" />
      <apidata name="Enter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.Exit">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SpinLock.Exit" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.Exit(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SpinLock.Exit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="useMemoryBarrier">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.SpinLock.IsHeld">
      <topicdata group="api" />
      <apidata name="IsHeld" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsHeld" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.SpinLock.IsHeldByCurrentThread">
      <topicdata group="api" />
      <apidata name="IsHeldByCurrentThread" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsHeldByCurrentThread" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.SpinLock.IsThreadOwnerTrackingEnabled">
      <topicdata group="api" />
      <apidata name="IsThreadOwnerTrackingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsThreadOwnerTrackingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.TryEnter(System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SpinLock.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.TryEnter(System.Int32,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SpinLock.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinLock.TryEnter(System.TimeSpan,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="TryEnter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.SpinLock.TryEnter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="lockTaken">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinLock" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.SpinWait">
      <topicdata group="api" />
      <apidata name="SpinWait" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.SpinWait.Reset" />
        <element api="M:System.Threading.SpinWait.SpinOnce" />
        <element api="Overload:System.Threading.SpinWait.SpinUntil">
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
        </element>
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Threading.SpinWait.Count" />
        <element api="P:System.Threading.SpinWait.NextSpinWillYield" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.SpinWait">
      <topicdata name="SpinWait" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SpinWait" />
      <apidata name="SpinWait" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Threading.SpinWait.Reset" />
        <element api="M:System.Threading.SpinWait.SpinOnce" />
        <element api="Overload:System.Threading.SpinWait.SpinUntil">
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
          <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
        </element>
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SpinWait">
      <topicdata name="SpinWait" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SpinWait" />
      <apidata name="SpinWait" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Threading.SpinWait.Count" />
        <element api="P:System.Threading.SpinWait.NextSpinWillYield" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SpinWait.SpinUntil">
      <topicdata name="SpinUntil" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SpinUntil" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})" />
        <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)" />
        <element api="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.SpinWait.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="P:System.Threading.SpinWait.NextSpinWillYield">
      <topicdata group="api" />
      <apidata name="NextSpinWillYield" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextSpinWillYield" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinWait.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinWait.SpinOnce">
      <topicdata group="api" />
      <apidata name="SpinOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
      <topicdata group="api" />
      <apidata name="SpinUntil" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.SpinWait.SpinUntil" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
      <topicdata group="api" />
      <apidata name="SpinUntil" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.SpinWait.SpinUntil" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="SpinUntil" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.SpinWait.SpinUntil" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SpinWait" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.SynchronizationContext">
      <topicdata group="api" />
      <apidata name="SynchronizationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.SynchronizationContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Forms.WindowsFormsSynchronizationContext" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherSynchronizationContext" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.SynchronizationContext.#ctor" />
        <element api="M:System.Threading.SynchronizationContext.CreateCopy" />
        <element api="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired" />
        <element api="M:System.Threading.SynchronizationContext.OperationCompleted" />
        <element api="M:System.Threading.SynchronizationContext.OperationStarted" />
        <element api="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)" />
        <element api="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired" />
        <element api="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
        <element api="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" />
        <element api="P:System.Threading.SynchronizationContext.Current" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.SynchronizationContext">
      <topicdata name="SynchronizationContext" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SynchronizationContext" />
      <apidata name="SynchronizationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.SynchronizationContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.SynchronizationContext.CreateCopy" />
        <element api="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired" />
        <element api="M:System.Threading.SynchronizationContext.OperationCompleted" />
        <element api="M:System.Threading.SynchronizationContext.OperationStarted" />
        <element api="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
        <element api="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)" />
        <element api="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired" />
        <element api="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
        <element api="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SynchronizationContext">
      <topicdata name="SynchronizationContext" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SynchronizationContext" />
      <apidata name="SynchronizationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.SynchronizationContext.#ctor" />
      <elements>
        <element api="P:System.Threading.SynchronizationContext.Current" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.CreateCopy">
      <topicdata group="api" />
      <apidata name="CreateCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.SynchronizationContext.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired">
      <topicdata group="api" />
      <apidata name="IsWaitNotificationRequired" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.OperationCompleted">
      <topicdata group="api" />
      <apidata name="OperationCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.OperationStarted">
      <topicdata group="api" />
      <apidata name="OperationStarted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Threading.SendOrPostCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)">
      <topicdata group="api" />
      <apidata name="SetSynchronizationContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="syncContext">
          <type api="T:System.Threading.SynchronizationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired">
      <topicdata group="api" />
      <apidata name="SetWaitNotificationRequired" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.IntPtr" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="waitAll">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitHelper" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.IntPtr" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="waitAll">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.SynchronizationLockException">
      <topicdata group="api" />
      <apidata name="SynchronizationLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SynchronizationLockException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.SynchronizationLockException.#ctor">
          <element api="M:System.Threading.SynchronizationLockException.#ctor" />
          <element api="M:System.Threading.SynchronizationLockException.#ctor(System.String)" />
          <element api="M:System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.SynchronizationLockException">
      <topicdata name="SynchronizationLockException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.SynchronizationLockException" />
      <apidata name="SynchronizationLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SynchronizationLockException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.SynchronizationLockException">
      <topicdata name="SynchronizationLockException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.SynchronizationLockException" />
      <apidata name="SynchronizationLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SynchronizationLockException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.SynchronizationLockException">
      <topicdata name="SynchronizationLockException" group="list" subgroup="Events" typeTopicId="T:System.Threading.SynchronizationLockException" />
      <apidata name="SynchronizationLockException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.SynchronizationLockException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.SynchronizationLockException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.SynchronizationLockException.#ctor" />
        <element api="M:System.Threading.SynchronizationLockException.#ctor(System.String)" />
        <element api="M:System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationLockException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SynchronizationLockException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.SynchronizationLockException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationLockException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SynchronizationLockException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.SynchronizationLockException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.SynchronizationLockException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.Thread">
      <topicdata group="api" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.InteropServices._Thread" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Thread.#ctor">
          <element api="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)" />
          <element api="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)" />
          <element api="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)" />
          <element api="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)" />
        </element>
        <element api="Overload:System.Threading.Thread.Abort">
          <element api="M:System.Threading.Thread.Abort" />
          <element api="M:System.Threading.Thread.Abort(System.Object)" />
        </element>
        <element api="M:System.Threading.Thread.AllocateDataSlot" />
        <element api="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.BeginCriticalRegion" />
        <element api="M:System.Threading.Thread.BeginThreadAffinity" />
        <element api="M:System.Threading.Thread.DisableComObjectEagerCleanup" />
        <element api="M:System.Threading.Thread.EndCriticalRegion" />
        <element api="M:System.Threading.Thread.EndThreadAffinity" />
        <element api="M:System.Threading.Thread.Finalize" />
        <element api="M:System.Threading.Thread.FreeNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.GetApartmentState" />
        <element api="M:System.Threading.Thread.GetCompressedStack" />
        <element api="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
        <element api="M:System.Threading.Thread.GetDomain" />
        <element api="M:System.Threading.Thread.GetDomainID" />
        <element api="M:System.Threading.Thread.GetHashCode" />
        <element api="M:System.Threading.Thread.GetNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.Interrupt" />
        <element api="Overload:System.Threading.Thread.Join">
          <element api="M:System.Threading.Thread.Join" />
          <element api="M:System.Threading.Thread.Join(System.Int32)" />
          <element api="M:System.Threading.Thread.Join(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.Thread.MemoryBarrier" />
        <element api="M:System.Threading.Thread.ResetAbort" />
        <element api="M:System.Threading.Thread.Resume" />
        <element api="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
        <element api="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)" />
        <element api="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
        <element api="Overload:System.Threading.Thread.Sleep">
          <element api="M:System.Threading.Thread.Sleep(System.Int32)" />
          <element api="M:System.Threading.Thread.Sleep(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.Thread.SpinWait(System.Int32)" />
        <element api="Overload:System.Threading.Thread.Start">
          <element api="M:System.Threading.Thread.Start" />
          <element api="M:System.Threading.Thread.Start(System.Object)" />
        </element>
        <element api="M:System.Threading.Thread.Suspend" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)" />
        <element api="Overload:System.Threading.Thread.VolatileRead">
          <element api="M:System.Threading.Thread.VolatileRead(System.Byte@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Double@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int16@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int32@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int64@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.IntPtr@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Object@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.SByte@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Single@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt16@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt32@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt64@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)" />
        </element>
        <element api="Overload:System.Threading.Thread.VolatileWrite">
          <element api="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)" />
        </element>
        <element api="M:System.Threading.Thread.Yield" />
        <element api="P:System.Threading.Thread.ApartmentState" />
        <element api="P:System.Threading.Thread.CurrentContext" />
        <element api="P:System.Threading.Thread.CurrentCulture" />
        <element api="P:System.Threading.Thread.CurrentPrincipal" />
        <element api="P:System.Threading.Thread.CurrentThread" />
        <element api="P:System.Threading.Thread.CurrentUICulture" />
        <element api="P:System.Threading.Thread.ExecutionContext" />
        <element api="P:System.Threading.Thread.IsAlive" />
        <element api="P:System.Threading.Thread.IsBackground" />
        <element api="P:System.Threading.Thread.IsThreadPoolThread" />
        <element api="P:System.Threading.Thread.ManagedThreadId" />
        <element api="P:System.Threading.Thread.Name" />
        <element api="P:System.Threading.Thread.Priority" />
        <element api="P:System.Threading.Thread.ThreadState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ClassInterfaceAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ClassInterfaceType" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Thread">
      <topicdata name="Thread" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Thread" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Thread.Abort">
          <element api="M:System.Threading.Thread.Abort" />
          <element api="M:System.Threading.Thread.Abort(System.Object)" />
        </element>
        <element api="M:System.Threading.Thread.AllocateDataSlot" />
        <element api="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.BeginCriticalRegion" />
        <element api="M:System.Threading.Thread.BeginThreadAffinity" />
        <element api="M:System.Threading.Thread.DisableComObjectEagerCleanup" />
        <element api="M:System.Threading.Thread.EndCriticalRegion" />
        <element api="M:System.Threading.Thread.EndThreadAffinity" />
        <element api="M:System.Threading.Thread.Finalize" />
        <element api="M:System.Threading.Thread.FreeNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.GetApartmentState" />
        <element api="M:System.Threading.Thread.GetCompressedStack" />
        <element api="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)" />
        <element api="M:System.Threading.Thread.GetDomain" />
        <element api="M:System.Threading.Thread.GetDomainID" />
        <element api="M:System.Threading.Thread.GetHashCode" />
        <element api="M:System.Threading.Thread.GetNamedDataSlot(System.String)" />
        <element api="M:System.Threading.Thread.Interrupt" />
        <element api="Overload:System.Threading.Thread.Join">
          <element api="M:System.Threading.Thread.Join" />
          <element api="M:System.Threading.Thread.Join(System.Int32)" />
          <element api="M:System.Threading.Thread.Join(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.Thread.MemoryBarrier" />
        <element api="M:System.Threading.Thread.ResetAbort" />
        <element api="M:System.Threading.Thread.Resume" />
        <element api="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)" />
        <element api="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)" />
        <element api="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)" />
        <element api="Overload:System.Threading.Thread.Sleep">
          <element api="M:System.Threading.Thread.Sleep(System.Int32)" />
          <element api="M:System.Threading.Thread.Sleep(System.TimeSpan)" />
        </element>
        <element api="M:System.Threading.Thread.SpinWait(System.Int32)" />
        <element api="Overload:System.Threading.Thread.Start">
          <element api="M:System.Threading.Thread.Start" />
          <element api="M:System.Threading.Thread.Start(System.Object)" />
        </element>
        <element api="M:System.Threading.Thread.Suspend" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)" />
        <element api="Overload:System.Threading.Thread.VolatileRead">
          <element api="M:System.Threading.Thread.VolatileRead(System.Byte@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Double@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int16@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int32@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Int64@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.IntPtr@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Object@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.SByte@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.Single@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt16@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt32@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UInt64@)" />
          <element api="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)" />
        </element>
        <element api="Overload:System.Threading.Thread.VolatileWrite">
          <element api="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)" />
          <element api="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)" />
        </element>
        <element api="M:System.Threading.Thread.Yield" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.Thread">
      <topicdata name="Thread" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Thread" />
      <apidata name="Thread" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.Thread.ApartmentState" />
        <element api="P:System.Threading.Thread.CurrentContext" />
        <element api="P:System.Threading.Thread.CurrentCulture" />
        <element api="P:System.Threading.Thread.CurrentPrincipal" />
        <element api="P:System.Threading.Thread.CurrentThread" />
        <element api="P:System.Threading.Thread.CurrentUICulture" />
        <element api="P:System.Threading.Thread.ExecutionContext" />
        <element api="P:System.Threading.Thread.IsAlive" />
        <element api="P:System.Threading.Thread.IsBackground" />
        <element api="P:System.Threading.Thread.IsThreadPoolThread" />
        <element api="P:System.Threading.Thread.ManagedThreadId" />
        <element api="P:System.Threading.Thread.Name" />
        <element api="P:System.Threading.Thread.Priority" />
        <element api="P:System.Threading.Thread.ThreadState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)" />
        <element api="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)" />
        <element api="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)" />
        <element api="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.Abort">
      <topicdata name="Abort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.Abort" />
        <element api="M:System.Threading.Thread.Abort(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.Join">
      <topicdata name="Join" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Join" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.Join" />
        <element api="M:System.Threading.Thread.Join(System.Int32)" />
        <element api="M:System.Threading.Thread.Join(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.Sleep">
      <topicdata name="Sleep" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.Sleep(System.Int32)" />
        <element api="M:System.Threading.Thread.Sleep(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.Start" />
        <element api="M:System.Threading.Thread.Start(System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.VolatileRead">
      <topicdata name="VolatileRead" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.VolatileRead(System.Byte@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Double@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Int16@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Int32@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Int64@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.IntPtr@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Object@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.SByte@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.Single@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.UInt16@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.UInt32@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.UInt64@)" />
        <element api="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Thread.VolatileWrite">
      <topicdata name="VolatileWrite" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)" />
        <element api="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Threading.ParameterizedThreadStart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.#ctor(System.Threading.ParameterizedThreadStart,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Threading.ParameterizedThreadStart" ref="true" />
        </parameter>
        <parameter name="maxStackSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Threading.ThreadStart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.#ctor(System.Threading.ThreadStart,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Thread.#ctor" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Threading.ThreadStart" ref="true" />
        </parameter>
        <parameter name="maxStackSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Abort" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Abort(System.Object)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Abort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stateInfo">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.AllocateDataSlot">
      <topicdata group="api" />
      <apidata name="AllocateDataSlot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.LocalDataStoreSlot" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.AllocateNamedDataSlot(System.String)">
      <topicdata group="api" />
      <apidata name="AllocateNamedDataSlot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.LocalDataStoreSlot" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Thread.ApartmentState">
      <topicdata group="api" />
      <apidata name="ApartmentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApartmentState" />
      <setter name="set_ApartmentState">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Synchronization">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
            <assignment name="SelfAffectingThreading">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The ApartmentState property has been deprecated.  Use GetApartmentState, SetApartmentState or TrySetApartmentState instead.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.BeginCriticalRegion">
      <topicdata group="api" />
      <apidata name="BeginCriticalRegion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.BeginThreadAffinity">
      <topicdata group="api" />
      <apidata name="BeginThreadAffinity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Thread.CurrentContext">
      <topicdata group="api" />
      <apidata name="CurrentContext" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentContext">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Runtime.Remoting.Contexts.Context" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.CurrentCulture">
      <topicdata group="api" />
      <apidata name="CurrentCulture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentCulture" />
      <setter name="set_CurrentCulture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.CurrentPrincipal">
      <topicdata group="api" />
      <apidata name="CurrentPrincipal" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentPrincipal" />
      <setter name="set_CurrentPrincipal" />
      <returns>
        <type api="T:System.Security.Principal.IPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.CurrentThread">
      <topicdata group="api" />
      <apidata name="CurrentThread" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentThread" />
      <returns>
        <type api="T:System.Threading.Thread" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.CurrentUICulture">
      <topicdata group="api" />
      <apidata name="CurrentUICulture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentUICulture" />
      <setter name="set_CurrentUICulture">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="ExternalThreading">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.DisableComObjectEagerCleanup">
      <topicdata group="api" />
      <apidata name="DisableComObjectEagerCleanup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.EndCriticalRegion">
      <topicdata group="api" />
      <apidata name="EndCriticalRegion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.EndThreadAffinity">
      <topicdata group="api" />
      <apidata name="EndThreadAffinity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Thread.ExecutionContext">
      <topicdata group="api" />
      <apidata name="ExecutionContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionContext" />
      <returns>
        <type api="T:System.Threading.ExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <type api="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.FreeNamedDataSlot(System.String)">
      <topicdata group="api" />
      <apidata name="FreeNamedDataSlot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.GetApartmentState">
      <topicdata group="api" />
      <apidata name="GetApartmentState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.ApartmentState" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.GetCompressedStack">
      <topicdata group="api" />
      <apidata name="GetCompressedStack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.CompressedStack" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Thread.GetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.GetData(System.LocalDataStoreSlot)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="slot">
          <type api="T:System.LocalDataStoreSlot" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.GetDomain">
      <topicdata group="api" />
      <apidata name="GetDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.AppDomain" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.GetDomainID">
      <topicdata group="api" />
      <apidata name="GetDomainID" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.GetNamedDataSlot(System.String)">
      <topicdata group="api" />
      <apidata name="GetNamedDataSlot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.LocalDataStoreSlot" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Interrupt">
      <topicdata group="api" />
      <apidata name="Interrupt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.IsAlive">
      <topicdata group="api" />
      <apidata name="IsAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.IsBackground">
      <topicdata group="api" />
      <apidata name="IsBackground" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsBackground" />
      <setter name="set_IsBackground">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="SelfAffectingThreading">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.IsThreadPoolThread">
      <topicdata group="api" />
      <apidata name="IsThreadPoolThread" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsThreadPoolThread" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Join">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Join" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Join(System.Int32)">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Join" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Join(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Join" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.Thread.ManagedThreadId">
      <topicdata group="api" />
      <apidata name="ManagedThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ManagedThreadId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.MemoryBarrier">
      <topicdata group="api" />
      <apidata name="MemoryBarrier" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="ExternalThreading">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Priority" />
      <setter name="set_Priority">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="SelfAffectingThreading">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.ResetAbort">
      <topicdata group="api" />
      <apidata name="ResetAbort" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Resume">
      <topicdata group="api" />
      <apidata name="Resume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Thread.Resume has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.SetApartmentState(System.Threading.ApartmentState)">
      <topicdata group="api" />
      <apidata name="SetApartmentState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Threading.ApartmentState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SelfAffectingThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.SetCompressedStack(System.Threading.CompressedStack)">
      <topicdata group="api" />
      <apidata name="SetCompressedStack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stack">
          <type api="T:System.Threading.CompressedStack" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Thread.SetCompressedStack is no longer supported. Please use the System.Threading.CompressedStack class</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.SetData(System.LocalDataStoreSlot,System.Object)">
      <topicdata group="api" />
      <apidata name="SetData" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="slot">
          <type api="T:System.LocalDataStoreSlot" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Sleep(System.Int32)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.Sleep" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.Sleep(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Sleep" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.Sleep" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.SpinWait(System.Int32)">
      <topicdata group="api" />
      <apidata name="SpinWait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="iterations">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Start" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Start(System.Object)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Thread.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Suspend">
      <topicdata group="api" />
      <apidata name="Suspend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Thread.Suspend has been deprecated.  Please use other classes in System.Threading, such as Monitor, Mutex, Event, and Semaphore, to synchronize Threads or protect resources.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <topicdata group="api" eiiName="_Thread.GetIDsOfNames" />
      <apidata name="GetIDsOfNames" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="riid" in="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="rgszNames">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="cNames">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="lcid">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rgDispId">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Thread.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
          <type api="T:System.Runtime.InteropServices._Thread" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
      <topicdata group="api" eiiName="_Thread.GetTypeInfo" />
      <apidata name="GetTypeInfo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="iTInfo">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="lcid">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="ppTInfo">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Thread.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)">
          <type api="T:System.Runtime.InteropServices._Thread" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#GetTypeInfoCount(System.UInt32@)">
      <topicdata group="api" eiiName="_Thread.GetTypeInfoCount" />
      <apidata name="GetTypeInfoCount" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pcTInfo" out="true">
          <referenceTo>
            <type api="T:System.UInt32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Thread.GetTypeInfoCount(System.UInt32@)">
          <type api="T:System.Runtime.InteropServices._Thread" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.System#Runtime#InteropServices#_Thread#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
      <topicdata group="api" eiiName="_Thread.Invoke" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="dispIdMember">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="riid" in="true">
          <referenceTo>
            <type api="T:System.Guid" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="lcid">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="wFlags">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="pDispParams">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="pVarResult">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="pExcepInfo">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="puArgErr">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Thread.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
          <type api="T:System.Runtime.InteropServices._Thread" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.Thread.ThreadState">
      <topicdata group="api" />
      <apidata name="ThreadState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ThreadState" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.TrySetApartmentState(System.Threading.ApartmentState)">
      <topicdata group="api" />
      <apidata name="TrySetApartmentState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Threading.ApartmentState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SelfAffectingThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Byte@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Byte" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Double@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Int16@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int16" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Int32@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Int64@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.IntPtr@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Object@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.SByte@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.SByte" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.Single@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.UInt16@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt16" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.UInt32@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.UInt64@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileRead(System.UIntPtr@)">
      <topicdata group="api" />
      <apidata name="VolatileRead" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileRead" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UIntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UIntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Byte@,System.Byte)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Byte" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Double@,System.Double)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Int16@,System.Int16)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int16" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Int32@,System.Int32)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Int64@,System.Int64)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.IntPtr@,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Object@,System.Object)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.SByte@,System.SByte)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.SByte" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.Single@,System.Single)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.UInt16@,System.UInt16)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt16" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.UInt32@,System.UInt32)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.UInt64@,System.UInt64)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UInt64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.VolatileWrite(System.UIntPtr@,System.UIntPtr)">
      <topicdata group="api" />
      <apidata name="VolatileWrite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Thread.VolatileWrite" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="address">
          <referenceTo>
            <type api="T:System.UIntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Thread.Yield">
      <topicdata group="api" />
      <apidata name="Yield" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Thread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ThreadAbortException">
      <topicdata group="api" />
      <apidata name="ThreadAbortException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Threading.ThreadAbortException.ExceptionState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ThreadAbortException">
      <topicdata name="ThreadAbortException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadAbortException" />
      <apidata name="ThreadAbortException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadAbortException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadAbortException">
      <topicdata name="ThreadAbortException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadAbortException" />
      <apidata name="ThreadAbortException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Threading.ThreadAbortException.ExceptionState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadAbortException" />
      </containers>
    </api>
    <api id="P:System.Threading.ThreadAbortException.ExceptionState">
      <topicdata group="api" />
      <apidata name="ExceptionState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExceptionState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadAbortException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadExceptionEventArgs">
      <topicdata group="api" />
      <apidata name="ThreadExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)" />
        <element api="P:System.Threading.ThreadExceptionEventArgs.Exception" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.ThreadExceptionEventArgs">
      <topicdata name="ThreadExceptionEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadExceptionEventArgs" />
      <apidata name="ThreadExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadExceptionEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadExceptionEventArgs">
      <topicdata name="ThreadExceptionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadExceptionEventArgs" />
      <apidata name="ThreadExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.ThreadExceptionEventArgs.Exception" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadExceptionEventArgs" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadExceptionEventArgs.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="t">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ThreadExceptionEventArgs.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadExceptionEventHandler">
      <topicdata group="api" />
      <apidata name="ThreadExceptionEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Threading.ThreadExceptionEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadInterruptedException">
      <topicdata group="api" />
      <apidata name="ThreadInterruptedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadInterruptedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.ThreadInterruptedException.#ctor">
          <element api="M:System.Threading.ThreadInterruptedException.#ctor" />
          <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.String)" />
          <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ThreadInterruptedException">
      <topicdata name="ThreadInterruptedException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadInterruptedException" />
      <apidata name="ThreadInterruptedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadInterruptedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadInterruptedException">
      <topicdata name="ThreadInterruptedException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadInterruptedException" />
      <apidata name="ThreadInterruptedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadInterruptedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.ThreadInterruptedException">
      <topicdata name="ThreadInterruptedException" group="list" subgroup="Events" typeTopicId="T:System.Threading.ThreadInterruptedException" />
      <apidata name="ThreadInterruptedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadInterruptedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadInterruptedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ThreadInterruptedException.#ctor" />
        <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.String)" />
        <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadInterruptedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadInterruptedException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.ThreadInterruptedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadInterruptedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadInterruptedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadInterruptedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadInterruptedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadInterruptedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadLocal`1">
      <topicdata group="api" />
      <apidata name="ThreadLocal" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ThreadLocal`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.ThreadLocal`1.#ctor">
          <element api="M:System.Threading.ThreadLocal`1.#ctor" />
          <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
          <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
          <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.ThreadLocal`1.Dispose">
          <element api="M:System.Threading.ThreadLocal`1.Dispose" />
          <element api="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.ThreadLocal`1.Finalize" />
        <element api="M:System.Threading.ThreadLocal`1.ToString" />
        <element api="P:System.Threading.ThreadLocal`1.IsValueCreated" />
        <element api="P:System.Threading.ThreadLocal`1.Value" />
        <element api="P:System.Threading.ThreadLocal`1.Values" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ThreadLocal`1">
      <topicdata name="ThreadLocal" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadLocal`1" />
      <apidata name="ThreadLocal" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ThreadLocal`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.ThreadLocal`1.Dispose">
          <element api="M:System.Threading.ThreadLocal`1.Dispose" />
          <element api="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Threading.ThreadLocal`1.Finalize" />
        <element api="M:System.Threading.ThreadLocal`1.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadLocal`1">
      <topicdata name="ThreadLocal" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadLocal`1" />
      <apidata name="ThreadLocal" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.ThreadLocal`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Threading.ThreadLocal`1.IsValueCreated" />
        <element api="P:System.Threading.ThreadLocal`1.Value" />
        <element api="P:System.Threading.ThreadLocal`1.Values" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadLocal`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ThreadLocal`1.#ctor" />
        <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)" />
        <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})" />
        <element api="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadLocal`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadLocal`1.Dispose" />
        <element api="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadLocal`1.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadLocal`1.#ctor" />
      <parameters>
        <parameter name="trackAllValues">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadLocal`1.#ctor" />
      <parameters>
        <parameter name="valueFactory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Threading.ThreadLocal`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadLocal`1.#ctor" />
      <parameters>
        <parameter name="valueFactory">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Threading.ThreadLocal`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="trackAllValues">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ThreadLocal`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.ThreadLocal`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ThreadLocal`1.IsValueCreated">
      <topicdata group="api" />
      <apidata name="IsValueCreated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsValueCreated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadLocal`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ThreadLocal`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:System.Threading.ThreadLocal`1" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.ThreadLocal`1.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Threading.ThreadLocal`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadLocal`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadPool">
      <topicdata group="api" />
      <apidata name="ThreadPool" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Threading.ThreadPool.BindHandle">
          <element api="M:System.Threading.ThreadPool.BindHandle(System.IntPtr)" />
          <element api="M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
        </element>
        <element api="M:System.Threading.ThreadPool.GetAvailableThreads(System.Int32@,System.Int32@)" />
        <element api="M:System.Threading.ThreadPool.GetMaxThreads(System.Int32@,System.Int32@)" />
        <element api="M:System.Threading.ThreadPool.GetMinThreads(System.Int32@,System.Int32@)" />
        <element api="Overload:System.Threading.ThreadPool.QueueUserWorkItem">
          <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)" />
          <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
        </element>
        <element api="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject">
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
        </element>
        <element api="M:System.Threading.ThreadPool.SetMaxThreads(System.Int32,System.Int32)" />
        <element api="M:System.Threading.ThreadPool.SetMinThreads(System.Int32,System.Int32)" />
        <element api="M:System.Threading.ThreadPool.UnsafeQueueNativeOverlapped(System.Threading.NativeOverlapped*)" />
        <element api="M:System.Threading.ThreadPool.UnsafeQueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
        <element api="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject">
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ThreadPool">
      <topicdata name="ThreadPool" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadPool" />
      <apidata name="ThreadPool" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.ThreadPool.BindHandle">
          <element api="M:System.Threading.ThreadPool.BindHandle(System.IntPtr)" />
          <element api="M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
        </element>
        <element api="M:System.Threading.ThreadPool.GetAvailableThreads(System.Int32@,System.Int32@)" />
        <element api="M:System.Threading.ThreadPool.GetMaxThreads(System.Int32@,System.Int32@)" />
        <element api="M:System.Threading.ThreadPool.GetMinThreads(System.Int32@,System.Int32@)" />
        <element api="Overload:System.Threading.ThreadPool.QueueUserWorkItem">
          <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)" />
          <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
        </element>
        <element api="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject">
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
        </element>
        <element api="M:System.Threading.ThreadPool.SetMaxThreads(System.Int32,System.Int32)" />
        <element api="M:System.Threading.ThreadPool.SetMinThreads(System.Int32,System.Int32)" />
        <element api="M:System.Threading.ThreadPool.UnsafeQueueNativeOverlapped(System.Threading.NativeOverlapped*)" />
        <element api="M:System.Threading.ThreadPool.UnsafeQueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
        <element api="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject">
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
          <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadPool.BindHandle">
      <topicdata name="BindHandle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BindHandle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadPool.BindHandle(System.IntPtr)" />
        <element api="M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadPool.QueueUserWorkItem">
      <topicdata name="QueueUserWorkItem" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="QueueUserWorkItem" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)" />
        <element api="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject">
      <topicdata name="RegisterWaitForSingleObject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RegisterWaitForSingleObject" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject">
      <topicdata name="UnsafeRegisterWaitForSingleObject" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnsafeRegisterWaitForSingleObject" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)" />
        <element api="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.BindHandle(System.IntPtr)">
      <topicdata group="api" />
      <apidata name="BindHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.BindHandle" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="osHandle">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ThreadPool.BindHandle(IntPtr) has been deprecated.  Please use ThreadPool.BindHandle(SafeHandle) instead.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="BindHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.BindHandle" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="osHandle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.GetAvailableThreads(System.Int32@,System.Int32@)">
      <topicdata group="api" />
      <apidata name="GetAvailableThreads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workerThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="completionPortThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.GetMaxThreads(System.Int32@,System.Int32@)">
      <topicdata group="api" />
      <apidata name="GetMaxThreads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workerThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="completionPortThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.GetMinThreads(System.Int32@,System.Int32@)">
      <topicdata group="api" />
      <apidata name="GetMinThreads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workerThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="completionPortThreads" out="true">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
      <topicdata group="api" />
      <apidata name="QueueUserWorkItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.QueueUserWorkItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="QueueUserWorkItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.QueueUserWorkItem" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.RegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.SetMaxThreads(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetMaxThreads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workerThreads">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="completionPortThreads">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.SetMinThreads(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetMinThreads" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workerThreads">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="completionPortThreads">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeQueueNativeOverlapped(System.Threading.NativeOverlapped*)">
      <topicdata group="api" />
      <apidata name="UnsafeQueueNativeOverlapped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="overlapped">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeQueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="UnsafeQueueUserWorkItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="UnsafeRegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)">
      <topicdata group="api" />
      <apidata name="UnsafeRegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="UnsafeRegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="UnsafeRegisterWaitForSingleObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="callBack">
          <type api="T:System.Threading.WaitOrTimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeOutInterval">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="executeOnlyOnce">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.RegisteredWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPool" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ThreadPoolBoundHandle">
      <topicdata group="api" />
      <apidata name="ThreadPoolBoundHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped">
          <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
          <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
        </element>
        <element api="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
        <element api="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.ThreadPoolBoundHandle">
      <topicdata name="ThreadPoolBoundHandle" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadPoolBoundHandle" />
      <apidata name="ThreadPoolBoundHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped">
          <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
          <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
        </element>
        <element api="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.Dispose" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadPoolBoundHandle">
      <topicdata name="ThreadPoolBoundHandle" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadPoolBoundHandle" />
      <apidata name="ThreadPoolBoundHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.ThreadPoolBoundHandle.Handle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped">
      <topicdata name="AllocateNativeOverlapped" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AllocateNativeOverlapped" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)" />
        <element api="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="AllocateNativeOverlapped" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.IOCompletionCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="pinData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <topicdata group="api" />
      <apidata name="AllocateNativeOverlapped" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="preAllocated">
          <type api="T:System.Threading.PreAllocatedOverlapped" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <pointerTo>
          <type api="T:System.Threading.NativeOverlapped" ref="false" />
        </pointerTo>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="BindHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <topicdata group="api" />
      <apidata name="FreeNativeOverlapped" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="overlapped">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <topicdata group="api" />
      <apidata name="GetNativeOverlappedState" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="overlapped">
          <pointerTo>
            <type api="T:System.Threading.NativeOverlapped" ref="false" />
          </pointerTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPoolBoundHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadPriority">
      <topicdata group="api" />
      <apidata name="ThreadPriority" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Threading.ThreadPriority.Lowest" />
        <element api="F:System.Threading.ThreadPriority.BelowNormal" />
        <element api="F:System.Threading.ThreadPriority.Normal" />
        <element api="F:System.Threading.ThreadPriority.AboveNormal" />
        <element api="F:System.Threading.ThreadPriority.Highest" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Threading.ThreadPriority.AboveNormal">
      <topicdata group="api" notopic="" />
      <apidata name="AboveNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadPriority.BelowNormal">
      <topicdata group="api" notopic="" />
      <apidata name="BelowNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadPriority.Highest">
      <topicdata group="api" notopic="" />
      <apidata name="Highest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadPriority.Lowest">
      <topicdata group="api" notopic="" />
      <apidata name="Lowest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadPriority.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadPriority" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadStart">
      <topicdata group="api" />
      <apidata name="ThreadStart" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.ThreadStartException">
      <topicdata group="api" />
      <apidata name="ThreadStartException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.ThreadStartException">
      <topicdata name="ThreadStartException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadStartException" />
      <apidata name="ThreadStartException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStartException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadStartException">
      <topicdata name="ThreadStartException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadStartException" />
      <apidata name="ThreadStartException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStartException" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadState">
      <topicdata group="api" />
      <apidata name="ThreadState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Threading.ThreadState.Running" />
        <element api="F:System.Threading.ThreadState.StopRequested" />
        <element api="F:System.Threading.ThreadState.SuspendRequested" />
        <element api="F:System.Threading.ThreadState.Background" />
        <element api="F:System.Threading.ThreadState.Unstarted" />
        <element api="F:System.Threading.ThreadState.Stopped" />
        <element api="F:System.Threading.ThreadState.WaitSleepJoin" />
        <element api="F:System.Threading.ThreadState.Suspended" />
        <element api="F:System.Threading.ThreadState.AbortRequested" />
        <element api="F:System.Threading.ThreadState.Aborted" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Threading.ThreadState.Aborted">
      <topicdata group="api" notopic="" />
      <apidata name="Aborted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.AbortRequested">
      <topicdata group="api" notopic="" />
      <apidata name="AbortRequested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.Background">
      <topicdata group="api" notopic="" />
      <apidata name="Background" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.Running">
      <topicdata group="api" notopic="" />
      <apidata name="Running" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.StopRequested">
      <topicdata group="api" notopic="" />
      <apidata name="StopRequested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.Suspended">
      <topicdata group="api" notopic="" />
      <apidata name="Suspended" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.SuspendRequested">
      <topicdata group="api" notopic="" />
      <apidata name="SuspendRequested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.Unstarted">
      <topicdata group="api" notopic="" />
      <apidata name="Unstarted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Threading.ThreadState.WaitSleepJoin">
      <topicdata group="api" notopic="" />
      <apidata name="WaitSleepJoin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.ThreadState" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Threading.ThreadStateException">
      <topicdata group="api" />
      <apidata name="ThreadStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadStateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.ThreadStateException.#ctor">
          <element api="M:System.Threading.ThreadStateException.#ctor" />
          <element api="M:System.Threading.ThreadStateException.#ctor(System.String)" />
          <element api="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.ThreadStateException">
      <topicdata name="ThreadStateException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.ThreadStateException" />
      <apidata name="ThreadStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadStateException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.ThreadStateException">
      <topicdata name="ThreadStateException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.ThreadStateException" />
      <apidata name="ThreadStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadStateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.ThreadStateException">
      <topicdata name="ThreadStateException" group="list" subgroup="Events" typeTopicId="T:System.Threading.ThreadStateException" />
      <apidata name="ThreadStateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.ThreadStateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.ThreadStateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.ThreadStateException.#ctor" />
        <element api="M:System.Threading.ThreadStateException.#ctor(System.String)" />
        <element api="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadStateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadStateException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.ThreadStateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadStateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadStateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.ThreadStateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.ThreadStateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.ThreadStateException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Threading.Timeout.Infinite" />
        <element api="F:System.Threading.Timeout.InfiniteTimeSpan" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Fields.T:System.Threading.Timeout">
      <topicdata name="Timeout" group="list" subgroup="Fields" typeTopicId="T:System.Threading.Timeout" />
      <apidata name="Timeout" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.Timeout.Infinite" />
        <element api="F:System.Threading.Timeout.InfiniteTimeSpan" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timeout" />
      </containers>
    </api>
    <api id="F:System.Threading.Timeout.Infinite">
      <topicdata group="api" />
      <apidata name="Infinite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timeout" ref="true" />
      </containers>
    </api>
    <api id="F:System.Threading.Timeout.InfiniteTimeSpan">
      <topicdata group="api" />
      <apidata name="InfiniteTimeSpan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timeout" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.Timer">
      <topicdata group="api" />
      <apidata name="Timer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Timer.#ctor">
          <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
          <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
          <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
          <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
          <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
        </element>
        <element api="Overload:System.Threading.Timer.Change">
          <element api="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
          <element api="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
          <element api="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
          <element api="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
        </element>
        <element api="Overload:System.Threading.Timer.Dispose">
          <element api="M:System.Threading.Timer.Dispose" />
          <element api="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.Timer">
      <topicdata name="Timer" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Timer" />
      <apidata name="Timer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Timer.Change">
          <element api="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
          <element api="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
          <element api="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
          <element api="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
        </element>
        <element api="Overload:System.Threading.Timer.Dispose">
          <element api="M:System.Threading.Timer.Dispose" />
          <element api="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Timer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
        <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
        <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
        <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
        <element api="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Timer.Change">
      <topicdata name="Change" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Change" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
        <element api="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
        <element api="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
        <element api="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Timer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Timer.Dispose" />
        <element api="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Timer.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.TimerCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Timer.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.TimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dueTime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Timer.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.TimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dueTime">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Timer.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.TimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dueTime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Timer.#ctor" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Threading.TimerCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="dueTime">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Timer.Change(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Change" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Change" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dueTime">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.Change(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="Change" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Change" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dueTime">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Change" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Change" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dueTime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Change" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Change" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dueTime">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="period">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Timer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Timer.Dispose" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="notifyObject">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Timer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.TimerCallback">
      <topicdata group="api" />
      <apidata name="TimerCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.Volatile">
      <topicdata group="api" />
      <apidata name="Volatile" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Threading.Volatile.Read">
          <element api="M:System.Threading.Volatile.Read(System.Boolean@)" />
          <element api="M:System.Threading.Volatile.Read(System.Byte@)" />
          <element api="M:System.Threading.Volatile.Read(System.Double@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int16@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int32@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int64@)" />
          <element api="M:System.Threading.Volatile.Read(System.IntPtr@)" />
          <element api="M:System.Threading.Volatile.Read``1(``0@)" />
          <element api="M:System.Threading.Volatile.Read(System.SByte@)" />
          <element api="M:System.Threading.Volatile.Read(System.Single@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt16@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt32@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt64@)" />
          <element api="M:System.Threading.Volatile.Read(System.UIntPtr@)" />
        </element>
        <element api="Overload:System.Threading.Volatile.Write">
          <element api="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)" />
          <element api="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)" />
          <element api="M:System.Threading.Volatile.Write(System.Double@,System.Double)" />
          <element api="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
          <element api="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)" />
          <element api="M:System.Threading.Volatile.Write(System.Single@,System.Single)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)" />
          <element api="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)" />
          <element api="M:System.Threading.Volatile.Write``1(``0@,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
    </api>
    <api id="Methods.T:System.Threading.Volatile">
      <topicdata name="Volatile" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Volatile" />
      <apidata name="Volatile" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Volatile.Read">
          <element api="M:System.Threading.Volatile.Read(System.Boolean@)" />
          <element api="M:System.Threading.Volatile.Read(System.Byte@)" />
          <element api="M:System.Threading.Volatile.Read(System.Double@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int16@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int32@)" />
          <element api="M:System.Threading.Volatile.Read(System.Int64@)" />
          <element api="M:System.Threading.Volatile.Read(System.IntPtr@)" />
          <element api="M:System.Threading.Volatile.Read``1(``0@)" />
          <element api="M:System.Threading.Volatile.Read(System.SByte@)" />
          <element api="M:System.Threading.Volatile.Read(System.Single@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt16@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt32@)" />
          <element api="M:System.Threading.Volatile.Read(System.UInt64@)" />
          <element api="M:System.Threading.Volatile.Read(System.UIntPtr@)" />
        </element>
        <element api="Overload:System.Threading.Volatile.Write">
          <element api="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)" />
          <element api="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)" />
          <element api="M:System.Threading.Volatile.Write(System.Double@,System.Double)" />
          <element api="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
          <element api="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
          <element api="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
          <element api="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
          <element api="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)" />
          <element api="M:System.Threading.Volatile.Write(System.Single@,System.Single)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)" />
          <element api="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)" />
          <element api="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)" />
          <element api="M:System.Threading.Volatile.Write``1(``0@,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Volatile.Read">
      <topicdata name="Read" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Read" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Volatile.Read(System.Boolean@)" />
        <element api="M:System.Threading.Volatile.Read(System.Byte@)" />
        <element api="M:System.Threading.Volatile.Read(System.Double@)" />
        <element api="M:System.Threading.Volatile.Read(System.Int16@)" />
        <element api="M:System.Threading.Volatile.Read(System.Int32@)" />
        <element api="M:System.Threading.Volatile.Read(System.Int64@)" />
        <element api="M:System.Threading.Volatile.Read(System.IntPtr@)" />
        <element api="M:System.Threading.Volatile.Read``1(``0@)" />
        <element api="M:System.Threading.Volatile.Read(System.SByte@)" />
        <element api="M:System.Threading.Volatile.Read(System.Single@)" />
        <element api="M:System.Threading.Volatile.Read(System.UInt16@)" />
        <element api="M:System.Threading.Volatile.Read(System.UInt32@)" />
        <element api="M:System.Threading.Volatile.Read(System.UInt64@)" />
        <element api="M:System.Threading.Volatile.Read(System.UIntPtr@)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.Volatile.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)" />
        <element api="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)" />
        <element api="M:System.Threading.Volatile.Write(System.Double@,System.Double)" />
        <element api="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
        <element api="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
        <element api="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
        <element api="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
        <element api="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)" />
        <element api="M:System.Threading.Volatile.Write(System.Single@,System.Single)" />
        <element api="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)" />
        <element api="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)" />
        <element api="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)" />
        <element api="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)" />
        <element api="M:System.Threading.Volatile.Write``1(``0@,``0)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Boolean@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Byte@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Byte" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Double@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Int16@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int16" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Int32@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Int64@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.IntPtr@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.SByte@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.SByte" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.Single@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.UInt16@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt16" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.UInt32@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.UInt64@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Read(System.UIntPtr@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UIntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UIntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Read``1(``0@)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Read" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="location">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.Volatile.Read``1(``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Threading.Volatile.Read``1(``0@)" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Byte" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Double@,System.Double)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Double" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int16" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.SByte" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.Single@,System.Single)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.Single" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt16" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UInt64" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="location">
          <referenceTo>
            <type api="T:System.UIntPtr" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.Volatile.Write``1(``0@,``0)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Volatile.Write" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="location">
          <referenceTo>
            <template name="T" index="0" api="M:System.Threading.Volatile.Write``1(``0@,``0)" />
          </referenceTo>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Threading.Volatile.Write``1(``0@,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.Volatile" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.WaitCallback">
      <topicdata group="api" />
      <apidata name="WaitCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.WaitHandle">
      <topicdata group="api" />
      <apidata name="WaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Threading.EventWaitHandle" ref="true" />
          <type api="T:System.Threading.Mutex" ref="true" />
          <type api="T:System.Threading.Semaphore" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="F:System.Threading.WaitHandle.InvalidHandle" />
        <element api="F:System.Threading.WaitHandle.WaitTimeout" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Threading.WaitHandle.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.WaitHandle.#ctor" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="Overload:System.Threading.WaitHandle.Dispose">
          <element api="M:System.Threading.WaitHandle.Dispose" />
          <element api="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.SignalAndWait">
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitAll">
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitAny">
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.WaitHandle">
      <topicdata name="WaitHandle" group="list" subgroup="Methods" typeTopicId="T:System.Threading.WaitHandle" />
      <apidata name="WaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" source="extension">
          <apidata name="GetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" source="extension">
          <apidata name="SetSafeWaitHandle" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="value">
              <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Threading" />
            <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Threading.WaitHandle.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.WaitHandle.Close" />
        <element api="Overload:System.Threading.WaitHandle.Dispose">
          <element api="M:System.Threading.WaitHandle.Dispose" />
          <element api="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.SignalAndWait">
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitAll">
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitAny">
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.WaitHandle.WaitOne">
          <element api="M:System.Threading.WaitHandle.WaitOne" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
          <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.WaitHandle">
      <topicdata name="WaitHandle" group="list" subgroup="Properties" typeTopicId="T:System.Threading.WaitHandle" />
      <apidata name="WaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.WaitHandle.Handle" />
        <element api="P:System.Threading.WaitHandle.SafeWaitHandle" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" />
      </containers>
    </api>
    <api id="Fields.T:System.Threading.WaitHandle">
      <topicdata name="WaitHandle" group="list" subgroup="Fields" typeTopicId="T:System.Threading.WaitHandle" />
      <apidata name="WaitHandle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.WaitHandle.InvalidHandle" />
        <element api="F:System.Threading.WaitHandle.WaitTimeout" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.WaitHandle.Dispose" />
        <element api="M:System.Threading.WaitHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandle.SignalAndWait">
      <topicdata name="SignalAndWait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)" />
        <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)" />
        <element api="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandle.WaitAll">
      <topicdata name="WaitAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])" />
        <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)" />
        <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)" />
        <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
        <element api="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandle.WaitAny">
      <topicdata name="WaitAny" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])" />
        <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)" />
        <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)" />
        <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" />
        <element api="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandle.WaitOne">
      <topicdata name="WaitOne" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.WaitHandle.WaitOne" />
        <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32)" />
        <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)" />
        <element api="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" />
        <element api="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.WaitHandle.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="explicitDisposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.WaitHandle.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Handle" />
      <setter name="set_Handle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Use the SafeWaitHandle property instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Threading.WaitHandle.InvalidHandle">
      <topicdata group="api" />
      <apidata name="InvalidHandle" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Threading.WaitHandle.SafeWaitHandle">
      <topicdata group="api" />
      <apidata name="SafeWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SafeWaitHandle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SafeWaitHandle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toSignal">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="toWaitOn">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toSignal">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="toWaitOn">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SignalAndWait" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.SignalAndWait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toSignal">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="toWaitOn">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.WaitHandle.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandles">
          <arrayOf rank="1">
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitOne">
      <topicdata group="api" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.WaitOne" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitOne(System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.WaitOne" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.WaitOne" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.WaitOne" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WaitOne" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.WaitHandle.WaitOne" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="exitContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="F:System.Threading.WaitHandle.WaitTimeout">
      <topicdata group="api" />
      <apidata name="WaitTimeout" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>258</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.WaitHandleCannotBeOpenedException">
      <topicdata group="api" />
      <apidata name="WaitHandleCannotBeOpenedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor">
          <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
          <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)" />
          <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.WaitHandleCannotBeOpenedException">
      <topicdata name="WaitHandleCannotBeOpenedException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.WaitHandleCannotBeOpenedException" />
      <apidata name="WaitHandleCannotBeOpenedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Threading.WaitHandleCannotBeOpenedException">
      <topicdata name="WaitHandleCannotBeOpenedException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.WaitHandleCannotBeOpenedException" />
      <apidata name="WaitHandleCannotBeOpenedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" />
      </containers>
    </api>
    <api id="Events.T:System.Threading.WaitHandleCannotBeOpenedException">
      <topicdata name="WaitHandleCannotBeOpenedException" group="list" subgroup="Events" typeTopicId="T:System.Threading.WaitHandleCannotBeOpenedException" />
      <apidata name="WaitHandleCannotBeOpenedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" />
      </containers>
    </api>
    <api id="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
        <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)" />
        <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleCannotBeOpenedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Threading.WaitHandleExtensions">
      <topicdata group="api" />
      <apidata name="WaitHandleExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" />
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Threading.WaitHandleExtensions">
      <topicdata name="WaitHandleExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Threading.WaitHandleExtensions" />
      <apidata name="WaitHandleExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)" />
        <element api="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleExtensions" />
      </containers>
    </api>
    <api id="M:System.Threading.WaitHandleExtensions.GetSafeWaitHandle(System.Threading.WaitHandle)">
      <topicdata group="api" />
      <apidata name="GetSafeWaitHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Threading.WaitHandleExtensions.SetSafeWaitHandle(System.Threading.WaitHandle,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
      <topicdata group="api" />
      <apidata name="SetSafeWaitHandle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.Win32.SafeHandles.SafeWaitHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
        <type api="T:System.Threading.WaitHandleExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Threading.WaitOrTimerCallback">
      <topicdata group="api" />
      <apidata name="WaitOrTimerCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timedOut">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Threading" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>