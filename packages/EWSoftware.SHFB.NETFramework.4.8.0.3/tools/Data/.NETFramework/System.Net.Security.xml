<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net.Security">
      <topicdata group="api" />
      <apidata name="System.Net.Security" group="namespace" />
      <elements>
        <element api="T:System.Net.Security.AuthenticatedStream" />
        <element api="T:System.Net.Security.AuthenticationLevel" />
        <element api="T:System.Net.Security.ProtectionLevel" />
        <element api="T:System.Net.Security.NegotiateStream" />
        <element api="T:System.Net.Security.SslPolicyErrors" />
        <element api="T:System.Net.Security.EncryptionPolicy" />
        <element api="T:System.Net.Security.RemoteCertificateValidationCallback" />
        <element api="T:System.Net.Security.LocalCertificateSelectionCallback" />
        <element api="T:System.Net.Security.SslStream" />
      </elements>
    </api>
    <api id="T:System.Net.Security.AuthenticatedStream">
      <topicdata group="api" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Security.NegotiateStream" ref="true" />
          <type api="T:System.Net.Security.SslStream" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.Flush" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Stream.SetLength(System.Int64)" />
        <element api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Stream.CanRead" />
        <element api="P:System.IO.Stream.CanSeek" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.CanWrite" />
        <element api="P:System.IO.Stream.Length" />
        <element api="P:System.IO.Stream.Position" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsServer" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsSigned" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Security.AuthenticatedStream">
      <topicdata name="AuthenticatedStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.AuthenticatedStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Stream.Flush" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Stream.SetLength(System.Int64)" />
        <element api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.AuthenticatedStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.AuthenticatedStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.Security.AuthenticatedStream">
      <topicdata name="AuthenticatedStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.AuthenticatedStream" />
      <apidata name="AuthenticatedStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Stream.CanRead" />
        <element api="P:System.IO.Stream.CanSeek" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.CanWrite" />
        <element api="P:System.IO.Stream.Length" />
        <element api="P:System.IO.Stream.Position" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsServer" />
        <element api="P:System.Net.Security.AuthenticatedStream.IsSigned" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.AuthenticatedStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.AuthenticatedStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.InnerStream">
      <topicdata group="api" />
      <apidata name="InnerStream" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InnerStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen">
      <topicdata group="api" />
      <apidata name="LeaveInnerStreamOpen" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LeaveInnerStreamOpen" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.Security.AuthenticationLevel">
      <topicdata group="api" />
      <apidata name="AuthenticationLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.AuthenticationLevel.None" />
        <element api="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />
        <element api="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthRequested" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.AuthenticationLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.AuthenticationLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.Security.EncryptionPolicy">
      <topicdata group="api" />
      <apidata name="EncryptionPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.EncryptionPolicy.RequireEncryption" />
        <element api="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption" />
        <element api="F:System.Net.Security.EncryptionPolicy.NoEncryption" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="AllowNoEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="NoEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <topicdata group="api" notopic="" />
      <apidata name="RequireEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.Security.LocalCertificateSelectionCallback">
      <topicdata group="api" />
      <apidata name="LocalCertificateSelectionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="remoteCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="acceptableIssuers">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="T:System.Net.Security.NegotiateStream">
      <topicdata group="api" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.NegotiateStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.NegotiateStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.NegotiateStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.NegotiateStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.NegotiateStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.#ctor">
          <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
          <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Security.NegotiateStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.Flush" />
        <element api="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.NegotiateStream.CanRead" />
        <element api="P:System.Net.Security.NegotiateStream.CanSeek" />
        <element api="P:System.Net.Security.NegotiateStream.CanTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.CanWrite" />
        <element api="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
        <element api="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsEncrypted" />
        <element api="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsServer" />
        <element api="P:System.Net.Security.NegotiateStream.IsSigned" />
        <element api="P:System.Net.Security.NegotiateStream.Length" />
        <element api="P:System.Net.Security.NegotiateStream.Position" />
        <element api="P:System.Net.Security.NegotiateStream.ReadTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
        <element api="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Security.NegotiateStream">
      <topicdata name="NegotiateStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.NegotiateStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.NegotiateStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.NegotiateStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.NegotiateStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.NegotiateStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Security.NegotiateStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.NegotiateStream.Flush" />
        <element api="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.Security.NegotiateStream">
      <topicdata name="NegotiateStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.NegotiateStream" />
      <apidata name="NegotiateStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.NegotiateStream.CanRead" />
        <element api="P:System.Net.Security.NegotiateStream.CanSeek" />
        <element api="P:System.Net.Security.NegotiateStream.CanTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.CanWrite" />
        <element api="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
        <element api="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsEncrypted" />
        <element api="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.NegotiateStream.IsServer" />
        <element api="P:System.Net.Security.NegotiateStream.IsSigned" />
        <element api="P:System.Net.Security.NegotiateStream.Length" />
        <element api="P:System.Net.Security.NegotiateStream.Position" />
        <element api="P:System.Net.Security.NegotiateStream.ReadTimeout" />
        <element api="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
        <element api="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
        <element api="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <topicdata name="AuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <topicdata name="AuthenticateAsClientAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <topicdata name="AuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <topicdata name="AuthenticateAsServerAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
      <topicdata name="BeginAuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
      <topicdata name="BeginAuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.NegotiateStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.NegotiateStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.NegotiateStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="targetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="allowedImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="credential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="requiredProtectionLevel">
          <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
        </parameter>
        <parameter name="requiredImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="policy">
          <type api="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanTimeout">
      <topicdata group="api" />
      <apidata name="CanTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.NegotiateStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.ImpersonationLevel">
      <topicdata group="api" />
      <apidata name="ImpersonationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ImpersonationLevel" />
      <returns>
        <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsServer">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.ReadTimeout">
      <topicdata group="api" />
      <apidata name="ReadTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.ReadTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ReadTimeout" />
      <setter name="set_ReadTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.RemoteIdentity">
      <topicdata group="api" />
      <apidata name="RemoteIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteIdentity" />
      <returns>
        <type api="T:System.Security.Principal.IIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.NegotiateStream.WriteTimeout">
      <topicdata group="api" />
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.WriteTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.NegotiateStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.Net.Security.ProtectionLevel">
      <topicdata group="api" />
      <apidata name="ProtectionLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.ProtectionLevel.None" />
        <element api="F:System.Net.Security.ProtectionLevel.Sign" />
        <element api="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.EncryptAndSign">
      <topicdata group="api" notopic="" />
      <apidata name="EncryptAndSign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.ProtectionLevel.Sign">
      <topicdata group="api" notopic="" />
      <apidata name="Sign" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.ProtectionLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.Security.RemoteCertificateValidationCallback">
      <topicdata group="api" />
      <apidata name="RemoteCertificateValidationCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="chain">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Chain" ref="true" />
        </parameter>
        <parameter name="sslPolicyErrors">
          <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="T:System.Net.Security.SslPolicyErrors">
      <topicdata group="api" />
      <apidata name="SslPolicyErrors" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Security.SslPolicyErrors.None" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch" />
        <element api="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateChainErrors" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateNameMismatch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <topicdata group="api" notopic="" />
      <apidata name="RemoteCertificateNotAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslPolicyErrors" ref="false" />
      </containers>
    </api>
    <api id="T:System.Net.Security.SslStream">
      <topicdata group="api" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.SslStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.SslStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.SslStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.SslStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.SslStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.#ctor">
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
          <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Security.SslStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.Flush" />
        <element api="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.SslStream.ShutdownAsync" />
        <element api="Overload:System.Net.Security.SslStream.Write">
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.SslStream.CanRead" />
        <element api="P:System.Net.Security.SslStream.CanSeek" />
        <element api="P:System.Net.Security.SslStream.CanTimeout" />
        <element api="P:System.Net.Security.SslStream.CanWrite" />
        <element api="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
        <element api="P:System.Net.Security.SslStream.CipherAlgorithm" />
        <element api="P:System.Net.Security.SslStream.CipherStrength" />
        <element api="P:System.Net.Security.SslStream.HashAlgorithm" />
        <element api="P:System.Net.Security.SslStream.HashStrength" />
        <element api="P:System.Net.Security.SslStream.IsAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsEncrypted" />
        <element api="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsServer" />
        <element api="P:System.Net.Security.SslStream.IsSigned" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeStrength" />
        <element api="P:System.Net.Security.SslStream.Length" />
        <element api="P:System.Net.Security.SslStream.LocalCertificate" />
        <element api="P:System.Net.Security.SslStream.Position" />
        <element api="P:System.Net.Security.SslStream.ReadTimeout" />
        <element api="P:System.Net.Security.SslStream.RemoteCertificate" />
        <element api="P:System.Net.Security.SslStream.SslProtocol" />
        <element api="P:System.Net.Security.SslStream.TransportContext" />
        <element api="P:System.Net.Security.SslStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
      </containers>
    </api>
    <api id="Methods.T:System.Net.Security.SslStream">
      <topicdata name="SslStream" group="list" subgroup="Methods" typeTopicId="T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.Net.Security.SslStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.Net.Security.SslStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.Net.Security.SslStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ReadByte" />
        <element api="Overload:System.Net.Security.SslStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Net.Security.SslStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
          <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
          <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Net.Security.SslStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.Net.Security.SslStream.Flush" />
        <element api="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
        <element api="M:System.Net.Security.SslStream.ShutdownAsync" />
        <element api="Overload:System.Net.Security.SslStream.Write">
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
          <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" />
      </containers>
    </api>
    <api id="Properties.T:System.Net.Security.SslStream">
      <topicdata name="SslStream" group="list" subgroup="Properties" typeTopicId="T:System.Net.Security.SslStream" />
      <apidata name="SslStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Security.AuthenticatedStream.InnerStream" />
        <element api="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
        <element api="P:System.Net.Security.SslStream.CanRead" />
        <element api="P:System.Net.Security.SslStream.CanSeek" />
        <element api="P:System.Net.Security.SslStream.CanTimeout" />
        <element api="P:System.Net.Security.SslStream.CanWrite" />
        <element api="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
        <element api="P:System.Net.Security.SslStream.CipherAlgorithm" />
        <element api="P:System.Net.Security.SslStream.CipherStrength" />
        <element api="P:System.Net.Security.SslStream.HashAlgorithm" />
        <element api="P:System.Net.Security.SslStream.HashStrength" />
        <element api="P:System.Net.Security.SslStream.IsAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsEncrypted" />
        <element api="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
        <element api="P:System.Net.Security.SslStream.IsServer" />
        <element api="P:System.Net.Security.SslStream.IsSigned" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
        <element api="P:System.Net.Security.SslStream.KeyExchangeStrength" />
        <element api="P:System.Net.Security.SslStream.Length" />
        <element api="P:System.Net.Security.SslStream.LocalCertificate" />
        <element api="P:System.Net.Security.SslStream.Position" />
        <element api="P:System.Net.Security.SslStream.ReadTimeout" />
        <element api="P:System.Net.Security.SslStream.RemoteCertificate" />
        <element api="P:System.Net.Security.SslStream.SslProtocol" />
        <element api="P:System.Net.Security.SslStream.TransportContext" />
        <element api="P:System.Net.Security.SslStream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
        <element api="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
      <topicdata name="AuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync">
      <topicdata name="AuthenticateAsClientAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
      <topicdata name="AuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync">
      <topicdata name="AuthenticateAsServerAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
        <element api="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
      <topicdata name="BeginAuthenticateAsClient" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
      <topicdata name="BeginAuthenticateAsServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
        <element api="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Net.Security.SslStream.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Security.SslStream.Write(System.Byte[])" />
        <element api="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
        <parameter name="userCertificateSelectionCallback">
          <type api="T:System.Net.Security.LocalCertificateSelectionCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Security.SslStream.#ctor" />
      <parameters>
        <parameter name="innerStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="leaveInnerStreamOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userCertificateValidationCallback">
          <type api="T:System.Net.Security.RemoteCertificateValidationCallback" ref="true" />
        </parameter>
        <parameter name="userCertificateSelectionCallback">
          <type api="T:System.Net.Security.LocalCertificateSelectionCallback" ref="true" />
        </parameter>
        <parameter name="encryptionPolicy">
          <type api="T:System.Net.Security.EncryptionPolicy" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsClientAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsClientAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateAsServerAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clientCertificates">
          <type api="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" ref="true" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serverCertificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
        </parameter>
        <parameter name="clientCertificateRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="enabledSslProtocols">
          <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
        </parameter>
        <parameter name="checkCertificateRevocation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="asyncState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.Security.SslStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CanTimeout">
      <topicdata group="api" />
      <apidata name="CanTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <topicdata group="api" />
      <apidata name="CheckCertRevocationStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CheckCertRevocationStatus" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CipherAlgorithm">
      <topicdata group="api" />
      <apidata name="CipherAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CipherAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.CipherAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.CipherStrength">
      <topicdata group="api" />
      <apidata name="CipherStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CipherStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Security.SslStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAuthenticateAsServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.HashAlgorithm">
      <topicdata group="api" />
      <apidata name="HashAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HashAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.HashAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.HashStrength">
      <topicdata group="api" />
      <apidata name="HashStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HashStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.IsAuthenticated">
      <topicdata group="api" />
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.IsEncrypted">
      <topicdata group="api" />
      <apidata name="IsEncrypted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsEncrypted">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEncrypted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsMutuallyAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.IsServer">
      <topicdata group="api" />
      <apidata name="IsServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsServer">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsServer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.IsSigned">
      <topicdata group="api" />
      <apidata name="IsSigned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Net.Security.AuthenticatedStream.IsSigned">
          <type api="T:System.Net.Security.AuthenticatedStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsSigned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <topicdata group="api" />
      <apidata name="KeyExchangeAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyExchangeAlgorithm" />
      <returns>
        <type api="T:System.Security.Authentication.ExchangeAlgorithmType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <topicdata group="api" />
      <apidata name="KeyExchangeStrength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyExchangeStrength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.LocalCertificate">
      <topicdata group="api" />
      <apidata name="LocalCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocalCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.ReadTimeout">
      <topicdata group="api" />
      <apidata name="ReadTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.ReadTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ReadTimeout" />
      <setter name="set_ReadTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.RemoteCertificate">
      <topicdata group="api" />
      <apidata name="RemoteCertificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteCertificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.ShutdownAsync">
      <topicdata group="api" />
      <apidata name="ShutdownAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Net.Security.SslStream.SslProtocol">
      <topicdata group="api" />
      <apidata name="SslProtocol" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SslProtocol" />
      <returns>
        <type api="T:System.Security.Authentication.SslProtocols" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.TransportContext">
      <topicdata group="api" />
      <apidata name="TransportContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportContext" />
      <returns>
        <type api="T:System.Net.TransportContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Security.SslStream.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.Net.Security.SslStream.WriteTimeout">
      <topicdata group="api" />
      <apidata name="WriteTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.WriteTimeout">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_WriteTimeout" />
      <setter name="set_WriteTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Net.Security" />
        <type api="T:System.Net.Security.SslStream" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>