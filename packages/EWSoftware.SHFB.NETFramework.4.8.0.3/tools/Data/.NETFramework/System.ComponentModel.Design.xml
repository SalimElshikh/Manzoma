<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Design">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Design.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Design.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Design.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Design">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Design" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Design.TypeDescriptionProviderService" />
        <element api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />
        <element api="T:System.ComponentModel.Design.ActiveDesignerEventHandler" />
        <element api="T:System.ComponentModel.Design.CheckoutException" />
        <element api="T:System.ComponentModel.Design.CommandID" />
        <element api="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
        <element api="T:System.ComponentModel.Design.ComponentChangedEventHandler" />
        <element api="T:System.ComponentModel.Design.ComponentChangingEventArgs" />
        <element api="T:System.ComponentModel.Design.ComponentChangingEventHandler" />
        <element api="T:System.ComponentModel.Design.ComponentEventArgs" />
        <element api="T:System.ComponentModel.Design.ComponentEventHandler" />
        <element api="T:System.ComponentModel.Design.ComponentRenameEventArgs" />
        <element api="T:System.ComponentModel.Design.ComponentRenameEventHandler" />
        <element api="T:System.ComponentModel.Design.DesignerOptionService" />
        <element api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />
        <element api="T:System.ComponentModel.Design.DesignerTransaction" />
        <element api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler" />
        <element api="T:System.ComponentModel.Design.DesignerVerb" />
        <element api="T:System.ComponentModel.Design.DesignerVerbCollection" />
        <element api="T:System.ComponentModel.Design.DesigntimeLicenseContext" />
        <element api="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer" />
        <element api="T:System.ComponentModel.Design.DesignerCollection" />
        <element api="T:System.ComponentModel.Design.DesignerEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignerEventHandler" />
        <element api="T:System.ComponentModel.Design.HelpContextType" />
        <element api="T:System.ComponentModel.Design.HelpKeywordAttribute" />
        <element api="T:System.ComponentModel.Design.HelpKeywordType" />
        <element api="T:System.ComponentModel.Design.IComponentChangeService" />
        <element api="T:System.ComponentModel.Design.IComponentDiscoveryService" />
        <element api="T:System.ComponentModel.Design.IComponentInitializer" />
        <element api="T:System.ComponentModel.Design.IDesigner" />
        <element api="T:System.ComponentModel.Design.IDesignerEventService" />
        <element api="T:System.ComponentModel.Design.IDesignerFilter" />
        <element api="T:System.ComponentModel.Design.IDesignerHost" />
        <element api="T:System.ComponentModel.Design.IDesignerHostTransactionState" />
        <element api="T:System.ComponentModel.Design.IDesignerOptionService" />
        <element api="T:System.ComponentModel.Design.IDictionaryService" />
        <element api="T:System.ComponentModel.Design.IEventBindingService" />
        <element api="T:System.ComponentModel.Design.IExtenderListService" />
        <element api="T:System.ComponentModel.Design.IExtenderProviderService" />
        <element api="T:System.ComponentModel.Design.IHelpService" />
        <element api="T:System.ComponentModel.Design.IInheritanceService" />
        <element api="T:System.ComponentModel.Design.IMenuCommandService" />
        <element api="T:System.ComponentModel.Design.IReferenceService" />
        <element api="T:System.ComponentModel.Design.IResourceService" />
        <element api="T:System.ComponentModel.Design.IRootDesigner" />
        <element api="T:System.ComponentModel.Design.ISelectionService" />
        <element api="T:System.ComponentModel.Design.IServiceContainer" />
        <element api="T:System.ComponentModel.Design.ITreeDesigner" />
        <element api="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
        <element api="T:System.ComponentModel.Design.ITypeDiscoveryService" />
        <element api="T:System.ComponentModel.Design.ITypeResolutionService" />
        <element api="T:System.ComponentModel.Design.MenuCommand" />
        <element api="T:System.ComponentModel.Design.SelectionTypes" />
        <element api="T:System.ComponentModel.Design.ServiceCreatorCallback" />
        <element api="T:System.ComponentModel.Design.ServiceContainer" />
        <element api="T:System.ComponentModel.Design.StandardCommands" />
        <element api="T:System.ComponentModel.Design.StandardToolWindows" />
        <element api="T:System.ComponentModel.Design.ViewTechnology" />
        <element api="T:System.ComponentModel.Design.ArrayEditor" />
        <element api="T:System.ComponentModel.Design.BinaryEditor" />
        <element api="T:System.ComponentModel.Design.ByteViewer" />
        <element api="T:System.ComponentModel.Design.CollectionEditor" />
        <element api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
        <element api="T:System.ComponentModel.Design.ComponentDesigner" />
        <element api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
        <element api="T:System.ComponentModel.Design.DateTimeEditor" />
        <element api="T:System.ComponentModel.Design.DesignerActionHeaderItem" />
        <element api="T:System.ComponentModel.Design.DesignerActionItem" />
        <element api="T:System.ComponentModel.Design.DesignerActionList" />
        <element api="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <element api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler" />
        <element api="T:System.ComponentModel.Design.DesignerActionListsChangedType" />
        <element api="T:System.ComponentModel.Design.DesignerActionMethodItem" />
        <element api="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
        <element api="T:System.ComponentModel.Design.DesignerActionService" />
        <element api="T:System.ComponentModel.Design.ComponentActionsType" />
        <element api="T:System.ComponentModel.Design.DesignerActionTextItem" />
        <element api="T:System.ComponentModel.Design.DesignerActionUIService" />
        <element api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler" />
        <element api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" />
        <element api="T:System.ComponentModel.Design.DesignerCommandSet" />
        <element api="T:System.ComponentModel.Design.DisplayMode" />
        <element api="T:System.ComponentModel.Design.IComponentDesignerDebugService" />
        <element api="T:System.ComponentModel.Design.IComponentDesignerStateService" />
        <element api="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader" />
        <element api="T:System.ComponentModel.Design.IMultitargetHelperService" />
        <element api="T:System.ComponentModel.Design.InheritanceService" />
        <element api="T:System.ComponentModel.Design.LocalizationExtenderProvider" />
        <element api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
        <element api="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler" />
        <element api="T:System.ComponentModel.Design.MenuCommandsChangedType" />
        <element api="T:System.ComponentModel.Design.MenuCommandService" />
        <element api="T:System.ComponentModel.Design.MultilineStringEditor" />
        <element api="T:System.ComponentModel.Design.ObjectSelectorEditor" />
        <element api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
        <element api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
        <element api="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />
        <element api="T:System.ComponentModel.Design.DesignerActionItemCollection" />
        <element api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler" />
        <element api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignSurface" />
        <element api="T:System.ComponentModel.Design.DesignSurfaceCollection" />
        <element api="T:System.ComponentModel.Design.DesignSurfaceEventHandler" />
        <element api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />
        <element api="T:System.ComponentModel.Design.DesignSurfaceManager" />
        <element api="T:System.ComponentModel.Design.EventBindingService" />
        <element api="T:System.ComponentModel.Design.ExceptionCollection" />
        <element api="T:System.ComponentModel.Design.LoadedEventHandler" />
        <element api="T:System.ComponentModel.Design.LoadedEventArgs" />
        <element api="T:System.ComponentModel.Design.UndoEngine" />
        <element api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </elements>
    </api>
    <api id="T:System.ComponentModel.Design.ActiveDesignerEventArgs">
      <topicdata group="api" />
      <apidata name="ActiveDesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ActiveDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.IDesignerHost)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ActiveDesignerEventArgs.NewDesigner" />
        <element api="P:System.ComponentModel.Design.ActiveDesignerEventArgs.OldDesigner" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ActiveDesignerEventArgs">
      <topicdata name="ActiveDesignerEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />
      <apidata name="ActiveDesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ActiveDesignerEventArgs">
      <topicdata name="ActiveDesignerEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />
      <apidata name="ActiveDesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ActiveDesignerEventArgs.NewDesigner" />
        <element api="P:System.ComponentModel.Design.ActiveDesignerEventArgs.OldDesigner" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ActiveDesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.IDesignerHost)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="oldDesigner">
          <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
        </parameter>
        <parameter name="newDesigner">
          <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ActiveDesignerEventArgs.NewDesigner">
      <topicdata group="api" />
      <apidata name="NewDesigner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewDesigner" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ActiveDesignerEventArgs.OldDesigner">
      <topicdata group="api" />
      <apidata name="OldDesigner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldDesigner" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ActiveDesignerEventHandler">
      <topicdata group="api" />
      <apidata name="ActiveDesignerEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ActiveDesignSurfaceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface" />
        <element api="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <topicdata name="ActiveDesignSurfaceChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />
      <apidata name="ActiveDesignSurfaceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <topicdata name="ActiveDesignSurfaceChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />
      <apidata name="ActiveDesignSurfaceChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface" />
        <element api="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="oldSurface">
          <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
        </parameter>
        <parameter name="newSurface">
          <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <topicdata group="api" />
      <apidata name="NewSurface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewSurface" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <topicdata group="api" />
      <apidata name="OldSurface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldSurface" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <topicdata group="api" />
      <apidata name="ActiveDesignSurfaceChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ArrayEditor">
      <topicdata group="api" />
      <apidata name="ArrayEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType" />
        <element api="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)" />
        <element api="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CancelChanges" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.ShowHelp" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.HelpTopic" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ArrayEditor">
      <topicdata name="ArrayEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ArrayEditor" />
      <apidata name="ArrayEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType" />
        <element api="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)" />
        <element api="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CancelChanges" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.ShowHelp" />
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ArrayEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ArrayEditor">
      <topicdata name="ArrayEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ArrayEditor" />
      <apidata name="ArrayEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.HelpTopic" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <topicdata group="api" />
      <apidata name="CreateCollectionItemType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <topicdata group="api" />
      <apidata name="GetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="editValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="SetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="editValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ArrayEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.BinaryEditor">
      <topicdata group="api" />
      <apidata name="BinaryEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.BinaryEditor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.BinaryEditor.#ctor" />
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.BinaryEditor">
      <topicdata name="BinaryEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.BinaryEditor" />
      <apidata name="BinaryEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.BinaryEditor.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.BinaryEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.BinaryEditor">
      <topicdata name="BinaryEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.BinaryEditor" />
      <apidata name="BinaryEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.BinaryEditor.#ctor" />
      <elements>
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.BinaryEditor.EditValue">
      <topicdata name="EditValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
        <element api="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.BinaryEditor.GetEditStyle">
      <topicdata name="GetEditStyle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
        <element api="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.BinaryEditor.EditValue" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.BinaryEditor.GetEditStyle" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Drawing.Design.UITypeEditorEditStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.BinaryEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ByteViewer">
      <topicdata group="api" />
      <apidata name="ByteViewer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.TableLayoutPanel" ref="true" />
          <type api="T:System.Windows.Forms.Panel" ref="true" />
          <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.Panel.AutoSizeChanged" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
        <element api="E:System.Windows.Forms.TableLayoutPanel.CellPaint" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.#ctor" />
        <element api="M:System.ComponentModel.Design.ByteViewer.GetBytes" />
        <element api="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.CreateHandle" />
        <element api="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCreateControl" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Panel.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Panel.ToString" />
        <element api="M:System.Windows.Forms.ScrollableControl.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="M:System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetCellPosition(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.OnCellPaint(System.Windows.Forms.TableLayoutCellPaintEventArgs)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetCellPosition(System.Windows.Forms.Control,System.Windows.Forms.TableLayoutPanelCellPosition)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetColumn(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackColor" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.BindingContext" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanEnableIme" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.ClientSize" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Location" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.MaximumSize" />
        <element api="P:System.Windows.Forms.Control.MinimumSize" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Size" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Panel.AutoSize" />
        <element api="P:System.Windows.Forms.Panel.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Panel.BorderStyle" />
        <element api="P:System.Windows.Forms.Panel.CreateParams" />
        <element api="P:System.Windows.Forms.Panel.DefaultSize" />
        <element api="P:System.Windows.Forms.Panel.TabStop" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.Controls" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ByteViewer">
      <topicdata name="ByteViewer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ByteViewer" />
      <apidata name="ByteViewer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.GetBytes" />
        <element api="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)" />
        <element api="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.CreateHandle" />
        <element api="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCreateControl" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ByteViewer.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.ByteViewer.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Panel.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Panel.ToString" />
        <element api="M:System.Windows.Forms.ScrollableControl.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="M:System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetCellPosition(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetColumn(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetColumnSpan(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetControlFromPosition(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetPositionFromControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetRow(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.GetRowSpan(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.OnCellPaint(System.Windows.Forms.TableLayoutCellPaintEventArgs)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetCellPosition(System.Windows.Forms.Control,System.Windows.Forms.TableLayoutPanelCellPosition)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetColumn(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetColumnSpan(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetRow(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.SetRowSpan(System.Windows.Forms.Control,System.Int32)" />
        <element api="M:System.Windows.Forms.TableLayoutPanel.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ByteViewer">
      <topicdata name="ByteViewer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ByteViewer" />
      <apidata name="ByteViewer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackColor" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.BindingContext" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanEnableIme" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.ClientSize" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Location" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.MaximumSize" />
        <element api="P:System.Windows.Forms.Control.MinimumSize" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Size" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Panel.AutoSize" />
        <element api="P:System.Windows.Forms.Panel.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Panel.BorderStyle" />
        <element api="P:System.Windows.Forms.Panel.CreateParams" />
        <element api="P:System.Windows.Forms.Panel.DefaultSize" />
        <element api="P:System.Windows.Forms.Panel.TabStop" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.CellBorderStyle" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.ColumnCount" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.ColumnStyles" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.Controls" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.GrowStyle" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.LayoutEngine" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.RowCount" />
        <element api="P:System.Windows.Forms.TableLayoutPanel.RowStyles" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.ByteViewer">
      <topicdata name="ByteViewer" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.ByteViewer" />
      <apidata name="ByteViewer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ByteViewer.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.Panel.AutoSizeChanged" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
        <element api="E:System.Windows.Forms.TableLayoutPanel.CellPaint" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <topicdata group="api" />
      <apidata name="GetDisplayMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <topicdata group="api" />
      <apidata name="OnKeyDown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <type api="T:System.Windows.Forms.Control" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <topicdata group="api" />
      <apidata name="OnLayout" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.TableLayoutPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
          <type api="T:System.Windows.Forms.TableLayoutPanel" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.LayoutEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPaint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">
          <type api="T:System.Windows.Forms.Control" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.PaintEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <topicdata group="api" />
      <apidata name="SaveToFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="ScrollChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <topicdata group="api" />
      <apidata name="SetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <topicdata group="api" />
      <apidata name="SetDisplayMode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <topicdata group="api" />
      <apidata name="SetStartLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ByteViewer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.CheckoutException">
      <topicdata group="api" />
      <apidata name="CheckoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Design.CheckoutException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="F:System.ComponentModel.Design.CheckoutException.Canceled" />
        <element api="Overload:System.ComponentModel.Design.CheckoutException.#ctor">
          <element api="M:System.ComponentModel.Design.CheckoutException.#ctor" />
          <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Int32)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.CheckoutException">
      <topicdata name="CheckoutException" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.CheckoutException" />
      <apidata name="CheckoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Design.CheckoutException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.ExternalException.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.CheckoutException">
      <topicdata name="CheckoutException" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.CheckoutException" />
      <apidata name="CheckoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Design.CheckoutException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.CheckoutException">
      <topicdata name="CheckoutException" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.CheckoutException" />
      <apidata name="CheckoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Design.CheckoutException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.CheckoutException">
      <topicdata name="CheckoutException" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.CheckoutException" />
      <apidata name="CheckoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ComponentModel.Design.CheckoutException.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.Design.CheckoutException.Canceled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.CheckoutException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.CheckoutException.#ctor" />
        <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CheckoutException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.CheckoutException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Design.CheckoutException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.CheckoutException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.CheckoutException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CheckoutException.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.CheckoutException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.CheckoutException.Canceled">
      <topicdata group="api" />
      <apidata name="Canceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CheckoutException" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.CollectionEditor">
      <topicdata group="api" />
      <apidata name="CollectionEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Design.ArrayEditor" ref="true" />
          <type api="T:System.Web.UI.Design.CollectionEditorBase" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" ref="true" />
          <type api="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" ref="true" />
          <type api="T:System.Web.DynamicData.Design.DataControlReferenceCollectionEditor" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CancelChanges" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.ShowHelp" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.HelpTopic" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.CollectionEditor">
      <topicdata name="CollectionEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.CollectionEditor" />
      <apidata name="CollectionEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.CollectionEditor.CancelChanges" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.ShowHelp" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.CollectionEditor">
      <topicdata name="CollectionEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.CollectionEditor" />
      <apidata name="CollectionEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.HelpTopic" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.CollectionEditor.EditValue">
      <topicdata name="EditValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.CollectionEditor.GetEditStyle">
      <topicdata name="GetEditStyle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <topicdata group="api" />
      <apidata name="CancelChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <topicdata group="api" />
      <apidata name="CanRemoveInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <topicdata group="api" />
      <apidata name="CanSelectMultipleInstances" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <topicdata group="api" />
      <apidata name="CollectionItemType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionItemType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <topicdata group="api" />
      <apidata name="CreateCollectionForm" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <topicdata group="api" />
      <apidata name="CreateCollectionItemType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <topicdata group="api" />
      <apidata name="CreateNewItemTypes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <topicdata group="api" />
      <apidata name="DestroyInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.CollectionEditor.EditValue" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDisplayText" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.CollectionEditor.GetEditStyle" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Drawing.Design.UITypeEditorEditStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <topicdata group="api" />
      <apidata name="GetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="editValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <topicdata group="api" />
      <apidata name="GetObjectsFromInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <topicdata group="api" />
      <apidata name="HelpTopic" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HelpTopic" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <topicdata group="api" />
      <apidata name="NewItemTypes" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewItemTypes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="SetItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="editValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <topicdata group="api" />
      <apidata name="ShowHelp" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <topicdata group="api" />
      <apidata name="CollectionForm" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.Form" ref="true" />
          <type api="T:System.Windows.Forms.ContainerControl" ref="true" />
          <type api="T:System.Windows.Forms.ScrollableControl" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.Form.Activated" />
        <element api="E:System.Windows.Forms.Form.AutoSizeChanged" />
        <element api="E:System.Windows.Forms.Form.AutoValidateChanged" />
        <element api="E:System.Windows.Forms.Form.Deactivate" />
        <element api="E:System.Windows.Forms.Form.DpiChanged" />
        <element api="E:System.Windows.Forms.Form.FormClosed" />
        <element api="E:System.Windows.Forms.Form.FormClosing" />
        <element api="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <element api="E:System.Windows.Forms.Form.Load" />
        <element api="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <element api="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.MdiChildActivate" />
        <element api="E:System.Windows.Forms.Form.MenuComplete" />
        <element api="E:System.Windows.Forms.Form.MenuStart" />
        <element api="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.ResizeBegin" />
        <element api="E:System.Windows.Forms.Form.ResizeEnd" />
        <element api="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <element api="E:System.Windows.Forms.Form.Shown" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.TabStop" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <topicdata name="CollectionForm" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      <apidata name="CollectionForm" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged" />
        <element api="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ContainerControl.PerformAutoScale" />
        <element api="M:System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Validate">
          <element api="M:System.Windows.Forms.ContainerControl.Validate" />
          <element api="M:System.Windows.Forms.ContainerControl.Validate(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.Form.Activate" />
        <element api="M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.CenterToParent" />
        <element api="M:System.Windows.Forms.Form.CenterToScreen" />
        <element api="M:System.Windows.Forms.Form.Close" />
        <element api="M:System.Windows.Forms.Form.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Form.CreateHandle" />
        <element api="M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.Form.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)" />
        <element api="M:System.Windows.Forms.Form.OnActivated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnCreateControl" />
        <element api="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)" />
        <element api="M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnLoad(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnShown(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)" />
        <element api="M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)" />
        <element api="M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.Show">
          <element api="M:System.Windows.Forms.Control.Show" />
          <element api="M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowDialog">
          <element api="M:System.Windows.Forms.Form.ShowDialog" />
          <element api="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)" />
        </element>
        <element api="M:System.Windows.Forms.Form.ToString" />
        <element api="M:System.Windows.Forms.Form.UpdateDefaultButton" />
        <element api="Overload:System.ComponentModel.Design.CollectionEditor.CollectionForm.ValidateChildren">
          <element api="M:System.Windows.Forms.Form.ValidateChildren" />
          <element api="M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)" />
        </element>
        <element api="M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <topicdata name="CollectionForm" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      <apidata name="CollectionForm" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items" />
        <element api="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes" />
        <element api="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleFactor" />
        <element api="P:System.Windows.Forms.ContainerControl.AutoScaleMode" />
        <element api="P:System.Windows.Forms.ContainerControl.BindingContext" />
        <element api="P:System.Windows.Forms.ContainerControl.CanEnableIme" />
        <element api="P:System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions" />
        <element api="P:System.Windows.Forms.ContainerControl.ParentForm" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BackgroundImage" />
        <element api="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.DoubleBuffered" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.ForeColor" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.TabStop" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.Form.AcceptButton" />
        <element api="P:System.Windows.Forms.Form.ActiveMdiChild" />
        <element api="P:System.Windows.Forms.Form.AllowTransparency" />
        <element api="P:System.Windows.Forms.Form.AutoScroll" />
        <element api="P:System.Windows.Forms.Form.AutoSize" />
        <element api="P:System.Windows.Forms.Form.AutoSizeMode" />
        <element api="P:System.Windows.Forms.Form.AutoValidate" />
        <element api="P:System.Windows.Forms.Form.BackColor" />
        <element api="P:System.Windows.Forms.Form.CancelButton" />
        <element api="P:System.Windows.Forms.Form.ClientSize" />
        <element api="P:System.Windows.Forms.Form.ControlBox" />
        <element api="P:System.Windows.Forms.Form.CreateParams" />
        <element api="P:System.Windows.Forms.Form.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Form.DefaultSize" />
        <element api="P:System.Windows.Forms.Form.DesktopBounds" />
        <element api="P:System.Windows.Forms.Form.DesktopLocation" />
        <element api="P:System.Windows.Forms.Form.DialogResult" />
        <element api="P:System.Windows.Forms.Form.FormBorderStyle" />
        <element api="P:System.Windows.Forms.Form.HelpButton" />
        <element api="P:System.Windows.Forms.Form.Icon" />
        <element api="P:System.Windows.Forms.Form.IsMdiChild" />
        <element api="P:System.Windows.Forms.Form.IsMdiContainer" />
        <element api="P:System.Windows.Forms.Form.IsRestrictedWindow" />
        <element api="P:System.Windows.Forms.Form.KeyPreview" />
        <element api="P:System.Windows.Forms.Form.Location" />
        <element api="P:System.Windows.Forms.Form.MainMenuStrip" />
        <element api="P:System.Windows.Forms.Form.MaximizeBox" />
        <element api="P:System.Windows.Forms.Form.MaximizedBounds" />
        <element api="P:System.Windows.Forms.Form.MaximumSize" />
        <element api="P:System.Windows.Forms.Form.MdiChildren" />
        <element api="P:System.Windows.Forms.Form.MdiParent" />
        <element api="P:System.Windows.Forms.Form.Menu" />
        <element api="P:System.Windows.Forms.Form.MergedMenu" />
        <element api="P:System.Windows.Forms.Form.MinimizeBox" />
        <element api="P:System.Windows.Forms.Form.MinimumSize" />
        <element api="P:System.Windows.Forms.Form.Modal" />
        <element api="P:System.Windows.Forms.Form.Opacity" />
        <element api="P:System.Windows.Forms.Form.OwnedForms" />
        <element api="P:System.Windows.Forms.Form.Owner" />
        <element api="P:System.Windows.Forms.Form.RestoreBounds" />
        <element api="P:System.Windows.Forms.Form.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.Form.ShowIcon" />
        <element api="P:System.Windows.Forms.Form.ShowInTaskbar" />
        <element api="P:System.Windows.Forms.Form.ShowWithoutActivation" />
        <element api="P:System.Windows.Forms.Form.Size" />
        <element api="P:System.Windows.Forms.Form.SizeGripStyle" />
        <element api="P:System.Windows.Forms.Form.StartPosition" />
        <element api="P:System.Windows.Forms.Form.Text" />
        <element api="P:System.Windows.Forms.Form.TopLevel" />
        <element api="P:System.Windows.Forms.Form.TopMost" />
        <element api="P:System.Windows.Forms.Form.TransparencyKey" />
        <element api="P:System.Windows.Forms.Form.WindowState" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMargin" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollMinSize" />
        <element api="P:System.Windows.Forms.ScrollableControl.AutoScrollPosition" />
        <element api="P:System.Windows.Forms.ScrollableControl.DisplayRectangle" />
        <element api="P:System.Windows.Forms.ScrollableControl.HorizontalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.HScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VerticalScroll" />
        <element api="P:System.Windows.Forms.ScrollableControl.VScroll" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <topicdata name="CollectionForm" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      <apidata name="CollectionForm" group="type" subgroup="class" />
      <typedata visibility="family" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.Form.Activated" />
        <element api="E:System.Windows.Forms.Form.AutoSizeChanged" />
        <element api="E:System.Windows.Forms.Form.AutoValidateChanged" />
        <element api="E:System.Windows.Forms.Form.Deactivate" />
        <element api="E:System.Windows.Forms.Form.DpiChanged" />
        <element api="E:System.Windows.Forms.Form.FormClosed" />
        <element api="E:System.Windows.Forms.Form.FormClosing" />
        <element api="E:System.Windows.Forms.Form.HelpButtonClicked" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanged" />
        <element api="E:System.Windows.Forms.Form.InputLanguageChanging" />
        <element api="E:System.Windows.Forms.Form.Load" />
        <element api="E:System.Windows.Forms.Form.MaximizedBoundsChanged" />
        <element api="E:System.Windows.Forms.Form.MaximumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.MdiChildActivate" />
        <element api="E:System.Windows.Forms.Form.MenuComplete" />
        <element api="E:System.Windows.Forms.Form.MenuStart" />
        <element api="E:System.Windows.Forms.Form.MinimumSizeChanged" />
        <element api="E:System.Windows.Forms.Form.ResizeBegin" />
        <element api="E:System.Windows.Forms.Form.ResizeEnd" />
        <element api="E:System.Windows.Forms.Form.RightToLeftLayoutChanged" />
        <element api="E:System.Windows.Forms.Form.Shown" />
        <element api="E:System.Windows.Forms.ScrollableControl.Scroll" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="editor">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <topicdata group="api" />
      <apidata name="CanRemoveInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <topicdata group="api" />
      <apidata name="CanSelectMultipleInstances" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <topicdata group="api" />
      <apidata name="CollectionItemType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionItemType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <topicdata group="api" />
      <apidata name="DestroyInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <topicdata group="api" />
      <apidata name="DisplayError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EditValue" />
      <setter name="set_EditValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.GetService(System.Type)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Items" />
      <setter name="set_Items" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <topicdata group="api" />
      <apidata name="NewItemTypes" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewItemTypes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <topicdata group="api" />
      <apidata name="OnEditValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <topicdata group="api" />
      <apidata name="ShowEditorDialog" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="edSvc">
          <type api="T:System.Windows.Forms.Design.IWindowsFormsEditorService" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Forms.DialogResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" ref="true">
          <type api="T:System.ComponentModel.Design.CollectionEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.CommandID">
      <topicdata group="api" />
      <apidata name="CommandID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.CommandID.#ctor(System.Guid,System.Int32)" />
        <element api="M:System.ComponentModel.Design.CommandID.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Design.CommandID.GetHashCode" />
        <element api="M:System.ComponentModel.Design.CommandID.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.Design.CommandID.Guid" />
        <element api="P:System.ComponentModel.Design.CommandID.ID" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.CommandID">
      <topicdata name="CommandID" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.CommandID" />
      <apidata name="CommandID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.CommandID.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Design.CommandID.GetHashCode" />
        <element api="M:System.ComponentModel.Design.CommandID.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.CommandID">
      <topicdata name="CommandID" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.CommandID" />
      <apidata name="CommandID" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.CommandID.Guid" />
        <element api="P:System.ComponentModel.Design.CommandID.ID" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CommandID.#ctor(System.Guid,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="menuGroup">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="commandID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CommandID.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CommandID.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CommandID.Guid">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Guid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.CommandID.ID">
      <topicdata group="api" />
      <apidata name="ID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.CommandID.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentActionsType">
      <topicdata group="api" />
      <apidata name="ComponentActionsType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.ComponentActionsType.All" />
        <element api="F:System.ComponentModel.Design.ComponentActionsType.Component" />
        <element api="F:System.ComponentModel.Design.ComponentActionsType.Service" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ComponentActionsType.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <topicdata group="api" notopic="" />
      <apidata name="Component" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <topicdata group="api" notopic="" />
      <apidata name="Service" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ComponentChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentChangedEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.Member" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.NewValue" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.OldValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentChangedEventArgs">
      <topicdata name="ComponentChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      <apidata name="ComponentChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentChangedEventArgs">
      <topicdata name="ComponentChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      <apidata name="ComponentChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.Member" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.NewValue" />
        <element api="P:System.ComponentModel.Design.ComponentChangedEventArgs.OldValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentChangedEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangedEventArgs.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangedEventArgs.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangedEventArgs.NewValue">
      <topicdata group="api" />
      <apidata name="NewValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangedEventArgs.OldValue">
      <topicdata group="api" />
      <apidata name="OldValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OldValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentChangedEventHandler">
      <topicdata group="api" />
      <apidata name="ComponentChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentChangingEventArgs">
      <topicdata group="api" />
      <apidata name="ComponentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentChangingEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentChangingEventArgs.Member" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentChangingEventArgs">
      <topicdata name="ComponentChangingEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentChangingEventArgs" />
      <apidata name="ComponentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentChangingEventArgs">
      <topicdata name="ComponentChangingEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentChangingEventArgs" />
      <apidata name="ComponentChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentChangingEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentChangingEventArgs.Member" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentChangingEventArgs.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangingEventArgs.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentChangingEventArgs.Member">
      <topicdata group="api" />
      <apidata name="Member" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Member" />
      <returns>
        <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentChangingEventHandler">
      <topicdata group="api" />
      <apidata name="ComponentChangingEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentDesigner">
      <topicdata group="api" />
      <apidata name="ComponentDesigner" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Messaging.Design.MessageDesigner" ref="true" />
          <type api="T:System.ServiceProcess.Design.ServiceControllerDesigner" ref="true" />
          <type api="T:System.Web.UI.Design.HtmlControlDesigner" ref="true" />
          <type api="T:System.Diagnostics.Design.ProcessDesigner" ref="true" />
          <type api="T:System.Diagnostics.Design.ProcessModuleDesigner" ref="true" />
          <type api="T:System.Diagnostics.Design.ProcessThreadDesigner" ref="true" />
          <type api="T:System.Windows.Forms.Design.ComponentDocumentDesigner" ref="true" />
          <type api="T:System.Windows.Forms.Design.ControlDesigner" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        <type api="T:System.ComponentModel.Design.IComponentInitializer" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
        <element api="Overload:System.ComponentModel.Design.ComponentDesigner.Dispose">
          <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
          <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Component" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentDesigner">
      <topicdata name="ComponentDesigner" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentDesigner" />
      <apidata name="ComponentDesigner" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.ComponentDesigner.Dispose">
          <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
          <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Finalize" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentDesigner">
      <topicdata name="ComponentDesigner" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentDesigner" />
      <apidata name="ComponentDesigner" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ComponentDesigner.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Component" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Inherited" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose" />
        <element api="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <topicdata group="api" />
      <apidata name="ActionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ActionLists" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <topicdata group="api" />
      <apidata name="AssociatedComponents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_AssociatedComponents" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Design.IDesigner.Component">
          <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.ComponentDesigner.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <topicdata group="api" />
      <apidata name="DoDefaultAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction">
          <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <topicdata group="api" />
      <apidata name="InheritanceAttribute" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_InheritanceAttribute" />
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <topicdata group="api" />
      <apidata name="Inherited" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Inherited" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)">
          <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="InitializeExistingComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="defaultValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IComponentInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="InitializeNewComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="defaultValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IComponentInitializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <topicdata group="api" />
      <apidata name="InitializeNonDefault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated. Use InitializeExistingComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <topicdata group="api" />
      <apidata name="InvokeGetInheritanceAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toInvoke">
          <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <topicdata group="api" />
      <apidata name="OnSetComponentDefaults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <topicdata group="api" />
      <apidata name="ParentComponent" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentComponent" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="RaiseComponentChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name="RaiseComponentChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <topicdata group="api" />
      <apidata name="ShadowProperties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShadowProperties" />
      <returns>
        <type api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" ref="true">
          <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PostFilterAttributes" />
      <apidata name="PostFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PostFilterEvents" />
      <apidata name="PostFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PostFilterProperties" />
      <apidata name="PostFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PreFilterAttributes" />
      <apidata name="PreFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PreFilterEvents" />
      <apidata name="PreFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" eiiName="IDesignerFilter.PreFilterProperties" />
      <apidata name="PreFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <topicdata group="api" eiiName="ITreeDesigner.Children" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Design.ITreeDesigner.Children" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Design.ITreeDesigner.Children">
          <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <topicdata group="api" eiiName="ITreeDesigner.Parent" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Design.ITreeDesigner.Parent" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Design.ITreeDesigner.Parent">
          <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Design.IDesigner.Verbs">
          <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <topicdata group="api" />
      <apidata name="ShadowPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <topicdata name="ShadowPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
      <apidata name="ShadowPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <topicdata name="ShadowPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
      <apidata name="ShadowPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="family" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" ref="true">
          <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" ref="true">
          <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentEventArgs">
      <topicdata group="api" />
      <apidata name="ComponentEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentEventArgs.#ctor(System.ComponentModel.IComponent)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentEventArgs.Component" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentEventArgs">
      <topicdata name="ComponentEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentEventArgs" />
      <apidata name="ComponentEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentEventArgs">
      <topicdata name="ComponentEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentEventArgs" />
      <apidata name="ComponentEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentEventArgs.Component" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentEventArgs.#ctor(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentEventArgs.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentEventHandler">
      <topicdata group="api" />
      <apidata name="ComponentEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentRenameEventArgs">
      <topicdata group="api" />
      <apidata name="ComponentRenameEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ComponentRenameEventArgs.#ctor(System.Object,System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.NewName" />
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.OldName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ComponentRenameEventArgs">
      <topicdata name="ComponentRenameEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ComponentRenameEventArgs" />
      <apidata name="ComponentRenameEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ComponentRenameEventArgs">
      <topicdata name="ComponentRenameEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ComponentRenameEventArgs" />
      <apidata name="ComponentRenameEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.Component" />
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.NewName" />
        <element api="P:System.ComponentModel.Design.ComponentRenameEventArgs.OldName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ComponentRenameEventArgs.#ctor(System.Object,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="oldName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentRenameEventArgs.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentRenameEventArgs.NewName">
      <topicdata group="api" />
      <apidata name="NewName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_NewName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ComponentRenameEventArgs.OldName">
      <topicdata group="api" />
      <apidata name="OldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_OldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ComponentRenameEventHandler">
      <topicdata group="api" />
      <apidata name="ComponentRenameEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.DateTimeEditor">
      <topicdata group="api" />
      <apidata name="DateTimeEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DateTimeEditor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DateTimeEditor.#ctor" />
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DateTimeEditor">
      <topicdata name="DateTimeEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DateTimeEditor" />
      <apidata name="DateTimeEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DateTimeEditor.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DateTimeEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DateTimeEditor">
      <topicdata name="DateTimeEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DateTimeEditor" />
      <apidata name="DateTimeEditor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DateTimeEditor.#ctor" />
      <elements>
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue">
      <topicdata name="EditValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
        <element api="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DateTimeEditor.GetEditStyle">
      <topicdata name="GetEditStyle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
        <element api="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DateTimeEditor.GetEditStyle" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Drawing.Design.UITypeEditorEditStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DateTimeEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <topicdata group="api" />
      <apidata name="DesignerActionHeaderItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.DesignerActionTextItem" ref="true" />
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <topicdata name="DesignerActionHeaderItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionHeaderItem" />
      <apidata name="DesignerActionHeaderItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <topicdata name="DesignerActionHeaderItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionHeaderItem" />
      <apidata name="DesignerActionHeaderItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionItem">
      <topicdata group="api" />
      <apidata name="DesignerActionItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
          <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
          <type api="T:System.ComponentModel.Design.DesignerActionTextItem" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionItem">
      <topicdata name="DesignerActionItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionItem" />
      <apidata name="DesignerActionItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionItem">
      <topicdata name="DesignerActionItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionItem" />
      <apidata name="DesignerActionItem" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <topicdata group="api" />
      <apidata name="AllowAssociate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowAssociate" />
      <setter name="set_AllowAssociate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView">
      <topicdata group="api" />
      <apidata name="ShowInSourceView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShowInSourceView" />
      <setter name="set_ShowInSourceView" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <topicdata group="api" />
      <apidata name="DesignerActionItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionItemCollection">
      <topicdata name="DesignerActionItemCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionItemCollection" />
      <apidata name="DesignerActionItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionItemCollection">
      <topicdata name="DesignerActionItemCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionItemCollection" />
      <apidata name="DesignerActionItemCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionList">
      <topicdata group="api" />
      <apidata name="DesignerActionList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
        <element api="P:System.ComponentModel.Design.DesignerActionList.Component" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionList">
      <topicdata name="DesignerActionList" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionList" />
      <apidata name="DesignerActionList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionList">
      <topicdata name="DesignerActionList" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionList" />
      <apidata name="DesignerActionList" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionList.AutoShow" />
        <element api="P:System.ComponentModel.Design.DesignerActionList.Component" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <topicdata group="api" />
      <apidata name="AutoShow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoShow" />
      <setter name="set_AutoShow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionList.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <topicdata group="api" />
      <apidata name="GetSortedActionItems" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionItemCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionListCollection">
      <topicdata group="api" />
      <apidata name="DesignerActionListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionListCollection.AddRange">
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])" />
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionListCollection">
      <topicdata name="DesignerActionListCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionListCollection" />
      <apidata name="DesignerActionListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionListCollection.AddRange">
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])" />
          <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionListCollection">
      <topicdata name="DesignerActionListCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionListCollection" />
      <apidata name="DesignerActionListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionListCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])" />
        <element api="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionListCollection.#ctor" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionListCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionListCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <topicdata group="api" />
      <apidata name="DesignerActionListsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists" />
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <topicdata name="DesignerActionListsChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
      <apidata name="DesignerActionListsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <topicdata name="DesignerActionListsChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
      <apidata name="DesignerActionListsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists" />
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="relatedObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="changeType">
          <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
        </parameter>
        <parameter name="actionLists">
          <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <topicdata group="api" />
      <apidata name="ActionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionLists" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <topicdata group="api" />
      <apidata name="ChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangeType" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <topicdata group="api" />
      <apidata name="RelatedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelatedObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <topicdata group="api" />
      <apidata name="DesignerActionListsChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <topicdata group="api" />
      <apidata name="DesignerActionListsChangedType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded" />
        <element api="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <topicdata group="api" notopic="" />
      <apidata name="ActionListsAdded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <topicdata group="api" notopic="" />
      <apidata name="ActionListsRemoved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <topicdata group="api" />
      <apidata name="DesignerActionMethodItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionMethodItem">
      <topicdata name="DesignerActionMethodItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionMethodItem" />
      <apidata name="DesignerActionMethodItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionMethodItem">
      <topicdata name="DesignerActionMethodItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionMethodItem" />
      <apidata name="DesignerActionMethodItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" />
        <element api="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="includeAsDesignerVerb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="includeAsDesignerVerb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionMethodItem.#ctor" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="includeAsDesignerVerb">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <topicdata group="api" />
      <apidata name="IncludeAsDesignerVerb" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IncludeAsDesignerVerb" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <topicdata group="api" />
      <apidata name="RelatedComponent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RelatedComponent" />
      <setter name="set_RelatedComponent" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionMethodItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <topicdata group="api" />
      <apidata name="DesignerActionPropertyItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
        <element api="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
        <element api="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <topicdata name="DesignerActionPropertyItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
      <apidata name="DesignerActionPropertyItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <topicdata name="DesignerActionPropertyItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
      <apidata name="DesignerActionPropertyItem" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
        <element api="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName" />
        <element api="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor" />
      <parameters>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor" />
      <parameters>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor" />
      <parameters>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <topicdata group="api" />
      <apidata name="RelatedComponent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RelatedComponent" />
      <setter name="set_RelatedComponent" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionPropertyItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionService">
      <topicdata group="api" />
      <apidata name="DesignerActionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.UI.Design.WebFormsDesignerActionService" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Add">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Dispose">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions">
          <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Remove">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionService">
      <topicdata name="DesignerActionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionService" />
      <apidata name="DesignerActionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Add">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionService.Clear" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Dispose">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions">
          <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
        <element api="Overload:System.ComponentModel.Design.DesignerActionService.Remove">
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.DesignerActionService">
      <topicdata name="DesignerActionService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.DesignerActionService" />
      <apidata name="DesignerActionService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionService.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionService.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions">
      <topicdata name="GetComponentActions" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetComponentActions" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerActionService.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="designerActionListCollection">
          <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <topicdata group="api" />
      <apidata name="DesignerActionListsChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignerActionListsChanged" />
      <remover name="remove_DesignerActionListsChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.DesignerActionService.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="GetComponentActions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <topicdata group="api" />
      <apidata name="GetComponentActions" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.GetComponentActions" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.ComponentModel.Design.ComponentActionsType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <topicdata group="api" />
      <apidata name="GetComponentDesignerActions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="actionLists">
          <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <topicdata group="api" />
      <apidata name="GetComponentServiceActions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="actionLists">
          <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerActionService.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comp">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="actionList">
          <type api="T:System.ComponentModel.Design.DesignerActionList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionTextItem">
      <topicdata group="api" />
      <apidata name="DesignerActionTextItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.DesignerActionItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Design.DesignerActionHeaderItem" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionTextItem">
      <topicdata name="DesignerActionTextItem" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionTextItem" />
      <apidata name="DesignerActionTextItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionTextItem" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionTextItem">
      <topicdata name="DesignerActionTextItem" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionTextItem" />
      <apidata name="DesignerActionTextItem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Category" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Description" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.DisplayName" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerActionItem.ShowInSourceView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionTextItem" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionTextItem" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionUIService">
      <topicdata group="api" />
      <apidata name="DesignerActionUIService" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.Dispose" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionUIService">
      <topicdata name="DesignerActionUIService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionUIService" />
      <apidata name="DesignerActionUIService" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.Dispose" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.DesignerActionUIService">
      <topicdata name="DesignerActionUIService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.DesignerActionUIService" />
      <apidata name="DesignerActionUIService" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <topicdata group="api" />
      <apidata name="DesignerActionUIStateChange" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignerActionUIStateChange" />
      <remover name="remove_DesignerActionUIStateChange" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="HideUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="ShouldAutoShow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="ShowUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <topicdata group="api" />
      <apidata name="DesignerActionUIStateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <topicdata name="DesignerActionUIStateChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />
      <apidata name="DesignerActionUIStateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <topicdata name="DesignerActionUIStateChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />
      <apidata name="DesignerActionUIStateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="relatedObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="changeType">
          <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <topicdata group="api" />
      <apidata name="ChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangeType" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <topicdata group="api" />
      <apidata name="RelatedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelatedObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <topicdata group="api" />
      <apidata name="DesignerActionUIStateChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <topicdata group="api" />
      <apidata name="DesignerActionUIStateChangeType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show" />
        <element api="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide" />
        <element api="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <topicdata group="api" notopic="" />
      <apidata name="Hide" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <topicdata group="api" notopic="" />
      <apidata name="Refresh" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <topicdata group="api" notopic="" />
      <apidata name="Show" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerCollection">
      <topicdata group="api" />
      <apidata name="DesignerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignerCollection.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])" />
          <element api="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.Count" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerCollection">
      <topicdata name="DesignerCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerCollection" />
      <apidata name="DesignerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerCollection">
      <topicdata name="DesignerCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerCollection" />
      <apidata name="DesignerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerCollection.Count" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])" />
        <element api="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerCollection.#ctor" />
      <parameters>
        <parameter name="designers">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCollection.#ctor(System.ComponentModel.Design.IDesignerHost[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerCollection.#ctor" />
      <parameters>
        <parameter name="designers">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerCommandSet">
      <topicdata group="api" />
      <apidata name="DesignerCommandSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerCommandSet.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerCommandSet.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists" />
        <element api="P:System.ComponentModel.Design.DesignerCommandSet.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerCommandSet">
      <topicdata name="DesignerCommandSet" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerCommandSet" />
      <apidata name="DesignerCommandSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerCommandSet.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerCommandSet">
      <topicdata name="DesignerCommandSet" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerCommandSet" />
      <apidata name="DesignerCommandSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerCommandSet.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists" />
        <element api="P:System.ComponentModel.Design.DesignerCommandSet.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <topicdata group="api" />
      <apidata name="ActionLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionLists" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerActionListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <topicdata group="api" />
      <apidata name="GetCommands" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerCommandSet" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerEventArgs">
      <topicdata group="api" />
      <apidata name="DesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerEventArgs.Designer" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerEventArgs">
      <topicdata name="DesignerEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerEventArgs" />
      <apidata name="DesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerEventArgs">
      <topicdata name="DesignerEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerEventArgs" />
      <apidata name="DesignerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerEventArgs.Designer" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerEventArgs.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerEventArgs.Designer">
      <topicdata group="api" />
      <apidata name="Designer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Designer" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerEventHandler">
      <topicdata group="api" />
      <apidata name="DesignerEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.DesignerEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerOptionService">
      <topicdata group="api" />
      <apidata name="DesignerOptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Forms.Design.WindowsFormsDesignerOptionService" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.IDesignerOptionService" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerOptionService.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.Options" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerOptionService">
      <topicdata name="DesignerOptionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerOptionService" />
      <apidata name="DesignerOptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerOptionService">
      <topicdata name="DesignerOptionService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerOptionService" />
      <apidata name="DesignerOptionService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerOptionService.Options" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="CreateOptionCollection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
            <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Options" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <topicdata group="api" />
      <apidata name="PopulateOptionCollection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="options">
          <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
            <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.ShowDialog(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.Object)">
      <topicdata group="api" />
      <apidata name="ShowDialog" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="options">
          <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
            <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
          </type>
        </parameter>
        <parameter name="optionObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)">
      <topicdata group="api" eiiName="IDesignerOptionService.GetOptionValue" />
      <apidata name="GetOptionValue" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)">
          <type api="T:System.ComponentModel.Design.IDesignerOptionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)">
      <topicdata group="api" eiiName="IDesignerOptionService.SetOptionValue" />
      <apidata name="SetOptionValue" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)">
          <type api="T:System.ComponentModel.Design.IDesignerOptionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection">
      <topicdata group="api" />
      <apidata name="DesignerOptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.ShowDialog" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Count" />
        <element api="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item">
          <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Name" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Parent" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection">
      <topicdata name="DesignerOptionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />
      <apidata name="DesignerOptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.ShowDialog" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Clear" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection">
      <topicdata name="DesignerOptionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />
      <apidata name="DesignerOptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Count" />
        <element api="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item">
          <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)" />
          <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)" />
        </element>
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Name" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Parent" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
            <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.ShowDialog">
      <topicdata group="api" />
      <apidata name="ShowDialog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection" ref="true">
          <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerTransaction">
      <topicdata group="api" />
      <apidata name="DesignerTransaction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerTransaction.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerTransaction.#ctor" />
          <element api="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Finalize" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Canceled" />
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Committed" />
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerTransaction">
      <topicdata name="DesignerTransaction" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerTransaction" />
      <apidata name="DesignerTransaction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Cancel" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Commit" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.Finalize" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.OnCancel" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.OnCommit" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerTransaction">
      <topicdata name="DesignerTransaction" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerTransaction" />
      <apidata name="DesignerTransaction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Canceled" />
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Committed" />
        <element api="P:System.ComponentModel.Design.DesignerTransaction.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerTransaction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerTransaction.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Design.DesignerTransaction.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ComponentModel.Design.DesignerTransaction.#ctor" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerTransaction.Canceled">
      <topicdata group="api" />
      <apidata name="Canceled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Canceled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.Commit">
      <topicdata group="api" />
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerTransaction.Committed">
      <topicdata group="api" />
      <apidata name="Committed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Committed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerTransaction.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.OnCancel">
      <topicdata group="api" />
      <apidata name="OnCancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.OnCommit">
      <topicdata group="api" />
      <apidata name="OnCommit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs">
      <topicdata group="api" />
      <apidata name="DesignerTransactionCloseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean)" />
          <element api="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.LastTransaction" />
        <element api="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.TransactionCommitted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs">
      <topicdata name="DesignerTransactionCloseEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
      <apidata name="DesignerTransactionCloseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs">
      <topicdata name="DesignerTransactionCloseEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
      <apidata name="DesignerTransactionCloseEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.LastTransaction" />
        <element api="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.TransactionCommitted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor" />
      <parameters>
        <parameter name="commit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This constructor is obsolete. Use DesignerTransactionCloseEventArgs(bool, bool) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.#ctor" />
      <parameters>
        <parameter name="commit">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="lastTransaction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.LastTransaction">
      <topicdata group="api" />
      <apidata name="LastTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastTransaction" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerTransactionCloseEventArgs.TransactionCommitted">
      <topicdata group="api" />
      <apidata name="TransactionCommitted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransactionCommitted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler">
      <topicdata group="api" />
      <apidata name="DesignerTransactionCloseEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerVerb">
      <topicdata group="api" />
      <apidata name="DesignerVerb" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.UI.Design.TemplateEditingVerb" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerb" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerb.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler)" />
          <element api="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerVerb.ToString" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerb.Invoke">
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke" />
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.Design.DesignerVerb.Description" />
        <element api="P:System.ComponentModel.Design.DesignerVerb.Text" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Checked" />
        <element api="P:System.ComponentModel.Design.MenuCommand.CommandID" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Enabled" />
        <element api="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Properties" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Supported" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerVerb">
      <topicdata name="DesignerVerb" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerVerb" />
      <apidata name="DesignerVerb" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerVerb.ToString" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerb.Invoke">
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke" />
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerVerb">
      <topicdata name="DesignerVerb" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerVerb" />
      <apidata name="DesignerVerb" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignerVerb.Description" />
        <element api="P:System.ComponentModel.Design.DesignerVerb.Text" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Checked" />
        <element api="P:System.ComponentModel.Design.MenuCommand.CommandID" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Enabled" />
        <element api="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Properties" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Supported" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.DesignerVerb">
      <topicdata name="DesignerVerb" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.DesignerVerb" />
      <apidata name="DesignerVerb" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerVerb.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler)" />
        <element api="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerVerb.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerb.#ctor(System.String,System.EventHandler,System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerVerb.#ctor" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
        <parameter name="startCommandID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerVerb.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerVerb.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerb.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Design.MenuCommand.ToString">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignerVerbCollection">
      <topicdata group="api" />
      <apidata name="DesignerVerbCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.ComponentModel.Design.ActivityDesignerVerbCollection" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerbCollection.#ctor">
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange">
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])" />
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnClear" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerVerbCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignerVerbCollection">
      <topicdata name="DesignerVerbCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignerVerbCollection" />
      <apidata name="DesignerVerbCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)" />
        <element api="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange">
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])" />
          <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnClear" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignerVerbCollection">
      <topicdata name="DesignerVerbCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignerVerbCollection" />
      <apidata name="DesignerVerbCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignerVerbCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerVerbCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])" />
        <element api="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignerVerbCollection.#ctor" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignerVerbCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignSurface">
      <topicdata group="api" />
      <apidata name="DesignSurface" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.DesignSurface.Disposed" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Flushed" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Loaded" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Loading" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Unloading" />
        <element api="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
        <element api="Overload:System.ComponentModel.Design.DesignSurface.#ctor">
          <element api="M:System.ComponentModel.Design.DesignSurface.#ctor" />
          <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignSurface.BeginLoad">
          <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.DesignSurface.CreateNestedContainer">
          <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignSurface.Dispose">
          <element api="M:System.ComponentModel.Design.DesignSurface.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurface.Flush" />
        <element api="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
        <element api="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
        <element api="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
        <element api="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
        <element api="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
        <element api="P:System.ComponentModel.Design.DesignSurface.View" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignSurface">
      <topicdata name="DesignSurface" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignSurface" />
      <apidata name="DesignSurface" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignSurface.BeginLoad">
          <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.DesignSurface.CreateNestedContainer">
          <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
          <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignSurface.Dispose">
          <element api="M:System.ComponentModel.Design.DesignSurface.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurface.Flush" />
        <element api="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignSurface">
      <topicdata name="DesignSurface" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignSurface" />
      <apidata name="DesignSurface" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignSurface.ComponentContainer" />
        <element api="P:System.ComponentModel.Design.DesignSurface.DtelLoading" />
        <element api="P:System.ComponentModel.Design.DesignSurface.IsLoaded" />
        <element api="P:System.ComponentModel.Design.DesignSurface.LoadErrors" />
        <element api="P:System.ComponentModel.Design.DesignSurface.ServiceContainer" />
        <element api="P:System.ComponentModel.Design.DesignSurface.View" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.DesignSurface">
      <topicdata name="DesignSurface" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.DesignSurface" />
      <apidata name="DesignSurface" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurface.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Design.DesignSurface.Disposed" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Flushed" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Loaded" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Loading" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Unloaded" />
        <element api="E:System.ComponentModel.Design.DesignSurface.Unloading" />
        <element api="E:System.ComponentModel.Design.DesignSurface.ViewActivated" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurface.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurface.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurface.BeginLoad">
      <topicdata name="BeginLoad" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurface.CreateNestedContainer">
      <topicdata name="CreateNestedContainer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNestedContainer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurface.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurface.Dispose" />
        <element api="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurface.#ctor" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurface.#ctor" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurface.#ctor" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="rootComponentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurface.#ctor" />
      <parameters>
        <parameter name="rootComponentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurface.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loader">
          <type api="T:System.ComponentModel.Design.Serialization.DesignerLoader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurface.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rootComponentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <topicdata group="api" />
      <apidata name="ComponentContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ComponentContainer" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateComponent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="componentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CreateComponent has been replaced by CreateInstance and will be removed after Beta2</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateDesigner" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="rootDesigner">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="CreateNestedContainer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurface.CreateNestedContainer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="owningComponent">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.INestedContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="CreateNestedContainer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurface.CreateNestedContainer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="owningComponent">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="containerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.INestedContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurface.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.DesignSurface.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <topicdata group="api" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disposed" />
      <remover name="remove_Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <topicdata group="api" />
      <apidata name="DtelLoading" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DtelLoading" />
      <setter name="set_DtelLoading" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <topicdata group="api" />
      <apidata name="Flushed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Flushed" />
      <remover name="remove_Flushed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <topicdata group="api" />
      <apidata name="IsLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <topicdata group="api" />
      <apidata name="Loaded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Loaded" />
      <remover name="remove_Loaded" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.LoadedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <topicdata group="api" />
      <apidata name="LoadErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoadErrors" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Loading">
      <topicdata group="api" />
      <apidata name="Loading" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Loading" />
      <remover name="remove_Loading" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnLoaded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnLoading" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnUnloaded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnUnloading" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnViewActivate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <topicdata group="api" />
      <apidata name="ServiceContainer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceContainer" />
      <returns>
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <topicdata group="api" />
      <apidata name="Unloaded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Unloaded" />
      <remover name="remove_Unloaded" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <topicdata group="api" />
      <apidata name="Unloading" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Unloading" />
      <remover name="remove_Unloading" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurface.View">
      <topicdata group="api" />
      <apidata name="View" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_View" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <topicdata group="api" />
      <apidata name="ViewActivated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ViewActivated" />
      <remover name="remove_ViewActivated" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <topicdata group="api" />
      <apidata name="DesignSurfaceCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.Count" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignSurfaceCollection">
      <topicdata name="DesignSurfaceCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceCollection" />
      <apidata name="DesignSurfaceCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignSurfaceCollection">
      <topicdata name="DesignSurfaceCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceCollection" />
      <apidata name="DesignSurfaceCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.Count" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <topicdata group="api" />
      <apidata name="DesignSurfaceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <topicdata name="DesignSurfaceEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />
      <apidata name="DesignSurfaceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <topicdata name="DesignSurfaceEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />
      <apidata name="DesignSurfaceEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="surface">
          <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <topicdata group="api" />
      <apidata name="Surface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Surface" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <topicdata group="api" />
      <apidata name="DesignSurfaceEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesignSurfaceManager">
      <topicdata group="api" />
      <apidata name="DesignSurfaceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
        <element api="Overload:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
        <element api="Overload:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesignSurfaceManager">
      <topicdata name="DesignSurfaceManager" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceManager" />
      <apidata name="DesignSurfaceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" />
        <element api="Overload:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
          <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesignSurfaceManager">
      <topicdata name="DesignSurfaceManager" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceManager" />
      <apidata name="DesignSurfaceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces" />
        <element api="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.DesignSurfaceManager">
      <topicdata name="DesignSurfaceManager" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.DesignSurfaceManager" />
      <apidata name="DesignSurfaceManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed" />
        <element api="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <topicdata name="CreateDesignSurface" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateDesignSurface" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
        <element api="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.#ctor" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <topicdata group="api" />
      <apidata name="ActiveDesignSurface" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ActiveDesignSurface" />
      <setter name="set_ActiveDesignSurface" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <topicdata group="api" />
      <apidata name="ActiveDesignSurfaceChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ActiveDesignSurfaceChanged" />
      <remover name="remove_ActiveDesignSurfaceChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <topicdata group="api" />
      <apidata name="CreateDesignSurface" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="CreateDesignSurface" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="CreateDesignSurfaceCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurface" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <topicdata group="api" />
      <apidata name="DesignSurfaceCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignSurfaceCreated" />
      <remover name="remove_DesignSurfaceCreated" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <topicdata group="api" />
      <apidata name="DesignSurfaceDisposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignSurfaceDisposed" />
      <remover name="remove_DesignSurfaceDisposed" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignSurfaceEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <topicdata group="api" />
      <apidata name="DesignSurfaces" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesignSurfaces" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignSurfaceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.DesignSurfaceManager.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <topicdata group="api" />
      <apidata name="SelectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SelectionChanged" />
      <remover name="remove_SelectionChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <topicdata group="api" />
      <apidata name="ServiceContainer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceContainer" />
      <returns>
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesignSurfaceManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesigntimeLicenseContext">
      <topicdata group="api" />
      <apidata name="DesigntimeLicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor" />
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
        <element api="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.DesigntimeLicenseContext.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesigntimeLicenseContext">
      <topicdata name="DesigntimeLicenseContext" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesigntimeLicenseContext" />
      <apidata name="DesigntimeLicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)" />
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)" />
        <element api="M:System.ComponentModel.LicenseContext.GetService(System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.DesigntimeLicenseContext">
      <topicdata name="DesigntimeLicenseContext" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.DesigntimeLicenseContext" />
      <apidata name="DesigntimeLicenseContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.DesigntimeLicenseContext.UsageMode" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesigntimeLicenseContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetSavedLicenseKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="resourceAssembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesigntimeLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="SetSavedLicenseKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.DesigntimeLicenseContext.UsageMode">
      <topicdata group="api" />
      <apidata name="UsageMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.LicenseContext.UsageMode">
          <type api="T:System.ComponentModel.LicenseContext" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_UsageMode" />
      <returns>
        <type api="T:System.ComponentModel.LicenseUsageMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer">
      <topicdata group="api" />
      <apidata name="DesigntimeLicenseContextSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer">
      <topicdata name="DesigntimeLicenseContextSerializer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer" />
      <apidata name="DesigntimeLicenseContextSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="cryptoKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.ComponentModel.Design.DesigntimeLicenseContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DesigntimeLicenseContextSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.DisplayMode">
      <topicdata group="api" />
      <apidata name="DisplayMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.DisplayMode.Hexdump" />
        <element api="F:System.ComponentModel.Design.DisplayMode.Ansi" />
        <element api="F:System.ComponentModel.Design.DisplayMode.Unicode" />
        <element api="F:System.ComponentModel.Design.DisplayMode.Auto" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <topicdata group="api" notopic="" />
      <apidata name="Ansi" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DisplayMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <topicdata group="api" notopic="" />
      <apidata name="Hexdump" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <topicdata group="api" notopic="" />
      <apidata name="Unicode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.DisplayMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.EventBindingService">
      <topicdata group="api" />
      <apidata name="EventBindingService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.EventBindingService.ShowCode">
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode" />
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        </element>
        <element api="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.EventBindingService">
      <topicdata name="EventBindingService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.EventBindingService" />
      <apidata name="EventBindingService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.EventBindingService.ShowCode">
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode" />
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        </element>
        <element api="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.EventBindingService.ShowCode">
      <topicdata name="ShowCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode" />
        <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <topicdata name="ShowCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)" />
        <element api="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateUniqueMethodName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <topicdata group="api" />
      <apidata name="FreeMethod" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="GetCompatibleMethods" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.EventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.EventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.EventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" eiiName="IEventBindingService.CreateUniqueMethodName" />
      <apidata name="CreateUniqueMethodName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" eiiName="IEventBindingService.GetCompatibleMethods" />
      <apidata name="GetCompatibleMethods" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IEventBindingService.GetEvent" />
      <apidata name="GetEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <topicdata group="api" eiiName="IEventBindingService.GetEventProperties" />
      <apidata name="GetEventProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" eiiName="IEventBindingService.GetEventProperty" />
      <apidata name="GetEventProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <topicdata group="api" eiiName="IEventBindingService.ShowCode" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.ShowCode">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" eiiName="IEventBindingService.ShowCode" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <topicdata group="api" eiiName="IEventBindingService.ShowCode" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)">
          <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <topicdata group="api" />
      <apidata name="UseMethod" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <topicdata group="api" />
      <apidata name="ValidateMethodName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ExceptionCollection">
      <topicdata group="api" />
      <apidata name="ExceptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)" />
        <element api="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.ComponentModel.Design.ExceptionCollection.Exceptions" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ExceptionCollection">
      <topicdata name="ExceptionCollection" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ExceptionCollection" />
      <apidata name="ExceptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ExceptionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ExceptionCollection">
      <topicdata name="ExceptionCollection" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ExceptionCollection" />
      <apidata name="ExceptionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.ComponentModel.Design.ExceptionCollection.Exceptions" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ExceptionCollection" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exceptions">
          <type api="T:System.Collections.ArrayList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ExceptionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <topicdata group="api" />
      <apidata name="Exceptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exceptions" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ExceptionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ExceptionCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.HelpContextType">
      <topicdata group="api" />
      <apidata name="HelpContextType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.HelpContextType.Ambient" />
        <element api="F:System.ComponentModel.Design.HelpContextType.Window" />
        <element api="F:System.ComponentModel.Design.HelpContextType.Selection" />
        <element api="F:System.ComponentModel.Design.HelpContextType.ToolWindowSelection" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpContextType.Ambient">
      <topicdata group="api" notopic="" />
      <apidata name="Ambient" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpContextType.Selection">
      <topicdata group="api" notopic="" />
      <apidata name="Selection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpContextType.ToolWindowSelection">
      <topicdata group="api" notopic="" />
      <apidata name="ToolWindowSelection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpContextType.Window">
      <topicdata group="api" notopic="" />
      <apidata name="Window" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.HelpKeywordAttribute">
      <topicdata group="api" />
      <apidata name="HelpKeywordAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.Design.HelpKeywordAttribute.Default" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.ComponentModel.Design.HelpKeywordAttribute.#ctor">
          <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
          <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Design.HelpKeywordAttribute.HelpKeyword" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.HelpKeywordAttribute">
      <topicdata name="HelpKeywordAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      <apidata name="HelpKeywordAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.HelpKeywordAttribute">
      <topicdata name="HelpKeywordAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      <apidata name="HelpKeywordAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Design.HelpKeywordAttribute.HelpKeyword" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.HelpKeywordAttribute">
      <topicdata name="HelpKeywordAttribute" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      <apidata name="HelpKeywordAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.Design.HelpKeywordAttribute.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.HelpKeywordAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <parameters>
        <parameter name="keyword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.HelpKeywordAttribute.#ctor" />
      <parameters>
        <parameter name="t">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpKeywordAttribute.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.Equals(System.Object)">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.HelpKeywordAttribute.HelpKeyword">
      <topicdata group="api" />
      <apidata name="HelpKeyword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HelpKeyword" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.HelpKeywordAttribute.IsDefaultAttribute">
      <topicdata group="api" />
      <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.IsDefaultAttribute">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.HelpKeywordType">
      <topicdata group="api" />
      <apidata name="HelpKeywordType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.HelpKeywordType.F1Keyword" />
        <element api="F:System.ComponentModel.Design.HelpKeywordType.GeneralKeyword" />
        <element api="F:System.ComponentModel.Design.HelpKeywordType.FilterKeyword" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpKeywordType.F1Keyword">
      <topicdata group="api" notopic="" />
      <apidata name="F1Keyword" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpKeywordType.FilterKeyword">
      <topicdata group="api" notopic="" />
      <apidata name="FilterKeyword" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.HelpKeywordType.GeneralKeyword">
      <topicdata group="api" notopic="" />
      <apidata name="GeneralKeyword" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IComponentChangeService">
      <topicdata group="api" />
      <apidata name="IComponentChangeService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
        <element api="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IComponentChangeService">
      <topicdata name="IComponentChangeService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IComponentChangeService" />
      <apidata name="IComponentChangeService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
        <element api="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.IComponentChangeService">
      <topicdata name="IComponentChangeService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.IComponentChangeService" />
      <apidata name="IComponentChangeService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" />
        <element api="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded">
      <topicdata group="api" />
      <apidata name="ComponentAdded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentAdded" />
      <remover name="remove_ComponentAdded" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding">
      <topicdata group="api" />
      <apidata name="ComponentAdding" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentAdding" />
      <remover name="remove_ComponentAdding" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged">
      <topicdata group="api" />
      <apidata name="ComponentChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentChanged" />
      <remover name="remove_ComponentChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging">
      <topicdata group="api" />
      <apidata name="ComponentChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentChanging" />
      <remover name="remove_ComponentChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved">
      <topicdata group="api" />
      <apidata name="ComponentRemoved" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentRemoved" />
      <remover name="remove_ComponentRemoved" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving">
      <topicdata group="api" />
      <apidata name="ComponentRemoving" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentRemoving" />
      <remover name="remove_ComponentRemoving" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename">
      <topicdata group="api" />
      <apidata name="ComponentRename" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ComponentRename" />
      <remover name="remove_ComponentRename" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ComponentRenameEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged(System.Object,System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnComponentChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(System.Object,System.ComponentModel.MemberDescriptor)">
      <topicdata group="api" />
      <apidata name="OnComponentChanging" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.ComponentModel.MemberDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentChangeService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <topicdata group="api" />
      <apidata name="IComponentDesignerDebugService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)" />
        <element api="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel" />
        <element api="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <topicdata name="IComponentDesignerDebugService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IComponentDesignerDebugService" />
      <apidata name="IComponentDesignerDebugService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <topicdata name="IComponentDesignerDebugService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IComponentDesignerDebugService" />
      <apidata name="IComponentDesignerDebugService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel" />
        <element api="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <topicdata group="api" />
      <apidata name="IndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentLevel" />
      <setter name="set_IndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <topicdata group="api" />
      <apidata name="Listeners" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Listeners" />
      <returns>
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerDebugService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <topicdata group="api" />
      <apidata name="IComponentDesignerStateService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IComponentDesignerStateService">
      <topicdata name="IComponentDesignerStateService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IComponentDesignerStateService" />
      <apidata name="IComponentDesignerStateService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)" />
        <element api="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerStateService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name="GetState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerStateService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDesignerStateService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IComponentDiscoveryService">
      <topicdata group="api" />
      <apidata name="IComponentDiscoveryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Drawing.Design.ToolboxService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IComponentDiscoveryService">
      <topicdata name="IComponentDiscoveryService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IComponentDiscoveryService" />
      <apidata name="IComponentDiscoveryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDiscoveryService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentDiscoveryService.GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <topicdata group="api" />
      <apidata name="GetComponentTypes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="designerHost">
          <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentDiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IComponentInitializer">
      <topicdata group="api" />
      <apidata name="IComponentInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IComponentInitializer">
      <topicdata name="IComponentInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IComponentInitializer" />
      <apidata name="IComponentInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentInitializer" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentInitializer.InitializeExistingComponent(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="InitializeExistingComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="defaultValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentInitializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IComponentInitializer.InitializeNewComponent(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="InitializeNewComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="defaultValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IComponentInitializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesigner">
      <topicdata group="api" />
      <apidata name="IDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Design.IRootDesigner" ref="true" />
        <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        <type api="T:System.Web.UI.Design.WebFormsRootDesigner" ref="true" />
        <type api="T:System.Windows.Forms.Design.ComponentDocumentDesigner" ref="true" />
        <type api="T:System.Windows.Forms.Design.DocumentDesigner" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.ActivityDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDesigner">
      <topicdata name="IDesigner" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDesigner" />
      <apidata name="IDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IDesigner">
      <topicdata name="IDesigner" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IDesigner" />
      <apidata name="IDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesigner.Component">
      <topicdata group="api" />
      <apidata name="Component" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Component" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesigner.DoDefaultAction">
      <topicdata group="api" />
      <apidata name="DoDefaultAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesigner.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignerEventService">
      <topicdata group="api" />
      <apidata name="IDesignerEventService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.SelectionChanged" />
        <element api="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner" />
        <element api="P:System.ComponentModel.Design.IDesignerEventService.Designers" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IDesignerEventService">
      <topicdata name="IDesignerEventService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IDesignerEventService" />
      <apidata name="IDesignerEventService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner" />
        <element api="P:System.ComponentModel.Design.IDesignerEventService.Designers" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.IDesignerEventService">
      <topicdata name="IDesignerEventService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.IDesignerEventService" />
      <apidata name="IDesignerEventService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed" />
        <element api="E:System.ComponentModel.Design.IDesignerEventService.SelectionChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerEventService.ActiveDesigner">
      <topicdata group="api" />
      <apidata name="ActiveDesigner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ActiveDesigner" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerEventService.ActiveDesignerChanged">
      <topicdata group="api" />
      <apidata name="ActiveDesignerChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ActiveDesignerChanged" />
      <remover name="remove_ActiveDesignerChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.ActiveDesignerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerEventService.DesignerCreated">
      <topicdata group="api" />
      <apidata name="DesignerCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignerCreated" />
      <remover name="remove_DesignerCreated" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerEventService.DesignerDisposed">
      <topicdata group="api" />
      <apidata name="DesignerDisposed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_DesignerDisposed" />
      <remover name="remove_DesignerDisposed" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerEventService.Designers">
      <topicdata group="api" />
      <apidata name="Designers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Designers" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerEventService.SelectionChanged">
      <topicdata group="api" />
      <apidata name="SelectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_SelectionChanged" />
      <remover name="remove_SelectionChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerEventService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignerFilter">
      <topicdata group="api" />
      <apidata name="IDesignerFilter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
        <type api="T:System.Web.UI.Design.WebFormsRootDesigner" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.ActivityDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDesignerFilter">
      <topicdata name="IDesignerFilter" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDesignerFilter" />
      <apidata name="IDesignerFilter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PostFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="PreFilterProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerFilter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignerHost">
      <topicdata group="api" />
      <apidata name="IDesignerHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" ref="true" />
        <type api="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2" ref="true" />
      </implementors>
      <elements>
        <element api="E:System.ComponentModel.Design.IDesignerHost.Activated" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.Activate" />
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent">
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
        </element>
        <element api="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.AddService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.RemoveService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.Container" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.Loading" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDesignerHost">
      <topicdata name="IDesignerHost" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDesignerHost" />
      <apidata name="IDesignerHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerHost.Activate" />
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent">
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
          <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
        </element>
        <element api="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)" />
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.AddService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IDesignerHost.RemoveService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IDesignerHost">
      <topicdata name="IDesignerHost" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IDesignerHost" />
      <apidata name="IDesignerHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesignerHost.Container" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.InTransaction" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.Loading" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName" />
        <element api="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.IDesignerHost">
      <topicdata name="IDesignerHost" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.IDesignerHost" />
      <apidata name="IDesignerHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.IDesignerHost.Activated" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.Deactivated" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.LoadComplete" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened" />
        <element api="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent">
      <topicdata name="CreateComponent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateComponent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
      <topicdata name="CreateTransaction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateTransaction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
        <element api="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.Activate">
      <topicdata group="api" />
      <apidata name="Activate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.Activated">
      <topicdata group="api" />
      <apidata name="Activated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Activated" />
      <remover name="remove_Activated" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.Container">
      <topicdata group="api" />
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:System.ComponentModel.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateComponent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="componentClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.CreateComponent(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="CreateComponent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="componentClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
      <topicdata group="api" />
      <apidata name="CreateTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.CreateTransaction(System.String)">
      <topicdata group="api" />
      <apidata name="CreateTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.Deactivated">
      <topicdata group="api" />
      <apidata name="Deactivated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Deactivated" />
      <remover name="remove_Deactivated" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.DestroyComponent(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="DestroyComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="GetDesigner" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerHost.GetType(System.String)">
      <topicdata group="api" />
      <apidata name="GetType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.InTransaction">
      <topicdata group="api" />
      <apidata name="InTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InTransaction" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.LoadComplete">
      <topicdata group="api" />
      <apidata name="LoadComplete" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoadComplete" />
      <remover name="remove_LoadComplete" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.Loading">
      <topicdata group="api" />
      <apidata name="Loading" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Loading" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.RootComponent">
      <topicdata group="api" />
      <apidata name="RootComponent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RootComponent" />
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.RootComponentClassName">
      <topicdata group="api" />
      <apidata name="RootComponentClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RootComponentClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.TransactionClosed">
      <topicdata group="api" />
      <apidata name="TransactionClosed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionClosed" />
      <remover name="remove_TransactionClosed" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.TransactionClosing">
      <topicdata group="api" />
      <apidata name="TransactionClosing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionClosing" />
      <remover name="remove_TransactionClosing" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.DesignerTransactionCloseEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHost.TransactionDescription">
      <topicdata group="api" />
      <apidata name="TransactionDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TransactionDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.TransactionOpened">
      <topicdata group="api" />
      <apidata name="TransactionOpened" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionOpened" />
      <remover name="remove_TransactionOpened" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.IDesignerHost.TransactionOpening">
      <topicdata group="api" />
      <apidata name="TransactionOpening" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_TransactionOpening" />
      <remover name="remove_TransactionOpening" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignerHostTransactionState">
      <topicdata group="api" />
      <apidata name="IDesignerHostTransactionState" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IDesignerHostTransactionState">
      <topicdata name="IDesignerHostTransactionState" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IDesignerHostTransactionState" />
      <apidata name="IDesignerHostTransactionState" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHostTransactionState" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IDesignerHostTransactionState.IsClosingTransaction">
      <topicdata group="api" />
      <apidata name="IsClosingTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsClosingTransaction" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerHostTransactionState" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignerOptionService">
      <topicdata group="api" />
      <apidata name="IDesignerOptionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.DesignerOptionService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDesignerOptionService">
      <topicdata name="IDesignerOptionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDesignerOptionService" />
      <apidata name="IDesignerOptionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerOptionService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetOptionValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetOptionValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignerOptionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <topicdata group="api" />
      <apidata name="IDesignTimeAssemblyLoader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>665f0ba5-ce72-4e87-9ba0-3c461de74d0b</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <topicdata name="IDesignTimeAssemblyLoader" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader" />
      <apidata name="IDesignTimeAssemblyLoader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <topicdata group="api" />
      <apidata name="GetTargetAssemblyPath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="runtimeOrTargetAssemblyName">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
        <parameter name="suggestedAssemblyPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFramework">
          <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <topicdata group="api" />
      <apidata name="LoadRuntimeAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetAssemblyName">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IDictionaryService">
      <topicdata group="api" />
      <apidata name="IDictionaryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDictionaryService.GetKey(System.Object)" />
        <element api="M:System.ComponentModel.Design.IDictionaryService.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.Design.IDictionaryService.SetValue(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IDictionaryService">
      <topicdata name="IDictionaryService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IDictionaryService" />
      <apidata name="IDictionaryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDictionaryService.GetKey(System.Object)" />
        <element api="M:System.ComponentModel.Design.IDictionaryService.GetValue(System.Object)" />
        <element api="M:System.ComponentModel.Design.IDictionaryService.SetValue(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDictionaryService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDictionaryService.GetKey(System.Object)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDictionaryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDictionaryService.GetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDictionaryService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IDictionaryService.SetValue(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IDictionaryService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IEventBindingService">
      <topicdata group="api" />
      <apidata name="IEventBindingService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.EventBindingService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode">
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IEventBindingService">
      <topicdata name="IEventBindingService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IEventBindingService" />
      <apidata name="IEventBindingService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)" />
        <element api="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode">
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
          <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode">
      <topicdata name="ShowCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)" />
        <element api="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateUniqueMethodName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="GetCompatibleMethods" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" />
      <apidata name="GetEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <topicdata group="api" />
      <apidata name="GetEventProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="events">
          <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="GetEventProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.ShowCode">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)">
      <topicdata group="api" />
      <apidata name="ShowCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IEventBindingService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IExtenderListService">
      <topicdata group="api" />
      <apidata name="IExtenderListService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IExtenderListService.GetExtenderProviders" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IExtenderListService">
      <topicdata name="IExtenderListService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IExtenderListService" />
      <apidata name="IExtenderListService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IExtenderListService.GetExtenderProviders" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IExtenderListService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IExtenderListService.GetExtenderProviders">
      <topicdata group="api" />
      <apidata name="GetExtenderProviders" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IExtenderListService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IExtenderProviderService">
      <topicdata group="api" />
      <apidata name="IExtenderProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(System.ComponentModel.IExtenderProvider)" />
        <element api="M:System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IExtenderProviderService">
      <topicdata name="IExtenderProviderService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IExtenderProviderService" />
      <apidata name="IExtenderProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(System.ComponentModel.IExtenderProvider)" />
        <element api="M:System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IExtenderProviderService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IExtenderProviderService.AddExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <topicdata group="api" />
      <apidata name="AddExtenderProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IExtenderProviderService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IExtenderProviderService.RemoveExtenderProvider(System.ComponentModel.IExtenderProvider)">
      <topicdata group="api" />
      <apidata name="RemoveExtenderProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IExtenderProviderService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IHelpService">
      <topicdata group="api" />
      <apidata name="IHelpService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ClearContextAttributes" />
        <element api="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)" />
        <element api="M:System.ComponentModel.Design.IHelpService.RemoveContextAttribute(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.IHelpService.RemoveLocalContext(System.ComponentModel.Design.IHelpService)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ShowHelpFromKeyword(System.String)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ShowHelpFromUrl(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IHelpService">
      <topicdata name="IHelpService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IHelpService" />
      <apidata name="IHelpService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ClearContextAttributes" />
        <element api="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)" />
        <element api="M:System.ComponentModel.Design.IHelpService.RemoveContextAttribute(System.String,System.String)" />
        <element api="M:System.ComponentModel.Design.IHelpService.RemoveLocalContext(System.ComponentModel.Design.IHelpService)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ShowHelpFromKeyword(System.String)" />
        <element api="M:System.ComponentModel.Design.IHelpService.ShowHelpFromUrl(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.AddContextAttribute(System.String,System.String,System.ComponentModel.Design.HelpKeywordType)">
      <topicdata group="api" />
      <apidata name="AddContextAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keywordType">
          <type api="T:System.ComponentModel.Design.HelpKeywordType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.ClearContextAttributes">
      <topicdata group="api" />
      <apidata name="ClearContextAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.CreateLocalContext(System.ComponentModel.Design.HelpContextType)">
      <topicdata group="api" />
      <apidata name="CreateLocalContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.ComponentModel.Design.HelpContextType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.RemoveContextAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RemoveContextAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.RemoveLocalContext(System.ComponentModel.Design.IHelpService)">
      <topicdata group="api" />
      <apidata name="RemoveLocalContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="localContext">
          <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.ShowHelpFromKeyword(System.String)">
      <topicdata group="api" />
      <apidata name="ShowHelpFromKeyword" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="helpKeyword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IHelpService.ShowHelpFromUrl(System.String)">
      <topicdata group="api" />
      <apidata name="ShowHelpFromUrl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="helpUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IHelpService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IInheritanceService">
      <topicdata group="api" />
      <apidata name="IInheritanceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
        <element api="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IInheritanceService">
      <topicdata name="IInheritanceService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IInheritanceService" />
      <apidata name="IInheritanceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
        <element api="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IInheritanceService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <topicdata group="api" />
      <apidata name="AddInheritedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IInheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="GetInheritanceAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IInheritanceService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IMenuCommandService">
      <topicdata group="api" />
      <apidata name="IMenuCommandService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
        <element api="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IMenuCommandService">
      <topicdata name="IMenuCommandService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IMenuCommandService" />
      <apidata name="IMenuCommandService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IMenuCommandService">
      <topicdata name="IMenuCommandService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IMenuCommandService" />
      <apidata name="IMenuCommandService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IMenuCommandService.Verbs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <topicdata group="api" />
      <apidata name="AddCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="AddVerb" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="verb">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name="FindCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="commandID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name="GlobalInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="commandID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <topicdata group="api" />
      <apidata name="RemoveCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="RemoveVerb" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="verb">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ShowContextMenu" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="menuID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IMenuCommandService.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IMultitargetHelperService">
      <topicdata group="api" />
      <apidata name="IMultitargetHelperService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IMultitargetHelperService">
      <topicdata name="IMultitargetHelperService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IMultitargetHelperService" />
      <apidata name="IMultitargetHelperService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMultitargetHelperService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetAssemblyQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IMultitargetHelperService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.InheritanceService">
      <topicdata group="api" />
      <apidata name="InheritanceService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.IInheritanceService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Design.InheritanceService.#ctor" />
        <element api="Overload:System.ComponentModel.Design.InheritanceService.AddInheritedComponents">
          <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
          <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.InheritanceService.Dispose">
          <element api="M:System.ComponentModel.Design.InheritanceService.Dispose" />
          <element api="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.InheritanceService">
      <topicdata name="InheritanceService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.InheritanceService" />
      <apidata name="InheritanceService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.InheritanceService.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.InheritanceService.AddInheritedComponents">
          <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
          <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.InheritanceService.Dispose">
          <element api="M:System.ComponentModel.Design.InheritanceService.Dispose" />
          <element api="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.InheritanceService.AddInheritedComponents">
      <topicdata name="AddInheritedComponents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddInheritedComponents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
        <element api="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.InheritanceService.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.InheritanceService.Dispose" />
        <element api="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <topicdata group="api" />
      <apidata name="AddInheritedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.InheritanceService.AddInheritedComponents" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IInheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
          <type api="T:System.ComponentModel.Design.IInheritanceService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <topicdata group="api" />
      <apidata name="AddInheritedComponents" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.InheritanceService.AddInheritedComponents" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.ComponentModel.IContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.InheritanceService.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.InheritanceService.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="GetInheritanceAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.InheritanceAttribute" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IInheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
          <type api="T:System.ComponentModel.Design.IInheritanceService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="IgnoreInheritedMember" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.InheritanceService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IReferenceService">
      <topicdata group="api" />
      <apidata name="IReferenceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IReferenceService.GetComponent(System.Object)" />
        <element api="M:System.ComponentModel.Design.IReferenceService.GetName(System.Object)" />
        <element api="M:System.ComponentModel.Design.IReferenceService.GetReference(System.String)" />
        <element api="Overload:System.ComponentModel.Design.IReferenceService.GetReferences">
          <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences" />
          <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IReferenceService">
      <topicdata name="IReferenceService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IReferenceService" />
      <apidata name="IReferenceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IReferenceService.GetComponent(System.Object)" />
        <element api="M:System.ComponentModel.Design.IReferenceService.GetName(System.Object)" />
        <element api="M:System.ComponentModel.Design.IReferenceService.GetReference(System.String)" />
        <element api="Overload:System.ComponentModel.Design.IReferenceService.GetReferences">
          <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences" />
          <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IReferenceService.GetReferences">
      <topicdata name="GetReferences" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetReferences" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences" />
        <element api="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IReferenceService.GetComponent(System.Object)">
      <topicdata group="api" />
      <apidata name="GetComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reference">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IReferenceService.GetName(System.Object)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reference">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IReferenceService.GetReference(System.String)">
      <topicdata group="api" />
      <apidata name="GetReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IReferenceService.GetReferences">
      <topicdata group="api" />
      <apidata name="GetReferences" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IReferenceService.GetReferences" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IReferenceService.GetReferences(System.Type)">
      <topicdata group="api" />
      <apidata name="GetReferences" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IReferenceService.GetReferences" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IReferenceService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IResourceService">
      <topicdata group="api" />
      <apidata name="IResourceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IResourceService.GetResourceReader(System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.Design.IResourceService.GetResourceWriter(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IResourceService">
      <topicdata name="IResourceService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IResourceService" />
      <apidata name="IResourceService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IResourceService.GetResourceReader(System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.Design.IResourceService.GetResourceWriter(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IResourceService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IResourceService.GetResourceReader(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetResourceReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Resources.IResourceReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IResourceService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IResourceService.GetResourceWriter(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetResourceWriter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Resources.IResourceWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IResourceService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IRootDesigner">
      <topicdata group="api" />
      <apidata name="IRootDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Web.UI.Design.WebFormsRootDesigner" ref="true" />
        <type api="T:System.Windows.Forms.Design.ComponentDocumentDesigner" ref="true" />
        <type api="T:System.Windows.Forms.Design.DocumentDesigner" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" ref="true" />
        <type api="T:System.Workflow.ComponentModel.Design.ActivityDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
        <element api="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IRootDesigner">
      <topicdata name="IRootDesigner" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IRootDesigner" />
      <apidata name="IRootDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IRootDesigner" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.IRootDesigner">
      <topicdata name="IRootDesigner" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.IRootDesigner" />
      <apidata name="IRootDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
        <element api="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IRootDesigner" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <topicdata group="api" />
      <apidata name="GetView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="technology">
          <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IRootDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies">
      <topicdata group="api" />
      <apidata name="SupportedTechnologies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportedTechnologies" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IRootDesigner" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ISelectionService">
      <topicdata group="api" />
      <apidata name="ISelectionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.ISelectionService.SelectionChanged" />
        <element api="E:System.ComponentModel.Design.ISelectionService.SelectionChanging" />
        <element api="M:System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)" />
        <element api="M:System.ComponentModel.Design.ISelectionService.GetSelectedComponents" />
        <element api="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents">
          <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)" />
          <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)" />
        </element>
        <element api="P:System.ComponentModel.Design.ISelectionService.PrimarySelection" />
        <element api="P:System.ComponentModel.Design.ISelectionService.SelectionCount" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ISelectionService">
      <topicdata name="ISelectionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ISelectionService" />
      <apidata name="ISelectionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)" />
        <element api="M:System.ComponentModel.Design.ISelectionService.GetSelectedComponents" />
        <element api="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents">
          <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)" />
          <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ISelectionService">
      <topicdata name="ISelectionService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ISelectionService" />
      <apidata name="ISelectionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.ISelectionService.PrimarySelection" />
        <element api="P:System.ComponentModel.Design.ISelectionService.SelectionCount" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.ISelectionService">
      <topicdata name="ISelectionService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.ISelectionService" />
      <apidata name="ISelectionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.ISelectionService.SelectionChanged" />
        <element api="E:System.ComponentModel.Design.ISelectionService.SelectionChanging" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents">
      <topicdata name="SetSelectedComponents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetSelectedComponents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)" />
        <element api="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ISelectionService.GetComponentSelected(System.Object)">
      <topicdata group="api" />
      <apidata name="GetComponentSelected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ISelectionService.GetSelectedComponents">
      <topicdata group="api" />
      <apidata name="GetSelectedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ISelectionService.PrimarySelection">
      <topicdata group="api" />
      <apidata name="PrimarySelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_PrimarySelection" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.ISelectionService.SelectionChanged">
      <topicdata group="api" />
      <apidata name="SelectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_SelectionChanged" />
      <remover name="remove_SelectionChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.ISelectionService.SelectionChanging">
      <topicdata group="api" />
      <apidata name="SelectionChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_SelectionChanging" />
      <remover name="remove_SelectionChanging" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ISelectionService.SelectionCount">
      <topicdata group="api" />
      <apidata name="SelectionCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SelectionCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection)">
      <topicdata group="api" />
      <apidata name="SetSelectedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="components">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ISelectionService.SetSelectedComponents(System.Collections.ICollection,System.ComponentModel.Design.SelectionTypes)">
      <topicdata group="api" />
      <apidata name="SetSelectedComponents" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="components">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
        <parameter name="selectionType">
          <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ISelectionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.IServiceContainer">
      <topicdata group="api" />
      <apidata name="IServiceContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Design.IDesignerHost" ref="true" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
        <type api="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" ref="true" />
        <type api="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost2" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.ComponentModel.Design.IServiceContainer.AddService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.IServiceContainer">
      <topicdata name="IServiceContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.IServiceContainer" />
      <apidata name="IServiceContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.IServiceContainer.AddService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService">
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.IServiceProvider.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IServiceContainer.AddService">
      <topicdata name="AddService" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddService" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
        <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService">
      <topicdata name="RemoveService" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)" />
        <element api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.AddService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.ComponentModel.Design.ServiceCreatorCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.AddService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.ComponentModel.Design.ServiceCreatorCallback" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.AddService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.AddService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ITreeDesigner">
      <topicdata group="api" />
      <apidata name="ITreeDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ComponentModel.Design.ComponentDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
        <element api="P:System.ComponentModel.Design.ITreeDesigner.Children" />
        <element api="P:System.ComponentModel.Design.ITreeDesigner.Parent" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ITreeDesigner">
      <topicdata name="ITreeDesigner" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ITreeDesigner" />
      <apidata name="ITreeDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />
        <element api="M:System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITreeDesigner" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ITreeDesigner">
      <topicdata name="ITreeDesigner" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ITreeDesigner" />
      <apidata name="ITreeDesigner" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.IDesigner.Component" />
        <element api="P:System.ComponentModel.Design.IDesigner.Verbs" />
        <element api="P:System.ComponentModel.Design.ITreeDesigner.Children" />
        <element api="P:System.ComponentModel.Design.ITreeDesigner.Parent" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITreeDesigner" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ITreeDesigner.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ITreeDesigner.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.ComponentModel.Design.IDesigner" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITreeDesigner" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ITypeDescriptorFilterService">
      <topicdata group="api" />
      <apidata name="ITypeDescriptorFilterService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Forms.Design.ComponentDocumentDesigner" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ITypeDescriptorFilterService">
      <topicdata name="ITypeDescriptorFilterService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
      <apidata name="ITypeDescriptorFilterService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
        <element api="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDescriptorFilterService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="FilterAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDescriptorFilterService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="FilterEvents" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="events">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDescriptorFilterService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="FilterProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDescriptorFilterService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ITypeDiscoveryService">
      <topicdata group="api" />
      <apidata name="ITypeDiscoveryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ITypeDiscoveryService">
      <topicdata name="ITypeDiscoveryService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ITypeDiscoveryService" />
      <apidata name="ITypeDiscoveryService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDiscoveryService" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeDiscoveryService.GetTypes(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetTypes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="excludeGlobalTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeDiscoveryService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ITypeResolutionService">
      <topicdata group="api" />
      <apidata name="ITypeResolutionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly">
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
        <element api="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType">
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ITypeResolutionService">
      <topicdata name="ITypeResolutionService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ITypeResolutionService" />
      <apidata name="ITypeResolutionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly">
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)" />
        <element api="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType">
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly">
      <topicdata name="GetAssembly" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetAssembly" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)" />
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType">
      <topicdata name="GetType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)" />
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
      <topicdata group="api" />
      <apidata name="GetAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
      <topicdata group="api" />
      <apidata name="GetPathOfAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
      <topicdata group="api" />
      <apidata name="GetType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ITypeResolutionService.ReferenceAssembly(System.Reflection.AssemblyName)">
      <topicdata group="api" />
      <apidata name="ReferenceAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ITypeResolutionService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.LoadedEventArgs">
      <topicdata group="api" />
      <apidata name="LoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.LoadedEventArgs.Errors" />
        <element api="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.LoadedEventArgs">
      <topicdata name="LoadedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.LoadedEventArgs" />
      <apidata name="LoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.LoadedEventArgs">
      <topicdata name="LoadedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.LoadedEventArgs" />
      <apidata name="LoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.LoadedEventArgs.Errors" />
        <element api="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="succeeded">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="errors">
          <type api="T:System.Collections.ICollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Errors" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <topicdata group="api" />
      <apidata name="HasSucceeded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasSucceeded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.LoadedEventHandler">
      <topicdata group="api" />
      <apidata name="LoadedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.LoadedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <topicdata group="api" />
      <apidata name="LocalizationExtenderProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
          <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
          <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated. Use CodeDomLocalizationProvider instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <topicdata name="LocalizationExtenderProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.LocalizationExtenderProvider" />
      <apidata name="LocalizationExtenderProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
          <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
          <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
        <element api="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.ComponentModel.ISite" ref="true" />
        </parameter>
        <parameter name="baseComponent">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <topicdata group="api" />
      <apidata name="CanExtend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)">
          <type api="T:System.ComponentModel.IExtenderProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <topicdata group="api" />
      <apidata name="GetLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <topicdata group="api" />
      <apidata name="GetLoadLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <topicdata group="api" />
      <apidata name="GetLocalizable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <topicdata group="api" />
      <apidata name="ResetLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="SetLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetLocalizable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="localizable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeLanguage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.LocalizationExtenderProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.MenuCommand">
      <topicdata group="api" />
      <apidata name="MenuCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
        <element api="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)" />
        <element api="Overload:System.ComponentModel.Design.MenuCommand.Invoke">
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke" />
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.MenuCommand.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Checked" />
        <element api="P:System.ComponentModel.Design.MenuCommand.CommandID" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Enabled" />
        <element api="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Properties" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Supported" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.MenuCommand">
      <topicdata name="MenuCommand" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.MenuCommand" />
      <apidata name="MenuCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.MenuCommand.Invoke">
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke" />
          <element api="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.MenuCommand.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.MenuCommand">
      <topicdata name="MenuCommand" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.MenuCommand" />
      <apidata name="MenuCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.MenuCommand.Checked" />
        <element api="P:System.ComponentModel.Design.MenuCommand.CommandID" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Enabled" />
        <element api="P:System.ComponentModel.Design.MenuCommand.OleStatus" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Properties" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Supported" />
        <element api="P:System.ComponentModel.Design.MenuCommand.Visible" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.MenuCommand">
      <topicdata name="MenuCommand" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.MenuCommand" />
      <apidata name="MenuCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommand.CommandChanged" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MenuCommand.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommand.Invoke" />
        <element api="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommand.#ctor(System.EventHandler,System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.EventHandler" ref="true" />
        </parameter>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.Checked">
      <topicdata group="api" />
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.MenuCommand.CommandChanged">
      <topicdata group="api" />
      <apidata name="CommandChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CommandChanged" />
      <remover name="remove_CommandChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.CommandID">
      <topicdata group="api" />
      <apidata name="CommandID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CommandID" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommand.Invoke">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommand.Invoke" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommand.Invoke(System.Object)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommand.Invoke" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.OleStatus">
      <topicdata group="api" />
      <apidata name="OleStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_OleStatus" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommand.OnCommandChanged(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnCommandChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.Supported">
      <topicdata group="api" />
      <apidata name="Supported" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Supported" />
      <setter name="set_Supported" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommand.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommand.Visible">
      <topicdata group="api" />
      <apidata name="Visible" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Visible" />
      <setter name="set_Visible" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <topicdata group="api" />
      <apidata name="MenuCommandsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <topicdata name="MenuCommandsChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      <apidata name="MenuCommandsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <topicdata name="MenuCommandsChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      <apidata name="MenuCommandsChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType" />
        <element api="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="changeType">
          <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
        </parameter>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <topicdata group="api" />
      <apidata name="ChangeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangeType" />
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <topicdata group="api" />
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Command" />
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <topicdata group="api" />
      <apidata name="MenuCommandsChangedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <topicdata group="api" />
      <apidata name="MenuCommandsChangedType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded" />
        <element api="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved" />
        <element api="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <topicdata group="api" notopic="" />
      <apidata name="CommandAdded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <topicdata group="api" notopic="" />
      <apidata name="CommandChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <topicdata group="api" notopic="" />
      <apidata name="CommandRemoved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedType" ref="false" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.MenuCommandService">
      <topicdata group="api" />
      <apidata name="MenuCommandService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.Dispose">
          <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand">
          <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.GlobalInvoke">
          <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.MenuCommandService">
      <topicdata name="MenuCommandService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.MenuCommandService" />
      <apidata name="MenuCommandService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.Dispose">
          <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand">
          <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.MenuCommandService.GlobalInvoke">
          <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
          <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.MenuCommandService">
      <topicdata name="MenuCommandService" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.MenuCommandService" />
      <apidata name="MenuCommandService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.MenuCommandService.Verbs" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.MenuCommandService">
      <topicdata name="MenuCommandService" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.MenuCommandService" />
      <apidata name="MenuCommandService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MenuCommandService.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand">
      <topicdata name="FindCommand" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindCommand" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MenuCommandService.GlobalInvoke">
      <topicdata name="GlobalInvoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GlobalInvoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)" />
        <element api="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <topicdata group="api" />
      <apidata name="AddCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="AddVerb" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="verb">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.MenuCommandService.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <topicdata group="api" />
      <apidata name="EnsureVerbs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name="FindCommand" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="commandID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <topicdata group="api" />
      <apidata name="FindCommand" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.MenuCommandService.FindCommand" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetCommandList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <topicdata group="api" />
      <apidata name="GlobalInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommandService.GlobalInvoke" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="commandID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <topicdata group="api" />
      <apidata name="GlobalInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MenuCommandService.GlobalInvoke" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="commandId">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
        <parameter name="arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <topicdata group="api" />
      <apidata name="MenuCommandsChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MenuCommandsChanged" />
      <remover name="remove_MenuCommandsChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCommandsChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <topicdata group="api" />
      <apidata name="RemoveCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="command">
          <type api="T:System.ComponentModel.Design.MenuCommand" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <topicdata group="api" />
      <apidata name="RemoveVerb" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="verb">
          <type api="T:System.ComponentModel.Design.DesignerVerb" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="ShowContextMenu" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="menuID">
          <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
        </parameter>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <type api="T:System.ComponentModel.Design.DesignerVerbCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Design.IMenuCommandService.Verbs">
          <type api="T:System.ComponentModel.Design.IMenuCommandService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MenuCommandService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.MultilineStringEditor">
      <topicdata group="api" />
      <apidata name="MultilineStringEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.MultilineStringEditor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.MultilineStringEditor.#ctor" />
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.MultilineStringEditor">
      <topicdata name="MultilineStringEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.MultilineStringEditor" />
      <apidata name="MultilineStringEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.MultilineStringEditor.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.MultilineStringEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.MultilineStringEditor">
      <topicdata name="MultilineStringEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.MultilineStringEditor" />
      <apidata name="MultilineStringEditor" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.MultilineStringEditor.#ctor" />
      <elements>
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MultilineStringEditor.EditValue">
      <topicdata name="EditValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
        <element api="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle">
      <topicdata name="GetEditStyle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
        <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported">
      <topicdata name="GetPaintValueSupported" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetPaintValueSupported" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
        <element api="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MultilineStringEditor.EditValue" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Drawing.Design.UITypeEditorEditStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetPaintValueSupported" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <topicdata group="api" />
      <apidata name="ObjectSelectorEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue" />
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue" />
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ObjectSelectorEditor">
      <topicdata name="ObjectSelectorEditor" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      <apidata name="ObjectSelectorEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue">
          <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle">
          <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetPaintValueSupported">
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
          <element api="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.PaintValue">
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
          <element api="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ObjectSelectorEditor">
      <topicdata name="ObjectSelectorEditor" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      <apidata name="ObjectSelectorEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <elements>
        <element api="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.ObjectSelectorEditor">
      <topicdata name="ObjectSelectorEditor" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      <apidata name="ObjectSelectorEditor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue" />
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue" />
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue">
      <topicdata name="EditValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle">
      <topicdata name="GetEditStyle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.ObjectSelectorEditor.#ctor" />
      <parameters>
        <parameter name="subObjectSelector">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <topicdata group="api" />
      <apidata name="currValue" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <topicdata group="api" />
      <apidata name="EditValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <topicdata group="api" />
      <apidata name="EqualsToValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="FillTreeWithData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="selector">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
            <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
          </type>
        </parameter>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <topicdata group="api" />
      <apidata name="GetEditStyle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Drawing.Design.UITypeEditorEditStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <topicdata group="api" />
      <apidata name="prevValue" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <topicdata group="api" />
      <apidata name="SubObjectSelector" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <topicdata group="api" />
      <apidata name="Selector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.TreeView" ref="true" />
          <type api="T:System.Windows.Forms.Control" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.TreeView.AfterCheck" />
        <element api="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <element api="E:System.Windows.Forms.TreeView.AfterExpand" />
        <element api="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <element api="E:System.Windows.Forms.TreeView.AfterSelect" />
        <element api="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <element api="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <element api="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <element api="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <element api="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <element api="E:System.Windows.Forms.TreeView.DrawNode" />
        <element api="E:System.Windows.Forms.TreeView.ItemDrag" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseClick" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseHover" />
        <element api="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect">
          <element api="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCreateControl" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.TreeView.BeginUpdate" />
        <element api="M:System.Windows.Forms.TreeView.CollapseAll" />
        <element api="M:System.Windows.Forms.TreeView.CreateHandle" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.EndUpdate" />
        <element api="M:System.Windows.Forms.TreeView.ExpandAll" />
        <element api="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.GetNodeAt">
          <element api="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.HitTest">
          <element api="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.Sort" />
        <element api="M:System.Windows.Forms.TreeView.ToString" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BindingContext" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanEnableIme" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.ClientSize" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.DisplayRectangle" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Location" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.MaximumSize" />
        <element api="P:System.Windows.Forms.Control.MinimumSize" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Size" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.TabStop" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.TreeView.BackColor" />
        <element api="P:System.Windows.Forms.TreeView.BorderStyle" />
        <element api="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <element api="P:System.Windows.Forms.TreeView.CreateParams" />
        <element api="P:System.Windows.Forms.TreeView.DefaultSize" />
        <element api="P:System.Windows.Forms.TreeView.DrawMode" />
        <element api="P:System.Windows.Forms.TreeView.ForeColor" />
        <element api="P:System.Windows.Forms.TreeView.FullRowSelect" />
        <element api="P:System.Windows.Forms.TreeView.HideSelection" />
        <element api="P:System.Windows.Forms.TreeView.HotTracking" />
        <element api="P:System.Windows.Forms.TreeView.ImageIndex" />
        <element api="P:System.Windows.Forms.TreeView.ImageKey" />
        <element api="P:System.Windows.Forms.TreeView.ImageList" />
        <element api="P:System.Windows.Forms.TreeView.Indent" />
        <element api="P:System.Windows.Forms.TreeView.ItemHeight" />
        <element api="P:System.Windows.Forms.TreeView.LabelEdit" />
        <element api="P:System.Windows.Forms.TreeView.LineColor" />
        <element api="P:System.Windows.Forms.TreeView.Nodes" />
        <element api="P:System.Windows.Forms.TreeView.PathSeparator" />
        <element api="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.TreeView.Scrollable" />
        <element api="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
        <element api="P:System.Windows.Forms.TreeView.SelectedImageKey" />
        <element api="P:System.Windows.Forms.TreeView.SelectedNode" />
        <element api="P:System.Windows.Forms.TreeView.ShowLines" />
        <element api="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
        <element api="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
        <element api="P:System.Windows.Forms.TreeView.ShowRootLines" />
        <element api="P:System.Windows.Forms.TreeView.StateImageList" />
        <element api="P:System.Windows.Forms.TreeView.TopNode" />
        <element api="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
        <element api="P:System.Windows.Forms.TreeView.VisibleCount" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <topicdata name="Selector" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      <apidata name="Selector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect">
          <element api="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
          <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)" />
        </element>
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AccessibilityNotifyClients">
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.BeginInvoke">
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.BringToFront" />
        <element api="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
        <element api="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <element api="M:System.Windows.Forms.Control.CreateControl" />
        <element api="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <element api="M:System.Windows.Forms.Control.CreateGraphics" />
        <element api="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.DestroyHandle" />
        <element api="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <element api="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.Windows.Forms.Control.FindForm" />
        <element api="M:System.Windows.Forms.Control.Focus" />
        <element api="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
        <element api="M:System.Windows.Forms.Control.GetAutoSizeMode" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.GetChildAtPoint">
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
        </element>
        <element api="M:System.Windows.Forms.Control.GetContainerControl" />
        <element api="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <element api="M:System.Windows.Forms.Control.GetTopLevel" />
        <element api="M:System.Windows.Forms.Control.Hide" />
        <element api="M:System.Windows.Forms.Control.InitLayout" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Invalidate">
          <element api="M:System.Windows.Forms.Control.Invalidate" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
          <element api="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Invoke">
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
          <element api="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
        </element>
        <element api="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.LogicalToDeviceUnits">
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
          <element api="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
        </element>
        <element api="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnCreateControl" />
        <element api="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
        <element api="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.PerformLayout">
          <element api="M:System.Windows.Forms.Control.PerformLayout" />
          <element api="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
        </element>
        <element api="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <element api="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
        <element api="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
        <element api="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
        <element api="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
        <element api="M:System.Windows.Forms.Control.RecreateHandle" />
        <element api="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
        <element api="M:System.Windows.Forms.Control.Refresh" />
        <element api="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
        <element api="M:System.Windows.Forms.Control.ResetText" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.ResumeLayout">
          <element api="M:System.Windows.Forms.Control.ResumeLayout" />
          <element api="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.RtlTranslateAlignment">
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
          <element api="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
        </element>
        <element api="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <element api="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
        <element api="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
        <element api="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
        <element api="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Select">
          <element api="M:System.Windows.Forms.Control.Select" />
          <element api="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SendToBack" />
        <element api="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetBounds">
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        </element>
        <element api="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <element api="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
        <element api="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <element api="M:System.Windows.Forms.Control.Show" />
        <element api="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
        <element api="M:System.Windows.Forms.Control.SuspendLayout" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
        <element api="M:System.Windows.Forms.Control.Update" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.UpdateBounds">
          <element api="M:System.Windows.Forms.Control.UpdateBounds" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.Control.UpdateStyles" />
        <element api="M:System.Windows.Forms.Control.UpdateZOrder" />
        <element api="M:System.Windows.Forms.TreeView.BeginUpdate" />
        <element api="M:System.Windows.Forms.TreeView.CollapseAll" />
        <element api="M:System.Windows.Forms.TreeView.CreateHandle" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.EndUpdate" />
        <element api="M:System.Windows.Forms.TreeView.ExpandAll" />
        <element api="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.GetNodeAt">
          <element api="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.HitTest">
          <element api="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
          <element api="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
        <element api="M:System.Windows.Forms.TreeView.Sort" />
        <element api="M:System.Windows.Forms.TreeView.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <topicdata name="Selector" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      <apidata name="Selector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.Windows.Forms.Control.AccessibilityObject" />
        <element api="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleDescription" />
        <element api="P:System.Windows.Forms.Control.AccessibleName" />
        <element api="P:System.Windows.Forms.Control.AccessibleRole" />
        <element api="P:System.Windows.Forms.Control.AllowDrop" />
        <element api="P:System.Windows.Forms.Control.Anchor" />
        <element api="P:System.Windows.Forms.Control.AutoScrollOffset" />
        <element api="P:System.Windows.Forms.Control.BindingContext" />
        <element api="P:System.Windows.Forms.Control.Bottom" />
        <element api="P:System.Windows.Forms.Control.Bounds" />
        <element api="P:System.Windows.Forms.Control.CanEnableIme" />
        <element api="P:System.Windows.Forms.Control.CanFocus" />
        <element api="P:System.Windows.Forms.Control.CanRaiseEvents" />
        <element api="P:System.Windows.Forms.Control.CanSelect" />
        <element api="P:System.Windows.Forms.Control.Capture" />
        <element api="P:System.Windows.Forms.Control.CausesValidation" />
        <element api="P:System.Windows.Forms.Control.ClientRectangle" />
        <element api="P:System.Windows.Forms.Control.ClientSize" />
        <element api="P:System.Windows.Forms.Control.CompanyName" />
        <element api="P:System.Windows.Forms.Control.ContainsFocus" />
        <element api="P:System.Windows.Forms.Control.ContextMenu" />
        <element api="P:System.Windows.Forms.Control.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.Control.Controls" />
        <element api="P:System.Windows.Forms.Control.Created" />
        <element api="P:System.Windows.Forms.Control.Cursor" />
        <element api="P:System.Windows.Forms.Control.DataBindings" />
        <element api="P:System.Windows.Forms.Control.DefaultCursor" />
        <element api="P:System.Windows.Forms.Control.DefaultImeMode" />
        <element api="P:System.Windows.Forms.Control.DefaultMargin" />
        <element api="P:System.Windows.Forms.Control.DefaultMaximumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultMinimumSize" />
        <element api="P:System.Windows.Forms.Control.DefaultPadding" />
        <element api="P:System.Windows.Forms.Control.DeviceDpi" />
        <element api="P:System.Windows.Forms.Control.DisplayRectangle" />
        <element api="P:System.Windows.Forms.Control.Disposing" />
        <element api="P:System.Windows.Forms.Control.Dock" />
        <element api="P:System.Windows.Forms.Control.Enabled" />
        <element api="P:System.Windows.Forms.Control.Focused" />
        <element api="P:System.Windows.Forms.Control.Font" />
        <element api="P:System.Windows.Forms.Control.FontHeight" />
        <element api="P:System.Windows.Forms.Control.Handle" />
        <element api="P:System.Windows.Forms.Control.HasChildren" />
        <element api="P:System.Windows.Forms.Control.Height" />
        <element api="P:System.Windows.Forms.Control.ImeMode" />
        <element api="P:System.Windows.Forms.Control.ImeModeBase" />
        <element api="P:System.Windows.Forms.Control.InvokeRequired" />
        <element api="P:System.Windows.Forms.Control.IsAccessible" />
        <element api="P:System.Windows.Forms.Control.IsDisposed" />
        <element api="P:System.Windows.Forms.Control.IsHandleCreated" />
        <element api="P:System.Windows.Forms.Control.IsMirrored" />
        <element api="P:System.Windows.Forms.Control.LayoutEngine" />
        <element api="P:System.Windows.Forms.Control.Left" />
        <element api="P:System.Windows.Forms.Control.Location" />
        <element api="P:System.Windows.Forms.Control.Margin" />
        <element api="P:System.Windows.Forms.Control.MaximumSize" />
        <element api="P:System.Windows.Forms.Control.MinimumSize" />
        <element api="P:System.Windows.Forms.Control.Name" />
        <element api="P:System.Windows.Forms.Control.Padding" />
        <element api="P:System.Windows.Forms.Control.Parent" />
        <element api="P:System.Windows.Forms.Control.PreferredSize" />
        <element api="P:System.Windows.Forms.Control.ProductName" />
        <element api="P:System.Windows.Forms.Control.ProductVersion" />
        <element api="P:System.Windows.Forms.Control.RecreatingHandle" />
        <element api="P:System.Windows.Forms.Control.Region" />
        <element api="P:System.Windows.Forms.Control.RenderRightToLeft" />
        <element api="P:System.Windows.Forms.Control.ResizeRedraw" />
        <element api="P:System.Windows.Forms.Control.Right" />
        <element api="P:System.Windows.Forms.Control.RightToLeft" />
        <element api="P:System.Windows.Forms.Control.ScaleChildren" />
        <element api="P:System.Windows.Forms.Control.ShowFocusCues" />
        <element api="P:System.Windows.Forms.Control.ShowKeyboardCues" />
        <element api="P:System.Windows.Forms.Control.Site" />
        <element api="P:System.Windows.Forms.Control.Size" />
        <element api="P:System.Windows.Forms.Control.TabIndex" />
        <element api="P:System.Windows.Forms.Control.TabStop" />
        <element api="P:System.Windows.Forms.Control.Tag" />
        <element api="P:System.Windows.Forms.Control.Top" />
        <element api="P:System.Windows.Forms.Control.TopLevelControl" />
        <element api="P:System.Windows.Forms.Control.UseWaitCursor" />
        <element api="P:System.Windows.Forms.Control.Visible" />
        <element api="P:System.Windows.Forms.Control.Width" />
        <element api="P:System.Windows.Forms.TreeView.BackColor" />
        <element api="P:System.Windows.Forms.TreeView.BorderStyle" />
        <element api="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <element api="P:System.Windows.Forms.TreeView.CreateParams" />
        <element api="P:System.Windows.Forms.TreeView.DefaultSize" />
        <element api="P:System.Windows.Forms.TreeView.DrawMode" />
        <element api="P:System.Windows.Forms.TreeView.ForeColor" />
        <element api="P:System.Windows.Forms.TreeView.FullRowSelect" />
        <element api="P:System.Windows.Forms.TreeView.HideSelection" />
        <element api="P:System.Windows.Forms.TreeView.HotTracking" />
        <element api="P:System.Windows.Forms.TreeView.ImageIndex" />
        <element api="P:System.Windows.Forms.TreeView.ImageKey" />
        <element api="P:System.Windows.Forms.TreeView.ImageList" />
        <element api="P:System.Windows.Forms.TreeView.Indent" />
        <element api="P:System.Windows.Forms.TreeView.ItemHeight" />
        <element api="P:System.Windows.Forms.TreeView.LabelEdit" />
        <element api="P:System.Windows.Forms.TreeView.LineColor" />
        <element api="P:System.Windows.Forms.TreeView.Nodes" />
        <element api="P:System.Windows.Forms.TreeView.PathSeparator" />
        <element api="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
        <element api="P:System.Windows.Forms.TreeView.Scrollable" />
        <element api="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
        <element api="P:System.Windows.Forms.TreeView.SelectedImageKey" />
        <element api="P:System.Windows.Forms.TreeView.SelectedNode" />
        <element api="P:System.Windows.Forms.TreeView.ShowLines" />
        <element api="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
        <element api="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
        <element api="P:System.Windows.Forms.TreeView.ShowRootLines" />
        <element api="P:System.Windows.Forms.TreeView.StateImageList" />
        <element api="P:System.Windows.Forms.TreeView.TopNode" />
        <element api="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
        <element api="P:System.Windows.Forms.TreeView.VisibleCount" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <topicdata name="Selector" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      <apidata name="Selector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Windows.Forms.Control.BackColorChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <element api="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <element api="E:System.Windows.Forms.Control.BindingContextChanged" />
        <element api="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <element api="E:System.Windows.Forms.Control.ChangeUICues" />
        <element api="E:System.Windows.Forms.Control.Click" />
        <element api="E:System.Windows.Forms.Control.ClientSizeChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <element api="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
        <element api="E:System.Windows.Forms.Control.ControlAdded" />
        <element api="E:System.Windows.Forms.Control.ControlRemoved" />
        <element api="E:System.Windows.Forms.Control.CursorChanged" />
        <element api="E:System.Windows.Forms.Control.DockChanged" />
        <element api="E:System.Windows.Forms.Control.DoubleClick" />
        <element api="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
        <element api="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
        <element api="E:System.Windows.Forms.Control.DragDrop" />
        <element api="E:System.Windows.Forms.Control.DragEnter" />
        <element api="E:System.Windows.Forms.Control.DragLeave" />
        <element api="E:System.Windows.Forms.Control.DragOver" />
        <element api="E:System.Windows.Forms.Control.EnabledChanged" />
        <element api="E:System.Windows.Forms.Control.Enter" />
        <element api="E:System.Windows.Forms.Control.FontChanged" />
        <element api="E:System.Windows.Forms.Control.ForeColorChanged" />
        <element api="E:System.Windows.Forms.Control.GiveFeedback" />
        <element api="E:System.Windows.Forms.Control.GotFocus" />
        <element api="E:System.Windows.Forms.Control.HandleCreated" />
        <element api="E:System.Windows.Forms.Control.HandleDestroyed" />
        <element api="E:System.Windows.Forms.Control.HelpRequested" />
        <element api="E:System.Windows.Forms.Control.ImeModeChanged" />
        <element api="E:System.Windows.Forms.Control.Invalidated" />
        <element api="E:System.Windows.Forms.Control.KeyDown" />
        <element api="E:System.Windows.Forms.Control.KeyPress" />
        <element api="E:System.Windows.Forms.Control.KeyUp" />
        <element api="E:System.Windows.Forms.Control.Layout" />
        <element api="E:System.Windows.Forms.Control.Leave" />
        <element api="E:System.Windows.Forms.Control.LocationChanged" />
        <element api="E:System.Windows.Forms.Control.LostFocus" />
        <element api="E:System.Windows.Forms.Control.MarginChanged" />
        <element api="E:System.Windows.Forms.Control.MouseCaptureChanged" />
        <element api="E:System.Windows.Forms.Control.MouseClick" />
        <element api="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <element api="E:System.Windows.Forms.Control.MouseDown" />
        <element api="E:System.Windows.Forms.Control.MouseEnter" />
        <element api="E:System.Windows.Forms.Control.MouseHover" />
        <element api="E:System.Windows.Forms.Control.MouseLeave" />
        <element api="E:System.Windows.Forms.Control.MouseMove" />
        <element api="E:System.Windows.Forms.Control.MouseUp" />
        <element api="E:System.Windows.Forms.Control.MouseWheel" />
        <element api="E:System.Windows.Forms.Control.Move" />
        <element api="E:System.Windows.Forms.Control.PaddingChanged" />
        <element api="E:System.Windows.Forms.Control.Paint" />
        <element api="E:System.Windows.Forms.Control.ParentChanged" />
        <element api="E:System.Windows.Forms.Control.PreviewKeyDown" />
        <element api="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
        <element api="E:System.Windows.Forms.Control.QueryContinueDrag" />
        <element api="E:System.Windows.Forms.Control.RegionChanged" />
        <element api="E:System.Windows.Forms.Control.Resize" />
        <element api="E:System.Windows.Forms.Control.RightToLeftChanged" />
        <element api="E:System.Windows.Forms.Control.SizeChanged" />
        <element api="E:System.Windows.Forms.Control.StyleChanged" />
        <element api="E:System.Windows.Forms.Control.SystemColorsChanged" />
        <element api="E:System.Windows.Forms.Control.TabIndexChanged" />
        <element api="E:System.Windows.Forms.Control.TabStopChanged" />
        <element api="E:System.Windows.Forms.Control.TextChanged" />
        <element api="E:System.Windows.Forms.Control.Validated" />
        <element api="E:System.Windows.Forms.Control.Validating" />
        <element api="E:System.Windows.Forms.Control.VisibleChanged" />
        <element api="E:System.Windows.Forms.TreeView.AfterCheck" />
        <element api="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <element api="E:System.Windows.Forms.TreeView.AfterExpand" />
        <element api="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <element api="E:System.Windows.Forms.TreeView.AfterSelect" />
        <element api="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <element api="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <element api="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <element api="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <element api="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <element api="E:System.Windows.Forms.TreeView.DrawNode" />
        <element api="E:System.Windows.Forms.TreeView.ItemDrag" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseClick" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
        <element api="E:System.Windows.Forms.TreeView.NodeMouseHover" />
        <element api="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <topicdata name="Selector" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      <apidata name="Selector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect">
      <topicdata name="OnAfterSelect" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnAfterSelect" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="editor">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <topicdata group="api" />
      <apidata name="AddNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parent">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" ref="true">
            <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <topicdata group="api" />
      <apidata name="clickSeen" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <topicdata group="api" />
      <apidata name="OnAfterSelect" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Forms.TreeViewEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <topicdata group="api" />
      <apidata name="OnKeyDown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
          <type api="T:System.Windows.Forms.TreeView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.KeyEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <topicdata group="api" />
      <apidata name="OnKeyPress" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
          <type api="T:System.Windows.Forms.TreeView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.KeyPressEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <topicdata group="api" />
      <apidata name="OnNodeMouseClick" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
          <type api="T:System.Windows.Forms.TreeView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <topicdata group="api" />
      <apidata name="SetSelection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="nodes">
          <type api="T:System.Windows.Forms.TreeNodeCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="edSvc">
          <type api="T:System.Windows.Forms.Design.IWindowsFormsEditorService" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <topicdata group="api" />
      <apidata name="WndProc" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)">
          <type api="T:System.Windows.Forms.TreeView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="m">
          <referenceTo>
            <type api="T:System.Windows.Forms.Message" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <topicdata group="api" />
      <apidata name="SelectorNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Forms.TreeNode" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value" />
        <element api="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <element api="M:System.Windows.Forms.TreeNode.Clone" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.Collapse">
          <element api="M:System.Windows.Forms.TreeNode.Collapse" />
          <element api="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <element api="M:System.Windows.Forms.TreeNode.EnsureVisible" />
        <element api="M:System.Windows.Forms.TreeNode.Expand" />
        <element api="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <element api="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
        <element api="M:System.Windows.Forms.TreeNode.Remove" />
        <element api="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.Toggle" />
        <element api="M:System.Windows.Forms.TreeNode.ToString" />
        <element api="P:System.Windows.Forms.TreeNode.BackColor" />
        <element api="P:System.Windows.Forms.TreeNode.Bounds" />
        <element api="P:System.Windows.Forms.TreeNode.Checked" />
        <element api="P:System.Windows.Forms.TreeNode.ContextMenu" />
        <element api="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.TreeNode.FirstNode" />
        <element api="P:System.Windows.Forms.TreeNode.ForeColor" />
        <element api="P:System.Windows.Forms.TreeNode.FullPath" />
        <element api="P:System.Windows.Forms.TreeNode.Handle" />
        <element api="P:System.Windows.Forms.TreeNode.ImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.ImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.Index" />
        <element api="P:System.Windows.Forms.TreeNode.IsEditing" />
        <element api="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <element api="P:System.Windows.Forms.TreeNode.IsSelected" />
        <element api="P:System.Windows.Forms.TreeNode.IsVisible" />
        <element api="P:System.Windows.Forms.TreeNode.LastNode" />
        <element api="P:System.Windows.Forms.TreeNode.Level" />
        <element api="P:System.Windows.Forms.TreeNode.Name" />
        <element api="P:System.Windows.Forms.TreeNode.NextNode" />
        <element api="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <element api="P:System.Windows.Forms.TreeNode.NodeFont" />
        <element api="P:System.Windows.Forms.TreeNode.Nodes" />
        <element api="P:System.Windows.Forms.TreeNode.Parent" />
        <element api="P:System.Windows.Forms.TreeNode.PrevNode" />
        <element api="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <element api="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.StateImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.StateImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.Tag" />
        <element api="P:System.Windows.Forms.TreeNode.Text" />
        <element api="P:System.Windows.Forms.TreeNode.ToolTipText" />
        <element api="P:System.Windows.Forms.TreeNode.TreeView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <topicdata name="SelectorNode" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      <apidata name="SelectorNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <element api="M:System.Windows.Forms.TreeNode.Clone" />
        <element api="Overload:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.Collapse">
          <element api="M:System.Windows.Forms.TreeNode.Collapse" />
          <element api="M:System.Windows.Forms.TreeNode.Collapse(System.Boolean)" />
        </element>
        <element api="M:System.Windows.Forms.TreeNode.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
        <element api="M:System.Windows.Forms.TreeNode.EnsureVisible" />
        <element api="M:System.Windows.Forms.TreeNode.Expand" />
        <element api="M:System.Windows.Forms.TreeNode.ExpandAll" />
        <element api="M:System.Windows.Forms.TreeNode.GetNodeCount(System.Boolean)" />
        <element api="M:System.Windows.Forms.TreeNode.Remove" />
        <element api="M:System.Windows.Forms.TreeNode.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Forms.TreeNode.Toggle" />
        <element api="M:System.Windows.Forms.TreeNode.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <topicdata name="SelectorNode" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      <apidata name="SelectorNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Forms.TreeNode.BackColor" />
        <element api="P:System.Windows.Forms.TreeNode.Bounds" />
        <element api="P:System.Windows.Forms.TreeNode.Checked" />
        <element api="P:System.Windows.Forms.TreeNode.ContextMenu" />
        <element api="P:System.Windows.Forms.TreeNode.ContextMenuStrip" />
        <element api="P:System.Windows.Forms.TreeNode.FirstNode" />
        <element api="P:System.Windows.Forms.TreeNode.ForeColor" />
        <element api="P:System.Windows.Forms.TreeNode.FullPath" />
        <element api="P:System.Windows.Forms.TreeNode.Handle" />
        <element api="P:System.Windows.Forms.TreeNode.ImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.ImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.Index" />
        <element api="P:System.Windows.Forms.TreeNode.IsEditing" />
        <element api="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <element api="P:System.Windows.Forms.TreeNode.IsSelected" />
        <element api="P:System.Windows.Forms.TreeNode.IsVisible" />
        <element api="P:System.Windows.Forms.TreeNode.LastNode" />
        <element api="P:System.Windows.Forms.TreeNode.Level" />
        <element api="P:System.Windows.Forms.TreeNode.Name" />
        <element api="P:System.Windows.Forms.TreeNode.NextNode" />
        <element api="P:System.Windows.Forms.TreeNode.NextVisibleNode" />
        <element api="P:System.Windows.Forms.TreeNode.NodeFont" />
        <element api="P:System.Windows.Forms.TreeNode.Nodes" />
        <element api="P:System.Windows.Forms.TreeNode.Parent" />
        <element api="P:System.Windows.Forms.TreeNode.PrevNode" />
        <element api="P:System.Windows.Forms.TreeNode.PrevVisibleNode" />
        <element api="P:System.Windows.Forms.TreeNode.SelectedImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.SelectedImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.StateImageIndex" />
        <element api="P:System.Windows.Forms.TreeNode.StateImageKey" />
        <element api="P:System.Windows.Forms.TreeNode.Tag" />
        <element api="P:System.Windows.Forms.TreeNode.Text" />
        <element api="P:System.Windows.Forms.TreeNode.ToolTipText" />
        <element api="P:System.Windows.Forms.TreeNode.TreeView" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <topicdata name="SelectorNode" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      <apidata name="SelectorNode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="label">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <topicdata group="api" />
      <apidata name="value" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" ref="true">
          <type api="T:System.ComponentModel.Design.ObjectSelectorEditor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <topicdata group="api" />
      <apidata name="ProjectTargetFrameworkAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <topicdata name="ProjectTargetFrameworkAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />
      <apidata name="ProjectTargetFrameworkAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <topicdata name="ProjectTargetFrameworkAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />
      <apidata name="ProjectTargetFrameworkAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="targetFrameworkMoniker">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <topicdata group="api" />
      <apidata name="TargetFrameworkMoniker" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetFrameworkMoniker" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.SelectionTypes">
      <topicdata group="api" />
      <apidata name="SelectionTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.SelectionTypes.Auto" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Normal" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Replace" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.MouseDown" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.MouseUp" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Click" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Primary" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Toggle" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Add" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Remove" />
        <element api="F:System.ComponentModel.Design.SelectionTypes.Valid" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Click">
      <topicdata group="api" notopic="" />
      <apidata name="Click" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated. Use SelectionTypes.Primary instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.MouseDown">
      <topicdata group="api" notopic="" />
      <apidata name="MouseDown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated.  It is no longer supported. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.MouseUp">
      <topicdata group="api" notopic="" />
      <apidata name="MouseUp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated.  It is no longer supported. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated. Use SelectionTypes.Auto instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Primary">
      <topicdata group="api" notopic="" />
      <apidata name="Primary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Replace">
      <topicdata group="api" notopic="" />
      <apidata name="Replace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Toggle">
      <topicdata group="api" notopic="" />
      <apidata name="Toggle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.SelectionTypes.Valid">
      <topicdata group="api" notopic="" />
      <apidata name="Valid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.SelectionTypes" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated. Use Enum class methods to determine valid values, or use a type converter. http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.ServiceContainer">
      <topicdata group="api" />
      <apidata name="ServiceContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        <type api="T:System.IServiceProvider" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.#ctor">
          <element api="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.AddService">
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.Dispose">
          <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService">
          <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.ServiceContainer.DefaultServices" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.ServiceContainer">
      <topicdata name="ServiceContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.ServiceContainer" />
      <apidata name="ServiceContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.AddService">
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.Dispose">
          <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)" />
        <element api="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService">
          <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)" />
          <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.ServiceContainer">
      <topicdata name="ServiceContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.ServiceContainer" />
      <apidata name="ServiceContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Design.ServiceContainer.DefaultServices" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ServiceContainer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Design.ServiceContainer.#ctor" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ServiceContainer.AddService">
      <topicdata name="AddService" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddService" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ServiceContainer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService">
      <topicdata name="RemoveService" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)" />
        <element api="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Design.ServiceContainer.#ctor" />
      <parameters>
        <parameter name="parentProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.AddService" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.ComponentModel.Design.ServiceCreatorCallback" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.AddService" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.ComponentModel.Design.ServiceCreatorCallback" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.AddService" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.AddService" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="serviceInstance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.ServiceContainer.DefaultServices">
      <topicdata group="api" />
      <apidata name="DefaultServices" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DefaultServices" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.ServiceContainer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RemoveService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="promote">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ServiceContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ServiceCreatorCallback">
      <topicdata group="api" />
      <apidata name="ServiceCreatorCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="container">
          <type api="T:System.ComponentModel.Design.IServiceContainer" ref="true" />
        </parameter>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ComponentModel.Design.StandardCommands">
      <topicdata group="api" />
      <apidata name="StandardCommands" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardCommands.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Forms.Design.MenuCommands" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Design.WorkflowMenuCommands" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignBottom" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignHorizontalCenters" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignLeft" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignRight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignTop" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignVerticalCenters" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeBottom" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeRight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.BringForward" />
        <element api="F:System.ComponentModel.Design.StandardCommands.BringToFront" />
        <element api="F:System.ComponentModel.Design.StandardCommands.CenterHorizontally" />
        <element api="F:System.ComponentModel.Design.StandardCommands.CenterVertically" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Copy" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Cut" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Delete" />
        <element api="F:System.ComponentModel.Design.StandardCommands.DocumentOutline" />
        <element api="F:System.ComponentModel.Design.StandardCommands.F1Help" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Group" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceConcatenate" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceDecrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceIncrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceMakeEqual" />
        <element api="F:System.ComponentModel.Design.StandardCommands.LineupIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.LockControls" />
        <element api="F:System.ComponentModel.Design.StandardCommands.MultiLevelRedo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.MultiLevelUndo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Paste" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Properties" />
        <element api="F:System.ComponentModel.Design.StandardCommands.PropertiesWindow" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Redo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Replace" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SelectAll" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SendBackward" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SendToBack" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ShowGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ShowLargeIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControl" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControlHeight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControlWidth" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToFit" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SnapToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.TabOrder" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Undo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Ungroup" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VerbFirst" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VerbLast" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceConcatenate" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceDecrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceIncrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceMakeEqual" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ViewCode" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ViewGrid" />
        <element api="M:System.ComponentModel.Design.StandardCommands.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.StandardCommands">
      <topicdata name="StandardCommands" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.StandardCommands" />
      <apidata name="StandardCommands" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardCommands.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.StandardCommands">
      <topicdata name="StandardCommands" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.StandardCommands" />
      <apidata name="StandardCommands" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardCommands.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignBottom" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignHorizontalCenters" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignLeft" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignRight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignTop" />
        <element api="F:System.ComponentModel.Design.StandardCommands.AlignVerticalCenters" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeBottom" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ArrangeRight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.BringForward" />
        <element api="F:System.ComponentModel.Design.StandardCommands.BringToFront" />
        <element api="F:System.ComponentModel.Design.StandardCommands.CenterHorizontally" />
        <element api="F:System.ComponentModel.Design.StandardCommands.CenterVertically" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Copy" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Cut" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Delete" />
        <element api="F:System.ComponentModel.Design.StandardCommands.DocumentOutline" />
        <element api="F:System.ComponentModel.Design.StandardCommands.F1Help" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Group" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceConcatenate" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceDecrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceIncrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.HorizSpaceMakeEqual" />
        <element api="F:System.ComponentModel.Design.StandardCommands.LineupIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.LockControls" />
        <element api="F:System.ComponentModel.Design.StandardCommands.MultiLevelRedo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.MultiLevelUndo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Paste" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Properties" />
        <element api="F:System.ComponentModel.Design.StandardCommands.PropertiesWindow" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Redo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Replace" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SelectAll" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SendBackward" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SendToBack" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ShowGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ShowLargeIcons" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControl" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControlHeight" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToControlWidth" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToFit" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SizeToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.SnapToGrid" />
        <element api="F:System.ComponentModel.Design.StandardCommands.TabOrder" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Undo" />
        <element api="F:System.ComponentModel.Design.StandardCommands.Ungroup" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VerbFirst" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VerbLast" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceConcatenate" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceDecrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceIncrease" />
        <element api="F:System.ComponentModel.Design.StandardCommands.VertSpaceMakeEqual" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ViewCode" />
        <element api="F:System.ComponentModel.Design.StandardCommands.ViewGrid" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.StandardCommands.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignBottom">
      <topicdata group="api" />
      <apidata name="AlignBottom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignHorizontalCenters">
      <topicdata group="api" />
      <apidata name="AlignHorizontalCenters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignLeft">
      <topicdata group="api" />
      <apidata name="AlignLeft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignRight">
      <topicdata group="api" />
      <apidata name="AlignRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignToGrid">
      <topicdata group="api" />
      <apidata name="AlignToGrid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignTop">
      <topicdata group="api" />
      <apidata name="AlignTop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.AlignVerticalCenters">
      <topicdata group="api" />
      <apidata name="AlignVerticalCenters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ArrangeBottom">
      <topicdata group="api" />
      <apidata name="ArrangeBottom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ArrangeIcons">
      <topicdata group="api" />
      <apidata name="ArrangeIcons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ArrangeRight">
      <topicdata group="api" />
      <apidata name="ArrangeRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.BringForward">
      <topicdata group="api" />
      <apidata name="BringForward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.BringToFront">
      <topicdata group="api" />
      <apidata name="BringToFront" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.CenterHorizontally">
      <topicdata group="api" />
      <apidata name="CenterHorizontally" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.CenterVertically">
      <topicdata group="api" />
      <apidata name="CenterVertically" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Cut">
      <topicdata group="api" />
      <apidata name="Cut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.DocumentOutline">
      <topicdata group="api" />
      <apidata name="DocumentOutline" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.F1Help">
      <topicdata group="api" />
      <apidata name="F1Help" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Group">
      <topicdata group="api" />
      <apidata name="Group" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.HorizSpaceConcatenate">
      <topicdata group="api" />
      <apidata name="HorizSpaceConcatenate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.HorizSpaceDecrease">
      <topicdata group="api" />
      <apidata name="HorizSpaceDecrease" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.HorizSpaceIncrease">
      <topicdata group="api" />
      <apidata name="HorizSpaceIncrease" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.HorizSpaceMakeEqual">
      <topicdata group="api" />
      <apidata name="HorizSpaceMakeEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.LineupIcons">
      <topicdata group="api" />
      <apidata name="LineupIcons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.LockControls">
      <topicdata group="api" />
      <apidata name="LockControls" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.MultiLevelRedo">
      <topicdata group="api" />
      <apidata name="MultiLevelRedo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.MultiLevelUndo">
      <topicdata group="api" />
      <apidata name="MultiLevelUndo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Paste">
      <topicdata group="api" />
      <apidata name="Paste" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.PropertiesWindow">
      <topicdata group="api" />
      <apidata name="PropertiesWindow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Redo">
      <topicdata group="api" />
      <apidata name="Redo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Replace">
      <topicdata group="api" />
      <apidata name="Replace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SelectAll">
      <topicdata group="api" />
      <apidata name="SelectAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SendBackward">
      <topicdata group="api" />
      <apidata name="SendBackward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SendToBack">
      <topicdata group="api" />
      <apidata name="SendToBack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ShowGrid">
      <topicdata group="api" />
      <apidata name="ShowGrid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ShowLargeIcons">
      <topicdata group="api" />
      <apidata name="ShowLargeIcons" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SizeToControl">
      <topicdata group="api" />
      <apidata name="SizeToControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SizeToControlHeight">
      <topicdata group="api" />
      <apidata name="SizeToControlHeight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SizeToControlWidth">
      <topicdata group="api" />
      <apidata name="SizeToControlWidth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SizeToFit">
      <topicdata group="api" />
      <apidata name="SizeToFit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SizeToGrid">
      <topicdata group="api" />
      <apidata name="SizeToGrid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.SnapToGrid">
      <topicdata group="api" />
      <apidata name="SnapToGrid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.TabOrder">
      <topicdata group="api" />
      <apidata name="TabOrder" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Undo">
      <topicdata group="api" />
      <apidata name="Undo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.Ungroup">
      <topicdata group="api" />
      <apidata name="Ungroup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VerbFirst">
      <topicdata group="api" />
      <apidata name="VerbFirst" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VerbLast">
      <topicdata group="api" />
      <apidata name="VerbLast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VertSpaceConcatenate">
      <topicdata group="api" />
      <apidata name="VertSpaceConcatenate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VertSpaceDecrease">
      <topicdata group="api" />
      <apidata name="VertSpaceDecrease" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VertSpaceIncrease">
      <topicdata group="api" />
      <apidata name="VertSpaceIncrease" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.VertSpaceMakeEqual">
      <topicdata group="api" />
      <apidata name="VertSpaceMakeEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ViewCode">
      <topicdata group="api" />
      <apidata name="ViewCode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardCommands.ViewGrid">
      <topicdata group="api" />
      <apidata name="ViewGrid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.CommandID" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardCommands" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.StandardToolWindows">
      <topicdata group="api" />
      <apidata name="StandardToolWindows" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardToolWindows.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ObjectBrowser" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.OutputWindow" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ProjectExplorer" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.PropertyBrowser" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.RelatedLinks" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ServerExplorer" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.TaskList" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.Toolbox" />
        <element api="M:System.ComponentModel.Design.StandardToolWindows.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.StandardToolWindows">
      <topicdata name="StandardToolWindows" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.StandardToolWindows" />
      <apidata name="StandardToolWindows" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardToolWindows.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" />
      </containers>
    </api>
    <api id="Fields.T:System.ComponentModel.Design.StandardToolWindows">
      <topicdata name="StandardToolWindows" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Design.StandardToolWindows" />
      <apidata name="StandardToolWindows" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Design.StandardToolWindows.#ctor" />
      <elements>
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ObjectBrowser" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.OutputWindow" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ProjectExplorer" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.PropertyBrowser" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.RelatedLinks" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.ServerExplorer" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.TaskList" />
        <element api="F:System.ComponentModel.Design.StandardToolWindows.Toolbox" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.StandardToolWindows.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.ObjectBrowser">
      <topicdata group="api" />
      <apidata name="ObjectBrowser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.OutputWindow">
      <topicdata group="api" />
      <apidata name="OutputWindow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.ProjectExplorer">
      <topicdata group="api" />
      <apidata name="ProjectExplorer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.PropertyBrowser">
      <topicdata group="api" />
      <apidata name="PropertyBrowser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.RelatedLinks">
      <topicdata group="api" />
      <apidata name="RelatedLinks" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.ServerExplorer">
      <topicdata group="api" />
      <apidata name="ServerExplorer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.TaskList">
      <topicdata group="api" />
      <apidata name="TaskList" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.StandardToolWindows.Toolbox">
      <topicdata group="api" />
      <apidata name="Toolbox" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.StandardToolWindows" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.TypeDescriptionProviderService">
      <topicdata group="api" />
      <apidata name="TypeDescriptionProviderService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.#ctor" />
        <element api="Overload:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider">
          <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)" />
          <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.TypeDescriptionProviderService">
      <topicdata name="TypeDescriptionProviderService" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.TypeDescriptionProviderService" />
      <apidata name="TypeDescriptionProviderService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider">
          <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)" />
          <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.TypeDescriptionProviderService" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider">
      <topicdata name="GetProvider" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)" />
        <element api="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.TypeDescriptionProviderService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.TypeDescriptionProviderService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.TypeDescriptionProviderService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Object)">
      <topicdata group="api" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.TypeDescriptionProviderService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider(System.Type)">
      <topicdata group="api" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.TypeDescriptionProviderService.GetProvider" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeDescriptionProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.TypeDescriptionProviderService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.UndoEngine">
      <topicdata group="api" />
      <apidata name="UndoEngine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Design.UndoEngine.Undoing" />
        <element api="E:System.ComponentModel.Design.UndoEngine.Undone" />
        <element api="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
        <element api="Overload:System.ComponentModel.Design.UndoEngine.Dispose">
          <element api="M:System.ComponentModel.Design.UndoEngine.Dispose" />
          <element api="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.Design.UndoEngine.Enabled" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.UndoEngine">
      <topicdata name="UndoEngine" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.UndoEngine" />
      <apidata name="UndoEngine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)" />
        <element api="Overload:System.ComponentModel.Design.UndoEngine.Dispose">
          <element api="M:System.ComponentModel.Design.UndoEngine.Dispose" />
          <element api="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.UndoEngine">
      <topicdata name="UndoEngine" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.UndoEngine" />
      <apidata name="UndoEngine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.UndoEngine.Enabled" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoInProgress" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" />
      </containers>
    </api>
    <api id="Events.T:System.ComponentModel.Design.UndoEngine">
      <topicdata name="UndoEngine" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Design.UndoEngine" />
      <apidata name="UndoEngine" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Design.UndoEngine.Undoing" />
        <element api="E:System.ComponentModel.Design.UndoEngine.Undone" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Design.UndoEngine.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Design.UndoEngine.Dispose" />
        <element api="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <topicdata group="api" />
      <apidata name="AddUndoUnit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="unit">
          <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
            <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateUndoUnit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primary">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <topicdata group="api" />
      <apidata name="DiscardUndoUnit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="unit">
          <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
            <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Design.UndoEngine.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Design.UndoEngine.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetRequiredService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnUndoing" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnUndone" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <topicdata group="api" />
      <apidata name="Undoing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Undoing" />
      <remover name="remove_Undoing" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <topicdata group="api" />
      <apidata name="UndoInProgress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UndoInProgress" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="E:System.ComponentModel.Design.UndoEngine.Undone">
      <topicdata group="api" />
      <apidata name="Undone" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Undone" />
      <remover name="remove_Undone" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <topicdata group="api" />
      <apidata name="UndoUnit" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <topicdata name="UndoUnit" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      <apidata name="UndoUnit" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" />
        <element api="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </containers>
    </api>
    <api id="Properties.T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <topicdata name="UndoUnit" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      <apidata name="UndoUnit" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name" />
        <element api="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />
      </elements>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="engine">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentAdded" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentAdding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentChanging" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentRemoved" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentRemoving" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <topicdata group="api" />
      <apidata name="ComponentRename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Design.ComponentRenameEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <topicdata group="api" />
      <apidata name="Undo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <topicdata group="api" />
      <apidata name="UndoCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <topicdata group="api" />
      <apidata name="UndoEngine" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UndoEngine" />
      <returns>
        <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Design" module="System.Design" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.UndoEngine.UndoUnit" ref="true">
          <type api="T:System.ComponentModel.Design.UndoEngine" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.ComponentModel.Design.ViewTechnology">
      <topicdata group="api" />
      <apidata name="ViewTechnology" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Design.ViewTechnology.Passthrough" />
        <element api="F:System.ComponentModel.Design.ViewTechnology.WindowsForms" />
        <element api="F:System.ComponentModel.Design.ViewTechnology.Default" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.ViewTechnology.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </containers>
    </api>
    <api id="F:System.ComponentModel.Design.ViewTechnology.Passthrough">
      <topicdata group="api" notopic="" />
      <apidata name="Passthrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.ComponentModel.Design.ViewTechnology.WindowsForms">
      <topicdata group="api" notopic="" />
      <apidata name="WindowsForms" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Design" />
        <type api="T:System.ComponentModel.Design.ViewTechnology" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>