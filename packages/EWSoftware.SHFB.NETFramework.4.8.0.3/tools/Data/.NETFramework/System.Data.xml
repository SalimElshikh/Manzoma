<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Data.DataSetExtensions">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.DataSetExtensions.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data">
      <topicdata group="api" />
      <apidata name="System.Data" group="namespace" />
      <elements>
        <element api="T:System.Data.AcceptRejectRule" />
        <element api="T:System.Data.InternalDataCollectionBase" />
        <element api="T:System.Data.TypedDataSetGenerator" />
        <element api="T:System.Data.StrongTypingException" />
        <element api="T:System.Data.TypedDataSetGeneratorException" />
        <element api="T:System.Data.CommandBehavior" />
        <element api="T:System.Data.CommandType" />
        <element api="T:System.Data.KeyRestrictionBehavior" />
        <element api="T:System.Data.ConflictOption" />
        <element api="T:System.Data.ConnectionState" />
        <element api="T:System.Data.Constraint" />
        <element api="T:System.Data.ConstraintCollection" />
        <element api="T:System.Data.DataColumn" />
        <element api="T:System.Data.DataColumnChangeEventArgs" />
        <element api="T:System.Data.DataColumnChangeEventHandler" />
        <element api="T:System.Data.DataColumnCollection" />
        <element api="T:System.Data.DataException" />
        <element api="T:System.Data.ConstraintException" />
        <element api="T:System.Data.DeletedRowInaccessibleException" />
        <element api="T:System.Data.DuplicateNameException" />
        <element api="T:System.Data.InRowChangingEventException" />
        <element api="T:System.Data.InvalidConstraintException" />
        <element api="T:System.Data.MissingPrimaryKeyException" />
        <element api="T:System.Data.NoNullAllowedException" />
        <element api="T:System.Data.ReadOnlyException" />
        <element api="T:System.Data.RowNotInTableException" />
        <element api="T:System.Data.VersionNotFoundException" />
        <element api="T:System.Data.DataRelation" />
        <element api="T:System.Data.DataRelationCollection" />
        <element api="T:System.Data.DataRow" />
        <element api="T:System.Data.DataRowBuilder" />
        <element api="T:System.Data.DataRowAction" />
        <element api="T:System.Data.DataRowChangeEventArgs" />
        <element api="T:System.Data.DataRowChangeEventHandler" />
        <element api="T:System.Data.DataRowCollection" />
        <element api="T:System.Data.DataRowState" />
        <element api="T:System.Data.DataRowVersion" />
        <element api="T:System.Data.DataRowView" />
        <element api="T:System.Data.SerializationFormat" />
        <element api="T:System.Data.DataSet" />
        <element api="T:System.Data.DataSetSchemaImporterExtension" />
        <element api="T:System.Data.DataSetDateTime" />
        <element api="T:System.Data.DataSysDescriptionAttribute" />
        <element api="T:System.Data.DataTable" />
        <element api="T:System.Data.DataTableClearEventArgs" />
        <element api="T:System.Data.DataTableClearEventHandler" />
        <element api="T:System.Data.DataTableCollection" />
        <element api="T:System.Data.DataTableNewRowEventArgs" />
        <element api="T:System.Data.DataTableNewRowEventHandler" />
        <element api="T:System.Data.DataTableReader" />
        <element api="T:System.Data.DataView" />
        <element api="T:System.Data.DataViewManager" />
        <element api="T:System.Data.DataViewRowState" />
        <element api="T:System.Data.DataViewSetting" />
        <element api="T:System.Data.DataViewSettingCollection" />
        <element api="T:System.Data.DBConcurrencyException" />
        <element api="T:System.Data.DbType" />
        <element api="T:System.Data.FillErrorEventArgs" />
        <element api="T:System.Data.FillErrorEventHandler" />
        <element api="T:System.Data.InvalidExpressionException" />
        <element api="T:System.Data.EvaluateException" />
        <element api="T:System.Data.SyntaxErrorException" />
        <element api="T:System.Data.ForeignKeyConstraint" />
        <element api="T:System.Data.IColumnMapping" />
        <element api="T:System.Data.IColumnMappingCollection" />
        <element api="T:System.Data.IDataAdapter" />
        <element api="T:System.Data.IDataParameter" />
        <element api="T:System.Data.IDataParameterCollection" />
        <element api="T:System.Data.IDataReader" />
        <element api="T:System.Data.IDataRecord" />
        <element api="T:System.Data.IDbCommand" />
        <element api="T:System.Data.IDbConnection" />
        <element api="T:System.Data.IDbDataAdapter" />
        <element api="T:System.Data.IDbDataParameter" />
        <element api="T:System.Data.IDbTransaction" />
        <element api="T:System.Data.IsolationLevel" />
        <element api="T:System.Data.ITableMapping" />
        <element api="T:System.Data.ITableMappingCollection" />
        <element api="T:System.Data.LoadOption" />
        <element api="T:System.Data.MappingType" />
        <element api="T:System.Data.MergeFailedEventArgs" />
        <element api="T:System.Data.MergeFailedEventHandler" />
        <element api="T:System.Data.MissingMappingAction" />
        <element api="T:System.Data.MissingSchemaAction" />
        <element api="T:System.Data.OperationAbortedException" />
        <element api="T:System.Data.ParameterDirection" />
        <element api="T:System.Data.PropertyCollection" />
        <element api="T:System.Data.StatementCompletedEventArgs" />
        <element api="T:System.Data.StatementCompletedEventHandler" />
        <element api="T:System.Data.Rule" />
        <element api="T:System.Data.SchemaSerializationMode" />
        <element api="T:System.Data.SchemaType" />
        <element api="T:System.Data.SqlDbType" />
        <element api="T:System.Data.StateChangeEventArgs" />
        <element api="T:System.Data.StateChangeEventHandler" />
        <element api="T:System.Data.StatementType" />
        <element api="T:System.Data.UniqueConstraint" />
        <element api="T:System.Data.UpdateRowSource" />
        <element api="T:System.Data.UpdateStatus" />
        <element api="T:System.Data.XmlReadMode" />
        <element api="T:System.Data.XmlWriteMode" />
        <element api="T:System.Data.DataRowComparer" />
        <element api="T:System.Data.DataRowComparer`1" />
        <element api="T:System.Data.DataTableExtensions" />
        <element api="T:System.Data.EnumerableRowCollection" />
        <element api="T:System.Data.EnumerableRowCollection`1" />
        <element api="T:System.Data.OrderedEnumerableRowCollection`1" />
        <element api="T:System.Data.EnumerableRowCollectionExtensions" />
        <element api="T:System.Data.DataRowExtensions" />
        <element api="T:System.Data.TypedTableBase`1" />
        <element api="T:System.Data.TypedTableBaseExtensions" />
        <element api="T:System.Data.PropertyConstraintException" />
        <element api="T:System.Data.EntityCommandCompilationException" />
        <element api="T:System.Data.EntityCommandExecutionException" />
        <element api="T:System.Data.EntityException" />
        <element api="T:System.Data.EntitySqlException" />
        <element api="T:System.Data.OptimisticConcurrencyException" />
        <element api="T:System.Data.ProviderIncompatibleException" />
        <element api="T:System.Data.MappingException" />
        <element api="T:System.Data.MetadataException" />
        <element api="T:System.Data.UpdateException" />
        <element api="T:System.Data.ObjectNotFoundException" />
        <element api="T:System.Data.InvalidCommandTreeException" />
        <element api="T:System.Data.EntityKey" />
        <element api="T:System.Data.EntityKeyMember" />
        <element api="T:System.Data.EntityState" />
        <element api="T:System.Data.IExtendedDataRecord" />
      </elements>
    </api>
    <api id="T:System.Data.AcceptRejectRule">
      <topicdata group="api" />
      <apidata name="AcceptRejectRule" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.AcceptRejectRule.None" />
        <element api="F:System.Data.AcceptRejectRule.Cascade" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.AcceptRejectRule.Cascade">
      <topicdata group="api" notopic="" />
      <apidata name="Cascade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.AcceptRejectRule.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.CommandBehavior">
      <topicdata group="api" />
      <apidata name="CommandBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.CommandBehavior.Default" />
        <element api="F:System.Data.CommandBehavior.SingleResult" />
        <element api="F:System.Data.CommandBehavior.SchemaOnly" />
        <element api="F:System.Data.CommandBehavior.KeyInfo" />
        <element api="F:System.Data.CommandBehavior.SingleRow" />
        <element api="F:System.Data.CommandBehavior.SequentialAccess" />
        <element api="F:System.Data.CommandBehavior.CloseConnection" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.CommandBehavior.CloseConnection">
      <topicdata group="api" notopic="" />
      <apidata name="CloseConnection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.KeyInfo">
      <topicdata group="api" notopic="" />
      <apidata name="KeyInfo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.SchemaOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.SequentialAccess">
      <topicdata group="api" notopic="" />
      <apidata name="SequentialAccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.SingleResult">
      <topicdata group="api" notopic="" />
      <apidata name="SingleResult" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandBehavior.SingleRow">
      <topicdata group="api" notopic="" />
      <apidata name="SingleRow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandBehavior" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.CommandType">
      <topicdata group="api" />
      <apidata name="CommandType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.CommandType.Text" />
        <element api="F:System.Data.CommandType.StoredProcedure" />
        <element api="F:System.Data.CommandType.TableDirect" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.CommandType.StoredProcedure">
      <topicdata group="api" notopic="" />
      <apidata name="StoredProcedure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandType.TableDirect">
      <topicdata group="api" notopic="" />
      <apidata name="TableDirect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.CommandType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.CommandType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.ConflictOption">
      <topicdata group="api" />
      <apidata name="ConflictOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ConflictOption.CompareAllSearchableValues" />
        <element api="F:System.Data.ConflictOption.CompareRowVersion" />
        <element api="F:System.Data.ConflictOption.OverwriteChanges" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.ConflictOption.CompareAllSearchableValues">
      <topicdata group="api" notopic="" />
      <apidata name="CompareAllSearchableValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConflictOption.CompareRowVersion">
      <topicdata group="api" notopic="" />
      <apidata name="CompareRowVersion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConflictOption.OverwriteChanges">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConflictOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConflictOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.ConnectionState">
      <topicdata group="api" />
      <apidata name="ConnectionState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ConnectionState.Closed" />
        <element api="F:System.Data.ConnectionState.Open" />
        <element api="F:System.Data.ConnectionState.Connecting" />
        <element api="F:System.Data.ConnectionState.Executing" />
        <element api="F:System.Data.ConnectionState.Fetching" />
        <element api="F:System.Data.ConnectionState.Broken" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.ConnectionState.Broken">
      <topicdata group="api" notopic="" />
      <apidata name="Broken" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConnectionState.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConnectionState.Connecting">
      <topicdata group="api" notopic="" />
      <apidata name="Connecting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConnectionState.Executing">
      <topicdata group="api" notopic="" />
      <apidata name="Executing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConnectionState.Fetching">
      <topicdata group="api" notopic="" />
      <apidata name="Fetching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ConnectionState.Open">
      <topicdata group="api" notopic="" />
      <apidata name="Open" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConnectionState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Constraint">
      <topicdata group="api" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
          <type api="T:System.Data.UniqueConstraint" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Data.Constraint.#ctor" />
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.Constraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Constraint">
      <topicdata name="Constraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Constraint">
      <topicdata name="Constraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.Constraint" />
      <apidata name="Constraint" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.Constraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" />
      </containers>
    </api>
    <api id="M:System.Data.Constraint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Constraint._DataSet">
      <topicdata group="api" />
      <apidata name="_DataSet" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get__DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Constraint.CheckStateForProperty">
      <topicdata group="api" />
      <apidata name="CheckStateForProperty" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Constraint.ConstraintName">
      <topicdata group="api" />
      <apidata name="ConstraintName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConstraintName" />
      <setter name="set_ConstraintName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Constraint.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="SetDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Constraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Constraint.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Constraint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ConstraintCollection">
      <topicdata group="api" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.ConstraintCollection.CollectionChanged" />
        <element api="Overload:System.Data.ConstraintCollection.Add">
          <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        </element>
        <element api="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
        <element api="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Clear" />
        <element api="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <element api="Overload:System.Data.ConstraintCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.IndexOf">
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.Remove">
          <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.ConstraintCollection.Item">
          <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
          <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.ConstraintCollection.Add">
          <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        </element>
        <element api="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />
        <element api="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Clear" />
        <element api="M:System.Data.ConstraintCollection.Contains(System.String)" />
        <element api="Overload:System.Data.ConstraintCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.IndexOf">
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ConstraintCollection.Remove">
          <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
          <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.ConstraintCollection.Item">
          <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
          <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Data.ConstraintCollection">
      <topicdata name="ConstraintCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.ConstraintCollection" />
      <apidata name="ConstraintCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.ConstraintCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.ConstraintCollection.Item(System.Int32)" />
        <element api="P:System.Data.ConstraintCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)" />
        <element api="M:System.Data.ConstraintCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primaryKeyColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="foreignKeyColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="primaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="primaryKeyColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="foreignKeyColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraints">
          <arrayOf rank="1">
            <type api="T:System.Data.Constraint" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.ConstraintCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.Constraint" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ConstraintCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Constraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constraint">
          <type api="T:System.Data.Constraint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ConstraintCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ConstraintException">
      <topicdata group="api" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.PropertyConstraintException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.ConstraintException.#ctor">
          <element api="M:System.Data.ConstraintException.#ctor" />
          <element api="M:System.Data.ConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.ConstraintException">
      <topicdata name="ConstraintException" group="list" subgroup="Events" typeTopicId="T:System.Data.ConstraintException" />
      <apidata name="ConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ConstraintException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" />
      </containers>
    </api>
    <api id="Overload:System.Data.ConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ConstraintException.#ctor" />
        <element api="M:System.Data.ConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ConstraintException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataColumn">
      <topicdata group="api" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="Overload:System.Data.DataColumn.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="Overload:System.Data.DataColumn.#ctor">
          <element api="M:System.Data.DataColumn.#ctor" />
          <element api="M:System.Data.DataColumn.#ctor(System.String)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
          <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
        </element>
        <element api="M:System.Data.DataColumn.CheckNotAllowNull" />
        <element api="M:System.Data.DataColumn.CheckUnique" />
        <element api="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
        <element api="M:System.Data.DataColumn.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataColumn.AllowDBNull" />
        <element api="P:System.Data.DataColumn.AutoIncrement" />
        <element api="P:System.Data.DataColumn.AutoIncrementSeed" />
        <element api="P:System.Data.DataColumn.AutoIncrementStep" />
        <element api="P:System.Data.DataColumn.Caption" />
        <element api="P:System.Data.DataColumn.ColumnMapping" />
        <element api="P:System.Data.DataColumn.ColumnName" />
        <element api="P:System.Data.DataColumn.DataType" />
        <element api="P:System.Data.DataColumn.DateTimeMode" />
        <element api="P:System.Data.DataColumn.DefaultValue" />
        <element api="P:System.Data.DataColumn.Expression" />
        <element api="P:System.Data.DataColumn.ExtendedProperties" />
        <element api="P:System.Data.DataColumn.MaxLength" />
        <element api="P:System.Data.DataColumn.Namespace" />
        <element api="P:System.Data.DataColumn.Ordinal" />
        <element api="P:System.Data.DataColumn.Prefix" />
        <element api="P:System.Data.DataColumn.ReadOnly" />
        <element api="P:System.Data.DataColumn.Table" />
        <element api="P:System.Data.DataColumn.Unique" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ColumnName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="Overload:System.Data.DataColumn.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataColumn.CheckNotAllowNull" />
        <element api="M:System.Data.DataColumn.CheckUnique" />
        <element api="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
        <element api="M:System.Data.DataColumn.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataColumn.AllowDBNull" />
        <element api="P:System.Data.DataColumn.AutoIncrement" />
        <element api="P:System.Data.DataColumn.AutoIncrementSeed" />
        <element api="P:System.Data.DataColumn.AutoIncrementStep" />
        <element api="P:System.Data.DataColumn.Caption" />
        <element api="P:System.Data.DataColumn.ColumnMapping" />
        <element api="P:System.Data.DataColumn.ColumnName" />
        <element api="P:System.Data.DataColumn.DataType" />
        <element api="P:System.Data.DataColumn.DateTimeMode" />
        <element api="P:System.Data.DataColumn.DefaultValue" />
        <element api="P:System.Data.DataColumn.Expression" />
        <element api="P:System.Data.DataColumn.ExtendedProperties" />
        <element api="P:System.Data.DataColumn.MaxLength" />
        <element api="P:System.Data.DataColumn.Namespace" />
        <element api="P:System.Data.DataColumn.Ordinal" />
        <element api="P:System.Data.DataColumn.Prefix" />
        <element api="P:System.Data.DataColumn.ReadOnly" />
        <element api="P:System.Data.DataColumn.Table" />
        <element api="P:System.Data.DataColumn.Unique" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataColumn">
      <topicdata name="DataColumn" group="list" subgroup="Events" typeTopicId="T:System.Data.DataColumn" />
      <apidata name="DataColumn" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataColumn.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumn.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataColumn.#ctor" />
        <element api="M:System.Data.DataColumn.#ctor(System.String)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
        <element api="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expr">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataColumn.#ctor" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expr">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Data.MappingType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.AllowDBNull">
      <topicdata group="api" />
      <apidata name="AllowDBNull" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDBNull" />
      <setter name="set_AllowDBNull" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrement">
      <topicdata group="api" />
      <apidata name="AutoIncrement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrement" />
      <setter name="set_AutoIncrement" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrementSeed">
      <topicdata group="api" />
      <apidata name="AutoIncrementSeed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrementSeed" />
      <setter name="set_AutoIncrementSeed" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.AutoIncrementStep">
      <topicdata group="api" />
      <apidata name="AutoIncrementStep" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoIncrementStep" />
      <setter name="set_AutoIncrementStep" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int64" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.Caption">
      <topicdata group="api" />
      <apidata name="Caption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Caption" />
      <setter name="set_Caption" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.CheckNotAllowNull">
      <topicdata group="api" />
      <apidata name="CheckNotAllowNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.CheckUnique">
      <topicdata group="api" />
      <apidata name="CheckUnique" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.ColumnMapping">
      <topicdata group="api" />
      <apidata name="ColumnMapping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ColumnMapping" />
      <setter name="set_ColumnMapping" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.MappingType" ref="false" />
            <enumValue>
              <field name="Element" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.ColumnName">
      <topicdata group="api" />
      <apidata name="ColumnName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ColumnName" />
      <setter name="set_ColumnName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.String" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.DateTimeMode">
      <topicdata group="api" />
      <apidata name="DateTimeMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DateTimeMode" />
      <setter name="set_DateTimeMode" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.DataSetDateTime" ref="false" />
            <enumValue>
              <field name="UnspecifiedLocal" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.MaxLength">
      <topicdata group="api" />
      <apidata name="MaxLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxLength" />
      <setter name="set_MaxLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.Ordinal">
      <topicdata group="api" />
      <apidata name="Ordinal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Ordinal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataColumn.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.ReadOnly">
      <topicdata group="api" />
      <apidata name="ReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadOnly" />
      <setter name="set_ReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataColumn.SetOrdinal(System.Int32)">
      <topicdata group="api" />
      <apidata name="SetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataColumn.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumn.Unique">
      <topicdata group="api" />
      <apidata name="Unique" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Unique" />
      <setter name="set_Unique" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumn" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.DataColumnChangeEventArgs">
      <topicdata group="api" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Column" />
        <element api="P:System.Data.DataColumnChangeEventArgs.ProposedValue" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataColumnChangeEventArgs">
      <topicdata name="DataColumnChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataColumnChangeEventArgs">
      <topicdata name="DataColumnChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumnChangeEventArgs" />
      <apidata name="DataColumnChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataColumnChangeEventArgs.Column" />
        <element api="P:System.Data.DataColumnChangeEventArgs.ProposedValue" />
        <element api="P:System.Data.DataColumnChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.Column">
      <topicdata group="api" />
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <topicdata group="api" />
      <apidata name="ProposedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProposedValue" />
      <setter name="set_ProposedValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumnChangeEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataColumnChangeEventHandler">
      <topicdata group="api" />
      <apidata name="DataColumnChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.DataColumnCollection">
      <topicdata group="api" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.DataColumnCollection.CollectionChanged" />
        <element api="Overload:System.Data.DataColumnCollection.Add">
          <element api="M:System.Data.DataColumnCollection.Add" />
          <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
        <element api="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Clear" />
        <element api="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataColumnCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.IndexOf">
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.Remove">
          <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataColumnCollection.Item">
          <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataColumnCollection.Add">
          <element api="M:System.Data.DataColumnCollection.Add" />
          <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
          <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])" />
        <element api="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Clear" />
        <element api="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataColumnCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.IndexOf">
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.DataColumnCollection.Remove">
          <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
          <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataColumnCollection.Item">
          <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataColumnCollection">
      <topicdata name="DataColumnCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataColumnCollection" />
      <apidata name="DataColumnCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataColumnCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.Add" />
        <element api="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type)" />
        <element api="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumnCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumnCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataColumnCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataColumnCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataColumnCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)" />
        <element api="M:System.Data.DataColumnCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataColumnCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataColumnCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataColumn" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataColumnCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataException">
      <topicdata group="api" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.StrongTypingException" ref="true" />
          <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
          <type api="T:System.Data.ConstraintException" ref="true" />
          <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
          <type api="T:System.Data.DuplicateNameException" ref="true" />
          <type api="T:System.Data.InRowChangingEventException" ref="true" />
          <type api="T:System.Data.InvalidConstraintException" ref="true" />
          <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
          <type api="T:System.Data.NoNullAllowedException" ref="true" />
          <type api="T:System.Data.ReadOnlyException" ref="true" />
          <type api="T:System.Data.RowNotInTableException" ref="true" />
          <type api="T:System.Data.VersionNotFoundException" ref="true" />
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.UpdateException" ref="true" />
          <type api="T:System.Data.ObjectNotFoundException" ref="true" />
          <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
          <type api="T:System.Data.Design.TypedDataSetGeneratorException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.DataException.#ctor">
          <element api="M:System.Data.DataException.#ctor" />
          <element api="M:System.Data.DataException.#ctor(System.String)" />
          <element api="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataException">
      <topicdata name="DataException" group="list" subgroup="Events" typeTopicId="T:System.Data.DataException" />
      <apidata name="DataException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataException.#ctor" />
        <element api="M:System.Data.DataException.#ctor(System.String)" />
        <element api="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRelation">
      <topicdata group="api" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.DataRelation.#ctor">
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
          <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelation.CheckStateForProperty" />
        <element api="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataRelation.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.DataRelation.ChildColumns" />
        <element api="P:System.Data.DataRelation.ChildKeyConstraint" />
        <element api="P:System.Data.DataRelation.ChildTable" />
        <element api="P:System.Data.DataRelation.DataSet" />
        <element api="P:System.Data.DataRelation.ExtendedProperties" />
        <element api="P:System.Data.DataRelation.Nested" />
        <element api="P:System.Data.DataRelation.ParentColumns" />
        <element api="P:System.Data.DataRelation.ParentKeyConstraint" />
        <element api="P:System.Data.DataRelation.ParentTable" />
        <element api="P:System.Data.DataRelation.RelationName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RelationName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataRelation">
      <topicdata name="DataRelation" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.DataRelation.CheckStateForProperty" />
        <element api="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataRelation.RaisePropertyChanging(System.String)" />
        <element api="M:System.Data.DataRelation.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRelation">
      <topicdata name="DataRelation" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRelation" />
      <apidata name="DataRelation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRelation.ChildColumns" />
        <element api="P:System.Data.DataRelation.ChildKeyConstraint" />
        <element api="P:System.Data.DataRelation.ChildTable" />
        <element api="P:System.Data.DataRelation.DataSet" />
        <element api="P:System.Data.DataRelation.ExtendedProperties" />
        <element api="P:System.Data.DataRelation.Nested" />
        <element api="P:System.Data.DataRelation.ParentColumns" />
        <element api="P:System.Data.DataRelation.ParentKeyConstraint" />
        <element api="P:System.Data.DataRelation.ParentTable" />
        <element api="P:System.Data.DataRelation.RelationName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
        <element api="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="nested">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataRelation.#ctor" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="childTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="nested">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRelation.CheckStateForProperty">
      <topicdata group="api" />
      <apidata name="CheckStateForProperty" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ChildColumns">
      <topicdata group="api" />
      <apidata name="ChildColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ChildKeyConstraint">
      <topicdata group="api" />
      <apidata name="ChildKeyConstraint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildKeyConstraint" />
      <returns>
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ChildTable">
      <topicdata group="api" />
      <apidata name="ChildTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChildTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataRelation.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataRelation.Nested">
      <topicdata group="api" />
      <apidata name="Nested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Nested" />
      <setter name="set_Nested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ParentColumns">
      <topicdata group="api" />
      <apidata name="ParentColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ParentKeyConstraint">
      <topicdata group="api" />
      <apidata name="ParentKeyConstraint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentKeyConstraint" />
      <returns>
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.ParentTable">
      <topicdata group="api" />
      <apidata name="ParentTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ParentTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelation.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelation.RelationName">
      <topicdata group="api" />
      <apidata name="RelationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RelationName" />
      <setter name="set_RelationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRelation.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRelationCollection">
      <topicdata group="api" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.DataRelationCollection.CollectionChanged" />
        <element api="M:System.Data.DataRelationCollection.#ctor" />
        <element api="Overload:System.Data.DataRelationCollection.Add">
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />
        <element api="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Clear" />
        <element api="M:System.Data.DataRelationCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataRelationCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.GetDataSet" />
        <element api="Overload:System.Data.DataRelationCollection.IndexOf">
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="Overload:System.Data.DataRelationCollection.Remove">
          <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataRelationCollection.Item">
          <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Table</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRelationCollection.Add">
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />
        <element api="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Clear" />
        <element api="M:System.Data.DataRelationCollection.Contains(System.String)" />
        <element api="Overload:System.Data.DataRelationCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.GetDataSet" />
        <element api="Overload:System.Data.DataRelationCollection.IndexOf">
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="Overload:System.Data.DataRelationCollection.Remove">
          <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRelationCollection.Item">
          <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataRelationCollection">
      <topicdata name="DataRelationCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataRelationCollection" />
      <apidata name="DataRelationCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataRelationCollection.CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelationCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelationCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRelationCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataRelationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRelationCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRelationCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Add" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="createConstraints">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="AddCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relations">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRelation" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataRelationCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRelation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.GetDataSet">
      <topicdata group="api" />
      <apidata name="GetDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.IndexOf" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.IndexOf" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRelationCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRelation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ccevent">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ccevent">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRelationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="RemoveCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRow">
      <topicdata group="api" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataRow.AcceptChanges" />
        <element api="M:System.Data.DataRow.BeginEdit" />
        <element api="M:System.Data.DataRow.CancelEdit" />
        <element api="M:System.Data.DataRow.ClearErrors" />
        <element api="M:System.Data.DataRow.Delete" />
        <element api="M:System.Data.DataRow.EndEdit" />
        <element api="Overload:System.Data.DataRow.GetChildRows">
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetColumnError">
          <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
        </element>
        <element api="M:System.Data.DataRow.GetColumnsInError" />
        <element api="Overload:System.Data.DataRow.GetParentRow">
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetParentRows">
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <element api="Overload:System.Data.DataRow.IsNull">
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
          <element api="M:System.Data.DataRow.IsNull(System.String)" />
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.RejectChanges" />
        <element api="M:System.Data.DataRow.SetAdded" />
        <element api="Overload:System.Data.DataRow.SetColumnError">
          <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataRow.SetModified" />
        <element api="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
        <element api="Overload:System.Data.DataRow.SetParentRow">
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRow.HasErrors" />
        <element api="Overload:System.Data.DataRow.Item">
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
          <element api="P:System.Data.DataRow.Item(System.Int32)" />
          <element api="P:System.Data.DataRow.Item(System.String)" />
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="P:System.Data.DataRow.ItemArray" />
        <element api="P:System.Data.DataRow.RowError" />
        <element api="P:System.Data.DataRow.RowState" />
        <element api="P:System.Data.DataRow.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRow">
      <topicdata name="DataRow" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" source="extension" overload="true">
          <apidata name="Field" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="version">
              <type api="T:System.Data.DataRowVersion" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="column">
              <type api="T:System.Data.DataColumn" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" source="extension" overload="true">
          <apidata name="SetField" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="columnName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataRowExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataRow.AcceptChanges" />
        <element api="M:System.Data.DataRow.BeginEdit" />
        <element api="M:System.Data.DataRow.CancelEdit" />
        <element api="M:System.Data.DataRow.ClearErrors" />
        <element api="M:System.Data.DataRow.Delete" />
        <element api="M:System.Data.DataRow.EndEdit" />
        <element api="Overload:System.Data.DataRow.GetChildRows">
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetColumnError">
          <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
          <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
        </element>
        <element api="M:System.Data.DataRow.GetColumnsInError" />
        <element api="Overload:System.Data.DataRow.GetParentRow">
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRow.GetParentRows">
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <element api="Overload:System.Data.DataRow.IsNull">
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
          <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
          <element api="M:System.Data.DataRow.IsNull(System.String)" />
          <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
        </element>
        <element api="M:System.Data.DataRow.RejectChanges" />
        <element api="M:System.Data.DataRow.SetAdded" />
        <element api="Overload:System.Data.DataRow.SetColumnError">
          <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
          <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataRow.SetModified" />
        <element api="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
        <element api="Overload:System.Data.DataRow.SetParentRow">
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
          <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRow">
      <topicdata name="DataRow" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRow" />
      <apidata name="DataRow" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRow.HasErrors" />
        <element api="Overload:System.Data.DataRow.Item">
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
          <element api="P:System.Data.DataRow.Item(System.Int32)" />
          <element api="P:System.Data.DataRow.Item(System.String)" />
          <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
          <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="P:System.Data.DataRow.ItemArray" />
        <element api="P:System.Data.DataRow.RowError" />
        <element api="P:System.Data.DataRow.RowState" />
        <element api="P:System.Data.DataRow.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.GetChildRows">
      <topicdata name="GetChildRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.String)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.GetColumnError">
      <topicdata name="GetColumnError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
        <element api="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <element api="M:System.Data.DataRow.GetColumnError(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.GetParentRow">
      <topicdata name="GetParentRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.String)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.GetParentRows">
      <topicdata name="GetParentRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.String)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.IsNull">
      <topicdata name="IsNull" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
        <element api="M:System.Data.DataRow.IsNull(System.Int32)" />
        <element api="M:System.Data.DataRow.IsNull(System.String)" />
        <element api="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
        <element api="P:System.Data.DataRow.Item(System.Int32)" />
        <element api="P:System.Data.DataRow.Item(System.String)" />
        <element api="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
        <element api="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
        <element api="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.SetColumnError">
      <topicdata name="SetColumnError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
        <element api="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <element api="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRow.SetParentRow">
      <topicdata name="SetParentRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
        <element api="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Data.DataRowBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRow.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRow.ClearErrors">
      <topicdata group="api" />
      <apidata name="ClearErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.String)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetChildRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetChildRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetColumnError(System.String)">
      <topicdata group="api" />
      <apidata name="GetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetColumnsInError">
      <topicdata group="api" />
      <apidata name="GetColumnsInError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="GetParentRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.GetParentRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="HasVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.IsNull(System.String)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.IsNull" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.ItemArray">
      <topicdata group="api" />
      <apidata name="ItemArray" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ItemArray" />
      <setter name="set_ItemArray" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.RowError">
      <topicdata group="api" />
      <apidata name="RowError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowError" />
      <setter name="set_RowError" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.RowState">
      <topicdata group="api" />
      <apidata name="RowState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowState" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetAdded">
      <topicdata group="api" />
      <apidata name="SetAdded" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetColumnError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetColumnError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetModified">
      <topicdata group="api" />
      <apidata name="SetModified" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="SetNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="SetParentRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRow.SetParentRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parentRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRow.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRow" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowAction">
      <topicdata group="api" />
      <apidata name="DataRowAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowAction.Nothing" />
        <element api="F:System.Data.DataRowAction.Delete" />
        <element api="F:System.Data.DataRowAction.Change" />
        <element api="F:System.Data.DataRowAction.Rollback" />
        <element api="F:System.Data.DataRowAction.Commit" />
        <element api="F:System.Data.DataRowAction.Add" />
        <element api="F:System.Data.DataRowAction.ChangeOriginal" />
        <element api="F:System.Data.DataRowAction.ChangeCurrentAndOriginal" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.DataRowAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.Change">
      <topicdata group="api" notopic="" />
      <apidata name="Change" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.ChangeCurrentAndOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ChangeCurrentAndOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.ChangeOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ChangeOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.Commit">
      <topicdata group="api" notopic="" />
      <apidata name="Commit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.Nothing">
      <topicdata group="api" notopic="" />
      <apidata name="Nothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowAction.Rollback">
      <topicdata group="api" notopic="" />
      <apidata name="Rollback" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowBuilder">
      <topicdata group="api" />
      <apidata name="DataRowBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRowBuilder">
      <topicdata name="DataRowBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowBuilder" />
      <apidata name="DataRowBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowBuilder" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowChangeEventArgs">
      <topicdata group="api" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRowChangeEventArgs.Action" />
        <element api="P:System.Data.DataRowChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRowChangeEventArgs">
      <topicdata name="DataRowChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRowChangeEventArgs">
      <topicdata name="DataRowChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowChangeEventArgs" />
      <apidata name="DataRowChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowChangeEventArgs.Action" />
        <element api="P:System.Data.DataRowChangeEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Data.DataRowAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowChangeEventArgs.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.Data.DataRowAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowChangeEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowChangeEventHandler">
      <topicdata group="api" />
      <apidata name="DataRowChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowCollection">
      <topicdata group="api" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.DataRowCollection.Add">
          <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
          <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.Clear" />
        <element api="Overload:System.Data.DataRowCollection.Contains">
          <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.CopyTo">
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.Find">
          <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.GetEnumerator" />
        <element api="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
        <element api="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRowCollection.Count" />
        <element api="P:System.Data.DataRowCollection.Item(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRowCollection">
      <topicdata name="DataRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRowCollection.Add">
          <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
          <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.Clear" />
        <element api="Overload:System.Data.DataRowCollection.Contains">
          <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.CopyTo">
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataRowCollection.Find">
          <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
          <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
        </element>
        <element api="M:System.Data.DataRowCollection.GetEnumerator" />
        <element api="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)" />
        <element api="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRowCollection">
      <topicdata name="DataRowCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowCollection" />
      <apidata name="DataRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowCollection.Count" />
        <element api="P:System.Data.DataRowCollection.Item(System.Int32)" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <element api="M:System.Data.DataRowCollection.Add(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Contains(System.Object)" />
        <element api="M:System.Data.DataRowCollection.Contains(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowCollection.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowCollection.Find(System.Object)" />
        <element api="M:System.Data.DataRowCollection.Find(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Add(System.Object[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keys">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.CopyTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.CopyTo(System.Data.DataRow[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.InternalDataCollectionBase.Count">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Find(System.Object)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Find(System.Object[])">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowCollection.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keys">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.InternalDataCollectionBase.GetEnumerator">
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <topicdata group="api" />
      <apidata name="InsertAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowComparer">
      <topicdata group="api" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.Data.DataRowComparer.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRowComparer">
      <topicdata name="DataRowComparer" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowComparer" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowComparer.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowComparer.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Data.DataRowComparer`1" ref="true">
          <specialization>
            <type api="T:System.Data.DataRow" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowComparer`1">
      <topicdata group="api" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:System.Data.DataRowComparer`1.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
        </element>
        <element api="Overload:System.Data.DataRowComparer`1.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRowComparer`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRowComparer`1">
      <topicdata name="DataRowComparer" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:System.Data.DataRowComparer`1.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
        </element>
        <element api="Overload:System.Data.DataRowComparer`1.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRowComparer`1">
      <topicdata name="DataRowComparer" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowComparer`1" />
      <apidata name="DataRowComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Data.DataRowComparer`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowComparer`1.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Data.DataRowComparer`1.Equals(`0,`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowComparer`1.GetHashCode">
      <topicdata name="GetHashCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Data.DataRowComparer`1.GetHashCode(`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowComparer`1.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Data.DataRowComparer`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowComparer`1.Equals(`0,`0)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowComparer`1.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="leftRow">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
        <parameter name="rightRow">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowComparer`1.GetHashCode(`0)">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowComparer`1.GetHashCode" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="row">
          <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.DataRowComparer`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowComparer`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowExtensions">
      <topicdata group="api" />
      <apidata name="DataRowExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.DataRowExtensions.Field">
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRowExtensions.SetField">
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataRowExtensions">
      <topicdata name="DataRowExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowExtensions" />
      <apidata name="DataRowExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataRowExtensions.Field">
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
          <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
        </element>
        <element api="Overload:System.Data.DataRowExtensions.SetField">
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
          <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowExtensions.Field">
      <topicdata name="Field" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Field" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
        <element api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowExtensions.SetField">
      <topicdata name="SetField" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetField" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
        <element api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)">
      <topicdata group="api" />
      <apidata name="Field" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.Field" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Data.DataRowVersion" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)">
      <topicdata group="api" />
      <apidata name="SetField" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataRowExtensions.SetField" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
        <parameter name="columnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.DataRowState">
      <topicdata group="api" />
      <apidata name="DataRowState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowState.Detached" />
        <element api="F:System.Data.DataRowState.Unchanged" />
        <element api="F:System.Data.DataRowState.Added" />
        <element api="F:System.Data.DataRowState.Deleted" />
        <element api="F:System.Data.DataRowState.Modified" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.DataRowState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowState.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowState.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowVersion">
      <topicdata group="api" />
      <apidata name="DataRowVersion" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataRowVersion.Original" />
        <element api="F:System.Data.DataRowVersion.Current" />
        <element api="F:System.Data.DataRowVersion.Proposed" />
        <element api="F:System.Data.DataRowVersion.Default" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowVersion.Current">
      <topicdata group="api" notopic="" />
      <apidata name="Current" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowVersion.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>1536</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowVersion.Original">
      <topicdata group="api" notopic="" />
      <apidata name="Original" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataRowVersion.Proposed">
      <topicdata group="api" notopic="" />
      <apidata name="Proposed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DataRowView">
      <topicdata group="api" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Data.DataRowView.PropertyChanged" />
        <element api="M:System.Data.DataRowView.BeginEdit" />
        <element api="M:System.Data.DataRowView.CancelEdit" />
        <element api="Overload:System.Data.DataRowView.CreateChildView">
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRowView.Delete" />
        <element api="M:System.Data.DataRowView.EndEdit" />
        <element api="M:System.Data.DataRowView.Equals(System.Object)" />
        <element api="M:System.Data.DataRowView.GetHashCode" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataRowView.DataView" />
        <element api="P:System.Data.DataRowView.IsEdit" />
        <element api="P:System.Data.DataRowView.IsNew" />
        <element api="Overload:System.Data.DataRowView.Item">
          <element api="P:System.Data.DataRowView.Item(System.Int32)" />
          <element api="P:System.Data.DataRowView.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataRowView.Row" />
        <element api="P:System.Data.DataRowView.RowVersion" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.DataRowView.BeginEdit" />
        <element api="M:System.Data.DataRowView.CancelEdit" />
        <element api="Overload:System.Data.DataRowView.CreateChildView">
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
          <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Data.DataRowView.Delete" />
        <element api="M:System.Data.DataRowView.EndEdit" />
        <element api="M:System.Data.DataRowView.Equals(System.Object)" />
        <element api="M:System.Data.DataRowView.GetHashCode" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataRowView.DataView" />
        <element api="P:System.Data.DataRowView.IsEdit" />
        <element api="P:System.Data.DataRowView.IsNew" />
        <element api="Overload:System.Data.DataRowView.Item">
          <element api="P:System.Data.DataRowView.Item(System.Int32)" />
          <element api="P:System.Data.DataRowView.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataRowView.Row" />
        <element api="P:System.Data.DataRowView.RowVersion" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error" />
        <element api="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataRowView">
      <topicdata name="DataRowView" group="list" subgroup="Events" typeTopicId="T:System.Data.DataRowView" />
      <apidata name="DataRowView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Data.DataRowView.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowView.CreateChildView">
      <topicdata name="CreateChildView" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.String)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)" />
        <element api="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowView.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataRowView.Item(System.Int32)" />
        <element api="P:System.Data.DataRowView.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
        <element api="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.BeginEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.CancelEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
        <parameter name="followParent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.String)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.CreateChildView(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateChildView" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.CreateChildView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="followParent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.DataView">
      <topicdata group="api" />
      <apidata name="DataView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataView" />
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.EndEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="other">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.IsEdit">
      <topicdata group="api" />
      <apidata name="IsEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.IsNew">
      <topicdata group="api" />
      <apidata name="IsNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="ndx">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataRowView.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataRowView.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.RowVersion">
      <topicdata group="api" />
      <apidata name="RowVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowVersion" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetAttributes" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetClassName" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetComponentName" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetConverter" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultEvent" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultProperty" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEditor" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataRowView.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetPropertyOwner" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Error">
      <topicdata group="api" eiiName="IDataErrorInfo.Error" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IDataErrorInfo.Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IDataErrorInfo.Error">
          <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataRowView.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <topicdata group="api" eiiName="IDataErrorInfo.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IDataErrorInfo.Item" />
      <parameters>
        <parameter name="colName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IDataErrorInfo.Item(System.String)">
          <type api="T:System.ComponentModel.IDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataRowView" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IListSource" ref="true" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataSet.Initialized" />
        <element api="E:System.Data.DataSet.MergeFailed" />
        <element api="Overload:System.Data.DataSet.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="Overload:System.Data.DataSet.#ctor">
          <element api="M:System.Data.DataSet.#ctor" />
          <element api="M:System.Data.DataSet.#ctor(System.String)" />
          <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)" />
        </element>
        <element api="M:System.Data.DataSet.AcceptChanges" />
        <element api="M:System.Data.DataSet.BeginInit" />
        <element api="M:System.Data.DataSet.Clear" />
        <element api="M:System.Data.DataSet.Clone" />
        <element api="M:System.Data.DataSet.Copy" />
        <element api="Overload:System.Data.DataSet.CreateDataReader">
          <element api="M:System.Data.DataSet.CreateDataReader" />
          <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.DataSet.EndInit" />
        <element api="Overload:System.Data.DataSet.GetChanges">
          <element api="M:System.Data.DataSet.GetChanges" />
          <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetSchemaSerializable" />
        <element api="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetXml" />
        <element api="M:System.Data.DataSet.GetXmlSchema" />
        <element api="Overload:System.Data.DataSet.HasChanges">
          <element api="M:System.Data.DataSet.HasChanges" />
          <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
        </element>
        <element api="Overload:System.Data.DataSet.InferXmlSchema">
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
        </element>
        <element api="M:System.Data.DataSet.InitializeDerivedDataSet" />
        <element api="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Data.DataSet.Load">
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.Merge">
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)" />
        <element api="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)" />
        <element api="M:System.Data.DataSet.RaisePropertyChanging(System.String)" />
        <element api="Overload:System.Data.DataSet.ReadXml">
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.ReadXmlSchema">
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.RejectChanges" />
        <element api="M:System.Data.DataSet.Reset" />
        <element api="M:System.Data.DataSet.ShouldSerializeRelations" />
        <element api="M:System.Data.DataSet.ShouldSerializeTables" />
        <element api="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="Overload:System.Data.DataSet.WriteXml">
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.WriteXmlSchema">
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataSet.CaseSensitive" />
        <element api="P:System.Data.DataSet.DataSetName" />
        <element api="P:System.Data.DataSet.DefaultViewManager" />
        <element api="P:System.Data.DataSet.EnforceConstraints" />
        <element api="P:System.Data.DataSet.ExtendedProperties" />
        <element api="P:System.Data.DataSet.HasErrors" />
        <element api="P:System.Data.DataSet.IsInitialized" />
        <element api="P:System.Data.DataSet.Locale" />
        <element api="P:System.Data.DataSet.Namespace" />
        <element api="P:System.Data.DataSet.Prefix" />
        <element api="P:System.Data.DataSet.Relations" />
        <element api="P:System.Data.DataSet.RemotingFormat" />
        <element api="P:System.Data.DataSet.SchemaSerializationMode" />
        <element api="P:System.Data.DataSet.Site" />
        <element api="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataSet.Tables" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetDataSetSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSet</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSetName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="Overload:System.Data.DataSet.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Data.DataSet.AcceptChanges" />
        <element api="M:System.Data.DataSet.BeginInit" />
        <element api="M:System.Data.DataSet.Clear" />
        <element api="M:System.Data.DataSet.Clone" />
        <element api="M:System.Data.DataSet.Copy" />
        <element api="Overload:System.Data.DataSet.CreateDataReader">
          <element api="M:System.Data.DataSet.CreateDataReader" />
          <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.DataSet.EndInit" />
        <element api="Overload:System.Data.DataSet.GetChanges">
          <element api="M:System.Data.DataSet.GetChanges" />
          <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetSchemaSerializable" />
        <element api="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.GetXml" />
        <element api="M:System.Data.DataSet.GetXmlSchema" />
        <element api="Overload:System.Data.DataSet.HasChanges">
          <element api="M:System.Data.DataSet.HasChanges" />
          <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
        </element>
        <element api="Overload:System.Data.DataSet.InferXmlSchema">
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
          <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
        </element>
        <element api="M:System.Data.DataSet.InitializeDerivedDataSet" />
        <element api="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Data.DataSet.Load">
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
          <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
        </element>
        <element api="Overload:System.Data.DataSet.Merge">
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
          <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)" />
        <element api="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)" />
        <element api="M:System.Data.DataSet.RaisePropertyChanging(System.String)" />
        <element api="Overload:System.Data.DataSet.ReadXml">
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
          <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.ReadXmlSchema">
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.RejectChanges" />
        <element api="M:System.Data.DataSet.Reset" />
        <element api="M:System.Data.DataSet.ShouldSerializeRelations" />
        <element api="M:System.Data.DataSet.ShouldSerializeTables" />
        <element api="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="Overload:System.Data.DataSet.WriteXml">
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        </element>
        <element api="Overload:System.Data.DataSet.WriteXmlSchema">
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
          <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataSet.CaseSensitive" />
        <element api="P:System.Data.DataSet.DataSetName" />
        <element api="P:System.Data.DataSet.DefaultViewManager" />
        <element api="P:System.Data.DataSet.EnforceConstraints" />
        <element api="P:System.Data.DataSet.ExtendedProperties" />
        <element api="P:System.Data.DataSet.HasErrors" />
        <element api="P:System.Data.DataSet.IsInitialized" />
        <element api="P:System.Data.DataSet.Locale" />
        <element api="P:System.Data.DataSet.Namespace" />
        <element api="P:System.Data.DataSet.Prefix" />
        <element api="P:System.Data.DataSet.Relations" />
        <element api="P:System.Data.DataSet.RemotingFormat" />
        <element api="P:System.Data.DataSet.SchemaSerializationMode" />
        <element api="P:System.Data.DataSet.Site" />
        <element api="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataSet.Tables" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataSet">
      <topicdata name="DataSet" group="list" subgroup="Events" typeTopicId="T:System.Data.DataSet" />
      <apidata name="DataSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataSet.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataSet.Initialized" />
        <element api="E:System.Data.DataSet.MergeFailed" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataSet.#ctor" />
        <element api="M:System.Data.DataSet.#ctor(System.String)" />
        <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.CreateDataReader">
      <topicdata name="CreateDataReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.CreateDataReader" />
        <element api="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.DetermineSchemaSerializationMode">
      <topicdata name="DetermineSchemaSerializationMode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.GetChanges">
      <topicdata name="GetChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.GetChanges" />
        <element api="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.HasChanges">
      <topicdata name="HasChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.HasChanges" />
        <element api="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.InferXmlSchema">
      <topicdata name="InferXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])" />
        <element api="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" />
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])" />
        <element api="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[])" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataTable)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)" />
        <element api="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.ReadXml">
      <topicdata name="ReadXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.ReadXml(System.String)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader)" />
        <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)" />
        <element api="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.ReadXmlSchema">
      <topicdata name="ReadXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
        <element api="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.WriteXml">
      <topicdata name="WriteXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.WriteXml(System.String)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)" />
        <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSet.WriteXmlSchema">
      <topicdata name="WriteXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.String)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})" />
        <element api="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
        <parameter name="ConstructSchema">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataSet.#ctor" />
      <parameters>
        <parameter name="dataSetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.CaseSensitive">
      <topicdata group="api" />
      <apidata name="CaseSensitive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaseSensitive" />
      <setter name="set_CaseSensitive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.CreateDataReader">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.CreateDataReader" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.CreateDataReader" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataTables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.DataSetName">
      <topicdata group="api" />
      <apidata name="DataSetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetName" />
      <setter name="set_DataSetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataSet.DefaultViewManager">
      <topicdata group="api" />
      <apidata name="DefaultViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataSet.DetermineSchemaSerializationMode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="DetermineSchemaSerializationMode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataSet.DetermineSchemaSerializationMode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.EnforceConstraints">
      <topicdata group="api" />
      <apidata name="EnforceConstraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnforceConstraints" />
      <setter name="set_EnforceConstraints" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataSet.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.GetChanges">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.GetChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.GetChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetDataSetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaComplexType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetSchemaSerializable">
      <topicdata group="api" />
      <apidata name="GetSchemaSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetSerializationData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetXml">
      <topicdata group="api" />
      <apidata name="GetXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.GetXmlSchema">
      <topicdata group="api" />
      <apidata name="GetXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.HasChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.HasChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <topicdata group="api" />
      <apidata name="InferXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.InferXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="nsArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataSet.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.InitializeDerivedDataSet">
      <topicdata group="api" />
      <apidata name="InitializeDerivedDataSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="IsBinarySerialized" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="tables" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Locale">
      <topicdata group="api" />
      <apidata name="Locale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Locale" />
      <setter name="set_Locale" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataSet.MergeFailed">
      <topicdata group="api" />
      <apidata name="MergeFailed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_MergeFailed" />
      <remover name="remove_MergeFailed" />
      <eventhandler>
        <type api="T:System.Data.MergeFailedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <topicdata group="api" />
      <apidata name="OnRemoveRelation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="relation">
          <type api="T:System.Data.DataRelation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="OnRemoveTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlReadMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Relations">
      <topicdata group="api" />
      <apidata name="Relations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Relations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataSet.RemotingFormat">
      <topicdata group="api" />
      <apidata name="RemotingFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemotingFormat" />
      <setter name="set_RemotingFormat" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.SerializationFormat" ref="false" />
            <enumValue>
              <field name="Xml" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.SchemaSerializationMode">
      <topicdata group="api" />
      <apidata name="SchemaSerializationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SchemaSerializationMode" />
      <setter name="set_SchemaSerializationMode" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.ShouldSerializeRelations">
      <topicdata group="api" />
      <apidata name="ShouldSerializeRelations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.ShouldSerializeTables">
      <topicdata group="api" />
      <apidata name="ShouldSerializeTables" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MarshalByValueComponent.Site">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
      <topicdata group="api" eiiName="IListSource.ContainsListCollection" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IListSource.ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IListSource.ContainsListCollection">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
      <topicdata group="api" eiiName="IListSource.GetList" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IListSource.GetList">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataSet.Tables">
      <topicdata group="api" />
      <apidata name="Tables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Tables" />
      <returns>
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSet.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="multipleTargetConverter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSet" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataSetDateTime">
      <topicdata group="api" />
      <apidata name="DataSetDateTime" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataSetDateTime.Local" />
        <element api="F:System.Data.DataSetDateTime.Unspecified" />
        <element api="F:System.Data.DataSetDateTime.UnspecifiedLocal" />
        <element api="F:System.Data.DataSetDateTime.Utc" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.DataSetDateTime.Local">
      <topicdata group="api" notopic="" />
      <apidata name="Local" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataSetDateTime.Unspecified">
      <topicdata group="api" notopic="" />
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataSetDateTime.UnspecifiedLocal">
      <topicdata group="api" notopic="" />
      <apidata name="UnspecifiedLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataSetDateTime.Utc">
      <topicdata group="api" notopic="" />
      <apidata name="Utc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetDateTime" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DataSetSchemaImporterExtension">
      <topicdata group="api" />
      <apidata name="DataSetSchemaImporterExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
        <element api="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataSetSchemaImporterExtension">
      <topicdata name="DataSetSchemaImporterExtension" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSetSchemaImporterExtension" />
      <apidata name="DataSetSchemaImporterExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataSetSchemaImporterExtension.#ctor" />
      <elements>
        <element api="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
          <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportDefaultValue(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType">
      <topicdata name="ImportSchemaType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
        </parameter>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="importer">
          <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
        </parameter>
        <parameter name="compileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="mainNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataSetSchemaImporterExtension.ImportSchemaType" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Serialization.Advanced.SchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
          <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Xml.Schema.XmlSchemaType" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
        </parameter>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="importer">
          <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
        </parameter>
        <parameter name="compileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="mainNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSetSchemaImporterExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataSysDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.Data.DataSysDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSysDescriptionAttribute has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataSysDescriptionAttribute">
      <topicdata name="DataSysDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataSysDescriptionAttribute">
      <topicdata name="DataSysDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataSysDescriptionAttribute" />
      <apidata name="DataSysDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.Data.DataSysDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DataSysDescriptionAttribute has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataSysDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataSysDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataTable">
      <topicdata group="api" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.TypedTableBase`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IListSource" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
        <element api="F:System.Data.DataTable.fInitInProgress" />
        <element api="Overload:System.Data.DataTable.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="Overload:System.Data.DataTable.#ctor">
          <element api="M:System.Data.DataTable.#ctor" />
          <element api="M:System.Data.DataTable.#ctor(System.String)" />
          <element api="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DataTable.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.DataTable.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.DataTable.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.DataTable.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.DataTable.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.DataTable.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.DataTable.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.DataTable.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.DataTable.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.DataTable.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GetDataTableSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RowChanging</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TableName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataTable.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.DataTable.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.DataTable.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.DataTable.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.DataTable.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.DataTable.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.DataTable.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.DataTable.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.DataTable.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.DataTable.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Events" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
    </api>
    <api id="Fields.T:System.Data.DataTable">
      <topicdata name="DataTable" group="list" subgroup="Fields" typeTopicId="T:System.Data.DataTable" />
      <apidata name="DataTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DataTable.#ctor" />
      <elements>
        <element api="F:System.Data.DataTable.fInitInProgress" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataTable.#ctor" />
        <element api="M:System.Data.DataTable.#ctor(System.String)" />
        <element api="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.GetChanges">
      <topicdata name="GetChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.GetChanges" />
        <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
        <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.LoadDataRow">
      <topicdata name="LoadDataRow" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
        <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.Merge">
      <topicdata name="Merge" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Merge" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
        <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.ReadXml">
      <topicdata name="ReadXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.ReadXml(System.String)" />
        <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
        <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.ReadXmlSchema">
      <topicdata name="ReadXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
        <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.Select">
      <topicdata name="Select" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Select" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.Select" />
        <element api="M:System.Data.DataTable.Select(System.String)" />
        <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.WriteXml">
      <topicdata name="WriteXml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTable.WriteXmlSchema">
      <topicdata name="WriteXmlSchema" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
        <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTable.#ctor" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.BeginLoadData">
      <topicdata group="api" />
      <apidata name="BeginLoadData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.CaseSensitive">
      <topicdata group="api" />
      <apidata name="CaseSensitive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaseSensitive" />
      <setter name="set_CaseSensitive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.ChildRelations">
      <topicdata group="api" />
      <apidata name="ChildRelations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChildRelations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.ColumnChanged">
      <topicdata group="api" />
      <apidata name="ColumnChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ColumnChanged" />
      <remover name="remove_ColumnChanged" />
      <eventhandler>
        <type api="T:System.Data.DataColumnChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.ColumnChanging">
      <topicdata group="api" />
      <apidata name="ColumnChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ColumnChanging" />
      <remover name="remove_ColumnChanging" />
      <eventhandler>
        <type api="T:System.Data.DataColumnChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <type api="T:System.Data.DataColumnCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Compute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Compute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Data.ConstraintCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.CreateDataReader">
      <topicdata group="api" />
      <apidata name="CreateDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTableReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.CreateInstance">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.DefaultView">
      <topicdata group="api" />
      <apidata name="DefaultView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultView" />
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.DisplayExpression">
      <topicdata group="api" />
      <apidata name="DisplayExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayExpression" />
      <setter name="set_DisplayExpression" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.EndLoadData">
      <topicdata group="api" />
      <apidata name="EndLoadData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.ExtendedProperties">
      <topicdata group="api" />
      <apidata name="ExtendedProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedProperties" />
      <returns>
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.DataTable.fInitInProgress">
      <topicdata group="api" />
      <apidata name="fInitInProgress" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetChanges">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.GetChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.GetChanges" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rowStates">
          <type api="T:System.Data.DataRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="GetDataTableSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaSet">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaComplexType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetErrors">
      <topicdata group="api" />
      <apidata name="GetErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetRowType">
      <topicdata group="api" />
      <apidata name="GetRowType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.GetSchema">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.HasErrors">
      <topicdata group="api" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name="ImportRow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="row">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Load" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Data.IDataReader" ref="true" />
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.LoadDataRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="fAcceptChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="LoadDataRow" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.LoadDataRow" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="loadOption">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.Locale">
      <topicdata group="api" />
      <apidata name="Locale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Locale" />
      <setter name="set_Locale" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <topicdata group="api" />
      <apidata name="Merge" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Merge" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="preserveChanges">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="missingSchemaAction">
          <type api="T:System.Data.MissingSchemaAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.MinimumCapacity">
      <topicdata group="api" />
      <apidata name="MinimumCapacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumCapacity" />
      <setter name="set_MinimumCapacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>50</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.NewRow">
      <topicdata group="api" />
      <apidata name="NewRow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.NewRowArray(System.Int32)">
      <topicdata group="api" />
      <apidata name="NewRowArray" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <topicdata group="api" />
      <apidata name="NewRowFromBuilder" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Data.DataRowBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnColumnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnColumnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataColumnChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pcevent">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name="OnRemoveColumn" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowDeleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRowDeleting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableCleared" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableClearing" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
      <topicdata group="api" />
      <apidata name="OnTableNewRow" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.ParentRelations">
      <topicdata group="api" />
      <apidata name="ParentRelations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentRelations" />
      <returns>
        <type api="T:System.Data.DataRelationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.PrimaryKey">
      <topicdata group="api" />
      <apidata name="PrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryKey" />
      <setter name="set_PrimaryKey" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.ReadXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXmlSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.RemotingFormat">
      <topicdata group="api" />
      <apidata name="RemotingFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemotingFormat" />
      <setter name="set_RemotingFormat" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.SerializationFormat" ref="false" />
            <enumValue>
              <field name="Xml" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.RowChanged">
      <topicdata group="api" />
      <apidata name="RowChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowChanged" />
      <remover name="remove_RowChanged" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.RowChanging">
      <topicdata group="api" />
      <apidata name="RowChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowChanging" />
      <remover name="remove_RowChanging" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.RowDeleted">
      <topicdata group="api" />
      <apidata name="RowDeleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowDeleted" />
      <remover name="remove_RowDeleted" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.RowDeleting">
      <topicdata group="api" />
      <apidata name="RowDeleting" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RowDeleting" />
      <remover name="remove_RowDeleting" />
      <eventhandler>
        <type api="T:System.Data.DataRowChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataRowChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.Rows">
      <topicdata group="api" />
      <apidata name="Rows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rows" />
      <returns>
        <type api="T:System.Data.DataRowCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTable.Select">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Select(System.String)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Select(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sort">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.Select" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filterExpression">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sort">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="recordStates">
          <type api="T:System.Data.DataViewRowState" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRow" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.MarshalByValueComponent.Site">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.ComponentModel.ISite" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IComponent.Site">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
      <topicdata group="api" eiiName="IListSource.ContainsListCollection" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IListSource.ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IListSource.ContainsListCollection">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
      <topicdata group="api" eiiName="IListSource.GetList" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IListSource.GetList">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.TableCleared">
      <topicdata group="api" />
      <apidata name="TableCleared" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableCleared" />
      <remover name="remove_TableCleared" />
      <eventhandler>
        <type api="T:System.Data.DataTableClearEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTable.TableClearing">
      <topicdata group="api" />
      <apidata name="TableClearing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableClearing" />
      <remover name="remove_TableClearing" />
      <eventhandler>
        <type api="T:System.Data.DataTableClearEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTable.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TableName" />
      <setter name="set_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Data.DataTable.TableNewRow">
      <topicdata group="api" />
      <apidata name="TableNewRow" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TableNewRow" />
      <remover name="remove_TableNewRow" />
      <eventhandler>
        <type api="T:System.Data.DataTableNewRowEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.ToString">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Data.XmlWriteMode" ref="false" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.String)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXmlSchema" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTable.WriteXmlSchema" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="writeHierarchy">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTable" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableClearEventArgs">
      <topicdata group="api" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataTableClearEventArgs.Table" />
        <element api="P:System.Data.DataTableClearEventArgs.TableName" />
        <element api="P:System.Data.DataTableClearEventArgs.TableNamespace" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataTableClearEventArgs">
      <topicdata name="DataTableClearEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataTableClearEventArgs">
      <topicdata name="DataTableClearEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableClearEventArgs" />
      <apidata name="DataTableClearEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataTableClearEventArgs.Table" />
        <element api="P:System.Data.DataTableClearEventArgs.TableName" />
        <element api="P:System.Data.DataTableClearEventArgs.TableNamespace" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableClearEventArgs.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.TableName">
      <topicdata group="api" />
      <apidata name="TableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableClearEventArgs.TableNamespace">
      <topicdata group="api" />
      <apidata name="TableNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TableNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableClearEventHandler">
      <topicdata group="api" />
      <apidata name="DataTableClearEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataTableClearEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableCollection">
      <topicdata group="api" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.DataTableCollection.CollectionChanged" />
        <element api="E:System.Data.DataTableCollection.CollectionChanging" />
        <element api="Overload:System.Data.DataTableCollection.Add">
          <element api="M:System.Data.DataTableCollection.Add" />
          <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])" />
        <element api="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Clear" />
        <element api="Overload:System.Data.DataTableCollection.Contains">
          <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
          <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.IndexOf">
          <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.Remove">
          <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Data.DataTableCollection.Item">
          <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.TablesCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>CollectionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.ListBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableCollection.Add">
          <element api="M:System.Data.DataTableCollection.Add" />
          <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String)" />
          <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])" />
        <element api="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Clear" />
        <element api="Overload:System.Data.DataTableCollection.Contains">
          <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
          <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.CopyTo">
          <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.IndexOf">
          <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
          <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.DataTableCollection.Remove">
          <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
          <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
        </element>
        <element api="M:System.Data.DataTableCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableCollection.Item">
          <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String)" />
          <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
        </element>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataTableCollection">
      <topicdata name="DataTableCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.DataTableCollection" />
      <apidata name="DataTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Data.DataTableCollection.CollectionChanged" />
        <element api="E:System.Data.DataTableCollection.CollectionChanging" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Add" />
        <element api="M:System.Data.DataTableCollection.Add(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Add(System.String)" />
        <element api="M:System.Data.DataTableCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Contains(System.String)" />
        <element api="M:System.Data.DataTableCollection.Contains(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.IndexOf(System.String)" />
        <element api="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataTableCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataTableCollection.Item(System.String)" />
        <element api="P:System.Data.DataTableCollection.Item(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableCollection.Remove(System.String)" />
        <element api="M:System.Data.DataTableCollection.Remove(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tables">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTableCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataTableCollection.CollectionChanging">
      <topicdata group="api" />
      <apidata name="CollectionChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanging" />
      <remover name="remove_CollectionChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Contains(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.CopyTo(System.Data.DataTable[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.IndexOf(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableCollection.Item(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.Remove(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableExtensions">
      <topicdata group="api" />
      <apidata name="DataTableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.DataTableExtensions.AsDataView">
          <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
        <element api="Overload:System.Data.DataTableExtensions.CopyToDataTable">
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataTableExtensions">
      <topicdata name="DataTableExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableExtensions" />
      <apidata name="DataTableExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.DataTableExtensions.AsDataView">
          <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
        <element api="Overload:System.Data.DataTableExtensions.CopyToDataTable">
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableExtensions.AsDataView">
      <topicdata name="AsDataView" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableExtensions.CopyToDataTable">
      <topicdata name="CopyToDataTable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.AsDataView" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})">
      <topicdata group="api" />
      <apidata name="AsDataView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.AsDataView" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="AsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.DataRow" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
      <topicdata group="api" />
      <apidata name="CopyToDataTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.DataTableExtensions.CopyToDataTable" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Data.LoadOption" ref="false" />
        </parameter>
        <parameter name="errorHandler">
          <type api="T:System.Data.FillErrorEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.DataTableNewRowEventArgs">
      <topicdata group="api" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataTableNewRowEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataTableNewRowEventArgs">
      <topicdata name="DataTableNewRowEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataTableNewRowEventArgs">
      <topicdata name="DataTableNewRowEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableNewRowEventArgs" />
      <apidata name="DataTableNewRowEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.DataTableNewRowEventArgs.Row" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableNewRowEventArgs.#ctor(System.Data.DataRow)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataRow">
          <type api="T:System.Data.DataRow" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableNewRowEventArgs.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableNewRowEventHandler">
      <topicdata group="api" />
      <apidata name="DataTableNewRowEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.DataTableNewRowEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.DataTableReader">
      <topicdata group="api" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)" source="extension">
          <apidata name="CanGetColumnSchema" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data.Common" />
            <type api="T:System.Data.Common.DbDataReaderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" source="extension">
          <apidata name="GetColumnSchema" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.Common.DbColumn" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data.Common" />
            <type api="T:System.Data.Common.DbDataReaderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.GetFieldValueAsync">
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.IsDBNullAsync">
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.NextResultAsync">
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync" />
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.ReadAsync">
          <element api="M:System.Data.Common.DbDataReader.ReadAsync" />
          <element api="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.#ctor">
          <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
          <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
        </element>
        <element api="M:System.Data.DataTableReader.Close" />
        <element api="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetByte(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChar(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetEnumerator" />
        <element api="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.GetSchemaTable" />
        <element api="M:System.Data.DataTableReader.GetString(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
        <element api="M:System.Data.DataTableReader.NextResult" />
        <element api="M:System.Data.DataTableReader.Read" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
        <element api="P:System.Data.DataTableReader.Depth" />
        <element api="P:System.Data.DataTableReader.FieldCount" />
        <element api="P:System.Data.DataTableReader.HasRows" />
        <element api="P:System.Data.DataTableReader.IsClosed" />
        <element api="Overload:System.Data.DataTableReader.Item">
          <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
          <element api="P:System.Data.DataTableReader.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataTableReader.RecordsAffected" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataTableReader">
      <topicdata name="DataTableReader" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Common.DbDataReaderExtensions.CanGetColumnSchema(System.Data.Common.DbDataReader)" source="extension">
          <apidata name="CanGetColumnSchema" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data.Common" />
            <type api="T:System.Data.Common.DbDataReaderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.Common.DbDataReaderExtensions.GetColumnSchema(System.Data.Common.DbDataReader)" source="extension">
          <apidata name="GetColumnSchema" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.Common.DbColumn" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data.Common" />
            <type api="T:System.Data.Common.DbDataReaderExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.GetFieldValueAsync">
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.GetStream(System.Int32)" />
        <element api="M:System.Data.Common.DbDataReader.GetTextReader(System.Int32)" />
        <element api="Overload:System.Data.DataTableReader.IsDBNullAsync">
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)" />
          <element api="M:System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.NextResultAsync">
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync" />
          <element api="M:System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Data.DataTableReader.ReadAsync">
          <element api="M:System.Data.Common.DbDataReader.ReadAsync" />
          <element api="M:System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
        <element api="M:System.Data.DataTableReader.Close" />
        <element api="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetByte(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChar(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetEnumerator" />
        <element api="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetName(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.GetSchemaTable" />
        <element api="M:System.Data.DataTableReader.GetString(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValue(System.Int32)" />
        <element api="M:System.Data.DataTableReader.GetValues(System.Object[])" />
        <element api="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
        <element api="M:System.Data.DataTableReader.NextResult" />
        <element api="M:System.Data.DataTableReader.Read" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataTableReader">
      <topicdata name="DataTableReader" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataTableReader" />
      <apidata name="DataTableReader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Common.DbDataReader.VisibleFieldCount" />
        <element api="P:System.Data.DataTableReader.Depth" />
        <element api="P:System.Data.DataTableReader.FieldCount" />
        <element api="P:System.Data.DataTableReader.HasRows" />
        <element api="P:System.Data.DataTableReader.IsClosed" />
        <element api="Overload:System.Data.DataTableReader.Item">
          <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
          <element api="P:System.Data.DataTableReader.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataTableReader.RecordsAffected" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableReader.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
        <element api="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataTableReader.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataTableReader.Item(System.Int32)" />
        <element api="P:System.Data.DataTableReader.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTableReader.#ctor" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataTableReader.#ctor" />
      <parameters>
        <parameter name="dataTables">
          <arrayOf rank="1">
            <type api="T:System.Data.DataTable" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.Close">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Data.IDataReader.Close">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Depth">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.Depth">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.FieldCount">
      <topicdata group="api" />
      <apidata name="FieldCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.FieldCount">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_FieldCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.FieldCount">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetBoolean(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetBoolean(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetByte(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetByte(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetByte(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dataIndex">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetChar(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetChar(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetChar(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="dataIndex">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetDateTime(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDateTime(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetDecimal(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDecimal(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetDouble(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDouble" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetDouble(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetDouble(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetEnumerator">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetFieldType(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetFloat(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFloat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetFloat(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetFloat(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetGuid(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetGuid(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetGuid(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetInt16(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt16" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt16(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt16(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetInt32(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt32" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt32(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt32(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetInt64(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetInt64(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetInt64(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetName(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetName(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetOrdinal(System.String)">
      <topicdata group="api" />
      <apidata name="GetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetOrdinal(System.String)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetOrdinal(System.String)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetProviderSpecificValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetSchemaTable">
      <topicdata group="api" />
      <apidata name="GetSchemaTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetSchemaTable">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.GetSchemaTable">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetString(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetString(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetString(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetValue(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetValue(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.GetValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.GetValues(System.Object[])">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.GetValues(System.Object[])">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.HasRows">
      <topicdata group="api" />
      <apidata name="HasRows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.HasRows">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasRows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.IsClosed">
      <topicdata group="api" />
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.IsClosed">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.IsClosed">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.IsDBNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsDBNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.IsDBNull(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Item(System.Int32)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="ordinal">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.Item(System.Int32)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataTableReader.Item" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.Item(System.String)">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataRecord.Item(System.String)">
          <type api="T:System.Data.IDataRecord" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.NextResult">
      <topicdata group="api" />
      <apidata name="NextResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.NextResult">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.NextResult">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataTableReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Common.DbDataReader.Read">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.IDataReader.Read">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataTableReader.RecordsAffected">
      <topicdata group="api" />
      <apidata name="RecordsAffected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Common.DbDataReader.RecordsAffected">
          <type api="T:System.Data.Common.DbDataReader" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RecordsAffected" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.IDataReader.RecordsAffected">
          <type api="T:System.Data.IDataReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataTableReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataView">
      <topicdata group="api" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataView.Initialized" />
        <element api="E:System.Data.DataView.ListChanged" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="Overload:System.Data.DataView.#ctor">
          <element api="M:System.Data.DataView.#ctor" />
          <element api="M:System.Data.DataView.#ctor(System.Data.DataTable)" />
          <element api="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataView.AddNew" />
        <element api="M:System.Data.DataView.BeginInit" />
        <element api="M:System.Data.DataView.Close" />
        <element api="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataView.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataView.Delete(System.Int32)" />
        <element api="Overload:System.Data.DataView.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Data.DataView.EndInit" />
        <element api="Overload:System.Data.DataView.Equals">
          <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="Overload:System.Data.DataView.Find">
          <element api="M:System.Data.DataView.Find(System.Object)" />
          <element api="M:System.Data.DataView.Find(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataView.FindRows">
          <element api="M:System.Data.DataView.FindRows(System.Object)" />
          <element api="M:System.Data.DataView.FindRows(System.Object[])" />
        </element>
        <element api="M:System.Data.DataView.GetEnumerator" />
        <element api="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.Open" />
        <element api="M:System.Data.DataView.Reset" />
        <element api="M:System.Data.DataView.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="Overload:System.Data.DataView.ToTable">
          <element api="M:System.Data.DataView.ToTable" />
          <element api="M:System.Data.DataView.ToTable(System.String)" />
          <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
          <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
        </element>
        <element api="Overload:System.Data.DataView.UpdateIndex">
          <element api="M:System.Data.DataView.UpdateIndex" />
          <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
        </element>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataView.AllowDelete" />
        <element api="P:System.Data.DataView.AllowEdit" />
        <element api="P:System.Data.DataView.AllowNew" />
        <element api="P:System.Data.DataView.ApplyDefaultSort" />
        <element api="P:System.Data.DataView.Count" />
        <element api="P:System.Data.DataView.DataViewManager" />
        <element api="P:System.Data.DataView.IsInitialized" />
        <element api="P:System.Data.DataView.IsOpen" />
        <element api="P:System.Data.DataView.Item(System.Int32)" />
        <element api="P:System.Data.DataView.RowFilter" />
        <element api="P:System.Data.DataView.RowStateFilter" />
        <element api="P:System.Data.DataView.Sort" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering" />
        <element api="P:System.Data.DataView.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataSourceEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PositionChanged</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Table</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Data.DataView.AddNew" />
        <element api="M:System.Data.DataView.BeginInit" />
        <element api="M:System.Data.DataView.Close" />
        <element api="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataView.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataView.Delete(System.Int32)" />
        <element api="Overload:System.Data.DataView.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Data.DataView.EndInit" />
        <element api="Overload:System.Data.DataView.Equals">
          <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="Overload:System.Data.DataView.Find">
          <element api="M:System.Data.DataView.Find(System.Object)" />
          <element api="M:System.Data.DataView.Find(System.Object[])" />
        </element>
        <element api="Overload:System.Data.DataView.FindRows">
          <element api="M:System.Data.DataView.FindRows(System.Object)" />
          <element api="M:System.Data.DataView.FindRows(System.Object[])" />
        </element>
        <element api="M:System.Data.DataView.GetEnumerator" />
        <element api="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataView.Open" />
        <element api="M:System.Data.DataView.Reset" />
        <element api="M:System.Data.DataView.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)" />
        <element api="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="Overload:System.Data.DataView.ToTable">
          <element api="M:System.Data.DataView.ToTable" />
          <element api="M:System.Data.DataView.ToTable(System.String)" />
          <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
          <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
        </element>
        <element api="Overload:System.Data.DataView.UpdateIndex">
          <element api="M:System.Data.DataView.UpdateIndex" />
          <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
        </element>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataView.AllowDelete" />
        <element api="P:System.Data.DataView.AllowEdit" />
        <element api="P:System.Data.DataView.AllowNew" />
        <element api="P:System.Data.DataView.ApplyDefaultSort" />
        <element api="P:System.Data.DataView.Count" />
        <element api="P:System.Data.DataView.DataViewManager" />
        <element api="P:System.Data.DataView.IsInitialized" />
        <element api="P:System.Data.DataView.IsOpen" />
        <element api="P:System.Data.DataView.Item(System.Int32)" />
        <element api="P:System.Data.DataView.RowFilter" />
        <element api="P:System.Data.DataView.RowStateFilter" />
        <element api="P:System.Data.DataView.Sort" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataView.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataView.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting" />
        <element api="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering" />
        <element api="P:System.Data.DataView.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataView">
      <topicdata name="DataView" group="list" subgroup="Events" typeTopicId="T:System.Data.DataView" />
      <apidata name="DataView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataView.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataView.Initialized" />
        <element api="E:System.Data.DataView.ListChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataView.#ctor" />
        <element api="M:System.Data.DataView.#ctor(System.Data.DataTable)" />
        <element api="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
        <element api="M:System.Data.DataView.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.Equals(System.Data.DataView)" />
        <element api="M:System.Object.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.Find(System.Object)" />
        <element api="M:System.Data.DataView.Find(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.FindRows">
      <topicdata name="FindRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.FindRows(System.Object)" />
        <element api="M:System.Data.DataView.FindRows(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.ToTable">
      <topicdata name="ToTable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.ToTable" />
        <element api="M:System.Data.DataView.ToTable(System.String)" />
        <element api="M:System.Data.DataView.ToTable(System.Boolean,System.String[])" />
        <element api="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataView.UpdateIndex">
      <topicdata name="UpdateIndex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataView.UpdateIndex" />
        <element api="M:System.Data.DataView.UpdateIndex(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataView.#ctor" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="RowFilter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="Sort">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="RowState">
          <type api="T:System.Data.DataViewRowState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Data.DataRowView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.AllowDelete">
      <topicdata group="api" />
      <apidata name="AllowDelete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDelete" />
      <setter name="set_AllowDelete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.AllowEdit">
      <topicdata group="api" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowEdit" />
      <setter name="set_AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.AllowNew">
      <topicdata group="api" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowNew" />
      <setter name="set_AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.ApplyDefaultSort">
      <topicdata group="api" />
      <apidata name="ApplyDefaultSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyDefaultSort" />
      <setter name="set_ApplyDefaultSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataView.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="ColumnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.DataViewManager">
      <topicdata group="api" />
      <apidata name="DataViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataView.Delete(System.Int32)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Equals(System.Data.DataView)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Equals" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="view">
          <type api="T:System.Data.DataView" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Find(System.Object)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Find(System.Object[])">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.FindRows(System.Object)">
      <topicdata group="api" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.FindRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRowView" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.FindRows(System.Object[])">
      <topicdata group="api" />
      <apidata name="FindRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.FindRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataRowView" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="IndexListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataView.Initialized">
      <topicdata group="api" />
      <apidata name="Initialized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Initialized" />
      <remover name="remove_Initialized" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ISupportInitializeNotification.Initialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ISupportInitializeNotification.IsInitialized">
          <type api="T:System.ComponentModel.ISupportInitializeNotification" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.IsOpen">
      <topicdata group="api" />
      <apidata name="IsOpen" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOpen" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="recordIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataRowView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.DataView.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IBindingList.ListChanged">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.RowFilter">
      <topicdata group="api" />
      <apidata name="RowFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RowFilter" />
      <setter name="set_RowFilter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.RowStateFilter">
      <topicdata group="api" />
      <apidata name="RowStateFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowStateFilter" />
      <setter name="set_RowStateFilter" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.DataViewRowState" ref="false" />
            <enumValue>
              <field name="CurrentRows" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataView.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="recordIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.AddIndex" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#AddNew">
      <topicdata group="api" eiiName="IBindingList.AddNew" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowEdit">
      <topicdata group="api" eiiName="IBindingList.AllowEdit" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowEdit">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowNew">
      <topicdata group="api" eiiName="IBindingList.AllowNew" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#AllowRemove">
      <topicdata group="api" eiiName="IBindingList.AllowRemove" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowRemove">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" eiiName="IBindingList.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" eiiName="IBindingList.Find" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#IsSorted">
      <topicdata group="api" eiiName="IBindingList.IsSorted" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.IsSorted">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.RemoveIndex" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingList#RemoveSort">
      <topicdata group="api" eiiName="IBindingList.RemoveSort" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveSort">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SortDirection">
      <topicdata group="api" eiiName="IBindingList.SortDirection" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortDirection">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SortProperty">
      <topicdata group="api" eiiName="IBindingList.SortProperty" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortProperty">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <topicdata group="api" eiiName="IBindingList.SupportsChangeNotification" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSearching">
      <topicdata group="api" eiiName="IBindingList.SupportsSearching" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSearching">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingList#SupportsSorting">
      <topicdata group="api" eiiName="IBindingList.SupportsSorting" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSorting">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingListView#ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
      <topicdata group="api" eiiName="IBindingListView.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sorts">
          <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingListView.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#Filter">
      <topicdata group="api" eiiName="IBindingListView.Filter" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.ComponentModel.IBindingListView.Filter" />
      <setter name="set_System.ComponentModel.IBindingListView.Filter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.Filter">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#IBindingListView#RemoveFilter">
      <topicdata group="api" eiiName="IBindingListView.RemoveFilter" />
      <apidata name="RemoveFilter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingListView.RemoveFilter">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SortDescriptions">
      <topicdata group="api" eiiName="IBindingListView.SortDescriptions" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDescriptionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SortDescriptions">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsAdvancedSorting">
      <topicdata group="api" eiiName="IBindingListView.SupportsAdvancedSorting" />
      <apidata name="SupportsAdvancedSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SupportsAdvancedSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SupportsAdvancedSorting">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.System#ComponentModel#IBindingListView#SupportsFiltering">
      <topicdata group="api" eiiName="IBindingListView.SupportsFiltering" />
      <apidata name="SupportsFiltering" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingListView.SupportsFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingListView.SupportsFiltering">
          <type api="T:System.ComponentModel.IBindingListView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetItemProperties" />
      <apidata name="GetItemProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetListName" />
      <apidata name="GetListName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataView.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Table" />
      <setter name="set_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataView.ToTable">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="distinct">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="columnNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.ToTable(System.String)">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.ToTable(System.String,System.Boolean,System.String[])">
      <topicdata group="api" />
      <apidata name="ToTable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataView.ToTable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="distinct">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="columnNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.UpdateIndex">
      <topicdata group="api" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.UpdateIndex" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <topicdata group="api" />
      <apidata name="UpdateIndex" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.DataView.UpdateIndex" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataView" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataViewManager">
      <topicdata group="api" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IBindingList" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ITypedList" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataViewManager.ListChanged" />
        <element api="Overload:System.Data.DataViewManager.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="Overload:System.Data.DataViewManager.#ctor">
          <element api="M:System.Data.DataViewManager.#ctor" />
          <element api="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)" />
        </element>
        <element api="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)" />
        <element api="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataViewManager.DataSet" />
        <element api="P:System.Data.DataViewManager.DataViewSettingCollectionString" />
        <element api="P:System.Data.DataViewManager.DataViewSettings" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#Count" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewManager.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.ToString" />
        <element api="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)" />
        <element api="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)" />
        <element api="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Clear" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])" />
        <element api="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Site" />
        <element api="P:System.Data.DataViewManager.DataSet" />
        <element api="P:System.Data.DataViewManager.DataViewSettingCollectionString" />
        <element api="P:System.Data.DataViewManager.DataViewSettings" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#Count" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching" />
        <element api="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DataViewManager">
      <topicdata name="DataViewManager" group="list" subgroup="Events" typeTopicId="T:System.Data.DataViewManager" />
      <apidata name="DataViewManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.DataViewManager.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataViewManager.ListChanged" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataViewManager.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DataViewManager.#ctor" />
        <element api="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataViewManager.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DataViewManager.#ctor" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="CreateDataView" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.DataSet">
      <topicdata group="api" />
      <apidata name="DataSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSet" />
      <setter name="set_DataSet" />
      <returns>
        <type api="T:System.Data.DataSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <topicdata group="api" />
      <apidata name="DataViewSettingCollectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataViewSettingCollectionString" />
      <setter name="set_DataViewSettingCollectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.DataViewSettings">
      <topicdata group="api" />
      <apidata name="DataViewSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewSettings" />
      <returns>
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Data.DataViewManager.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.ListChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IBindingList.ListChanged">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.ListChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="RelationCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#Count">
      <topicdata group="api" eiiName="ICollection.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.AddIndex" />
      <apidata name="AddIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#AddNew">
      <topicdata group="api" eiiName="IBindingList.AddNew" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.AddNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowEdit">
      <topicdata group="api" eiiName="IBindingList.AllowEdit" />
      <apidata name="AllowEdit" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowEdit">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowNew">
      <topicdata group="api" eiiName="IBindingList.AllowNew" />
      <apidata name="AllowNew" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowNew">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#AllowRemove">
      <topicdata group="api" eiiName="IBindingList.AllowRemove" />
      <apidata name="AllowRemove" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.AllowRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.AllowRemove">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
      <topicdata group="api" eiiName="IBindingList.ApplySort" />
      <apidata name="ApplySort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <topicdata group="api" eiiName="IBindingList.Find" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#IsSorted">
      <topicdata group="api" eiiName="IBindingList.IsSorted" />
      <apidata name="IsSorted" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.IsSorted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.IsSorted">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="IBindingList.RemoveIndex" />
      <apidata name="RemoveIndex" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#IBindingList#RemoveSort">
      <topicdata group="api" eiiName="IBindingList.RemoveSort" />
      <apidata name="RemoveSort" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IBindingList.RemoveSort">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortDirection">
      <topicdata group="api" eiiName="IBindingList.SortDirection" />
      <apidata name="SortDirection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortDirection" />
      <returns>
        <type api="T:System.ComponentModel.ListSortDirection" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortDirection">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SortProperty">
      <topicdata group="api" eiiName="IBindingList.SortProperty" />
      <apidata name="SortProperty" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SortProperty" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SortProperty">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsChangeNotification">
      <topicdata group="api" eiiName="IBindingList.SupportsChangeNotification" />
      <apidata name="SupportsChangeNotification" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsChangeNotification" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsChangeNotification">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSearching">
      <topicdata group="api" eiiName="IBindingList.SupportsSearching" />
      <apidata name="SupportsSearching" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSearching" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSearching">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewManager.System#ComponentModel#IBindingList#SupportsSorting">
      <topicdata group="api" eiiName="IBindingList.SupportsSorting" />
      <apidata name="SupportsSorting" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IBindingList.SupportsSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IBindingList.SupportsSorting">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetItemProperties" />
      <apidata name="GetItemProperties" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
      <topicdata group="api" eiiName="ITypedList.GetListName" />
      <apidata name="GetListName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="listAccessors">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])">
          <type api="T:System.ComponentModel.ITypedList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="TableCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DataViewRowState">
      <topicdata group="api" />
      <apidata name="DataViewRowState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DataViewRowState.None" />
        <element api="F:System.Data.DataViewRowState.Unchanged" />
        <element api="F:System.Data.DataViewRowState.Added" />
        <element api="F:System.Data.DataViewRowState.Deleted" />
        <element api="F:System.Data.DataViewRowState.ModifiedCurrent" />
        <element api="F:System.Data.DataViewRowState.ModifiedOriginal" />
        <element api="F:System.Data.DataViewRowState.OriginalRows" />
        <element api="F:System.Data.DataViewRowState.CurrentRows" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataViewRowStateEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.DataViewRowState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.CurrentRows">
      <topicdata group="api" notopic="" />
      <apidata name="CurrentRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.ModifiedCurrent">
      <topicdata group="api" notopic="" />
      <apidata name="ModifiedCurrent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.ModifiedOriginal">
      <topicdata group="api" notopic="" />
      <apidata name="ModifiedOriginal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.OriginalRows">
      <topicdata group="api" notopic="" />
      <apidata name="OriginalRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>42</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DataViewRowState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DataViewSetting">
      <topicdata group="api" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataViewSetting.ApplyDefaultSort" />
        <element api="P:System.Data.DataViewSetting.DataViewManager" />
        <element api="P:System.Data.DataViewSetting.RowFilter" />
        <element api="P:System.Data.DataViewSetting.RowStateFilter" />
        <element api="P:System.Data.DataViewSetting.Sort" />
        <element api="P:System.Data.DataViewSetting.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataViewSetting">
      <topicdata name="DataViewSetting" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataViewSetting">
      <topicdata name="DataViewSetting" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewSetting" />
      <apidata name="DataViewSetting" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataViewSetting.ApplyDefaultSort" />
        <element api="P:System.Data.DataViewSetting.DataViewManager" />
        <element api="P:System.Data.DataViewSetting.RowFilter" />
        <element api="P:System.Data.DataViewSetting.RowStateFilter" />
        <element api="P:System.Data.DataViewSetting.Sort" />
        <element api="P:System.Data.DataViewSetting.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <topicdata group="api" />
      <apidata name="ApplyDefaultSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplyDefaultSort" />
      <setter name="set_ApplyDefaultSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSetting.DataViewManager">
      <topicdata group="api" />
      <apidata name="DataViewManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataViewManager" />
      <returns>
        <type api="T:System.Data.DataViewManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataViewSetting.RowFilter">
      <topicdata group="api" />
      <apidata name="RowFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowFilter" />
      <setter name="set_RowFilter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSetting.RowStateFilter">
      <topicdata group="api" />
      <apidata name="RowStateFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RowStateFilter" />
      <setter name="set_RowStateFilter" />
      <returns>
        <type api="T:System.Data.DataViewRowState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSetting.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSetting.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.DataViewSettingCollection">
      <topicdata group="api" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewSettingCollection.CopyTo">
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataViewSettingCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.DataViewSettingCollection.Count" />
        <element api="P:System.Data.DataViewSettingCollection.IsReadOnly" />
        <element api="P:System.Data.DataViewSettingCollection.IsSynchronized" />
        <element api="Overload:System.Data.DataViewSettingCollection.Item">
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataViewSettingCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.DataViewSettingsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.DataViewSettingCollection">
      <topicdata name="DataViewSettingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.DataViewSettingCollection.CopyTo">
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
        </element>
        <element api="M:System.Data.DataViewSettingCollection.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DataViewSettingCollection">
      <topicdata name="DataViewSettingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.DataViewSettingCollection" />
      <apidata name="DataViewSettingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.DataViewSettingCollection.Count" />
        <element api="P:System.Data.DataViewSettingCollection.IsReadOnly" />
        <element api="P:System.Data.DataViewSettingCollection.IsSynchronized" />
        <element api="Overload:System.Data.DataViewSettingCollection.Item">
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
          <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
        </element>
        <element api="P:System.Data.DataViewSettingCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataViewSettingCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DataViewSettingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)" />
        <element api="P:System.Data.DataViewSettingCollection.Item(System.Int32)" />
        <element api="P:System.Data.DataViewSettingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.CopyTo" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ar">
          <arrayOf rank="1">
            <type api="T:System.Data.DataViewSetting" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.DataViewSettingCollection.Item" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="tableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.DataViewSetting" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DataViewSettingCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DataViewSettingCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.DBConcurrencyException">
      <topicdata group="api" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.DBConcurrencyException.#ctor">
          <element api="M:System.Data.DBConcurrencyException.#ctor" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String)" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])" />
        </element>
        <element api="Overload:System.Data.DBConcurrencyException.CopyToRows">
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Data.DBConcurrencyException.Row" />
        <element api="P:System.Data.DBConcurrencyException.RowCount" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DBConcurrencyException">
      <topicdata name="DBConcurrencyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <elements>
        <element api="Overload:System.Data.DBConcurrencyException.CopyToRows">
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
          <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
        </element>
        <element api="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DBConcurrencyException">
      <topicdata name="DBConcurrencyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DBConcurrencyException" />
      <apidata name="DBConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.DBConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Data.DBConcurrencyException.Row" />
        <element api="P:System.Data.DBConcurrencyException.RowCount" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" />
      </containers>
    </api>
    <api id="Overload:System.Data.DBConcurrencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DBConcurrencyException.#ctor" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String)" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.DBConcurrencyException.CopyToRows">
      <topicdata name="CopyToRows" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])" />
        <element api="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DBConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="dataRows">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
      <topicdata group="api" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DBConcurrencyException.CopyToRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyToRows" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.DBConcurrencyException.CopyToRows" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Data.DataRow" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="si">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DBConcurrencyException.Row">
      <topicdata group="api" />
      <apidata name="Row" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Row" />
      <setter name="set_Row" />
      <returns>
        <type api="T:System.Data.DataRow" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.DBConcurrencyException.RowCount">
      <topicdata group="api" />
      <apidata name="RowCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RowCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DBConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.DbType.AnsiString" />
        <element api="F:System.Data.DbType.Binary" />
        <element api="F:System.Data.DbType.Byte" />
        <element api="F:System.Data.DbType.Boolean" />
        <element api="F:System.Data.DbType.Currency" />
        <element api="F:System.Data.DbType.Date" />
        <element api="F:System.Data.DbType.DateTime" />
        <element api="F:System.Data.DbType.Decimal" />
        <element api="F:System.Data.DbType.Double" />
        <element api="F:System.Data.DbType.Guid" />
        <element api="F:System.Data.DbType.Int16" />
        <element api="F:System.Data.DbType.Int32" />
        <element api="F:System.Data.DbType.Int64" />
        <element api="F:System.Data.DbType.Object" />
        <element api="F:System.Data.DbType.SByte" />
        <element api="F:System.Data.DbType.Single" />
        <element api="F:System.Data.DbType.String" />
        <element api="F:System.Data.DbType.Time" />
        <element api="F:System.Data.DbType.UInt16" />
        <element api="F:System.Data.DbType.UInt32" />
        <element api="F:System.Data.DbType.UInt64" />
        <element api="F:System.Data.DbType.VarNumeric" />
        <element api="F:System.Data.DbType.AnsiStringFixedLength" />
        <element api="F:System.Data.DbType.StringFixedLength" />
        <element api="F:System.Data.DbType.Xml" />
        <element api="F:System.Data.DbType.DateTime2" />
        <element api="F:System.Data.DbType.DateTimeOffset" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.AnsiString">
      <topicdata group="api" notopic="" />
      <apidata name="AnsiString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.AnsiStringFixedLength">
      <topicdata group="api" notopic="" />
      <apidata name="AnsiStringFixedLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Boolean">
      <topicdata group="api" notopic="" />
      <apidata name="Boolean" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Byte">
      <topicdata group="api" notopic="" />
      <apidata name="Byte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Currency">
      <topicdata group="api" notopic="" />
      <apidata name="Currency" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.DateTime2">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>26</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.DateTimeOffset">
      <topicdata group="api" notopic="" />
      <apidata name="DateTimeOffset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>27</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Double">
      <topicdata group="api" notopic="" />
      <apidata name="Double" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Guid">
      <topicdata group="api" notopic="" />
      <apidata name="Guid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Int16">
      <topicdata group="api" notopic="" />
      <apidata name="Int16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Int32">
      <topicdata group="api" notopic="" />
      <apidata name="Int32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Int64">
      <topicdata group="api" notopic="" />
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Object">
      <topicdata group="api" notopic="" />
      <apidata name="Object" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.SByte">
      <topicdata group="api" notopic="" />
      <apidata name="SByte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.String">
      <topicdata group="api" notopic="" />
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.StringFixedLength">
      <topicdata group="api" notopic="" />
      <apidata name="StringFixedLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.UInt16">
      <topicdata group="api" notopic="" />
      <apidata name="UInt16" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.UInt32">
      <topicdata group="api" notopic="" />
      <apidata name="UInt32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.UInt64">
      <topicdata group="api" notopic="" />
      <apidata name="UInt64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.VarNumeric">
      <topicdata group="api" notopic="" />
      <apidata name="VarNumeric" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.DbType.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DbType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.DeletedRowInaccessibleException">
      <topicdata group="api" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.DeletedRowInaccessibleException.#ctor">
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DeletedRowInaccessibleException">
      <topicdata name="DeletedRowInaccessibleException" group="list" subgroup="Events" typeTopicId="T:System.Data.DeletedRowInaccessibleException" />
      <apidata name="DeletedRowInaccessibleException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DeletedRowInaccessibleException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" />
      </containers>
    </api>
    <api id="Overload:System.Data.DeletedRowInaccessibleException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DeletedRowInaccessibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DeletedRowInaccessibleException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.DuplicateNameException">
      <topicdata group="api" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.DuplicateNameException.#ctor">
          <element api="M:System.Data.DuplicateNameException.#ctor" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.String)" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Methods" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Properties" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.DuplicateNameException">
      <topicdata name="DuplicateNameException" group="list" subgroup="Events" typeTopicId="T:System.Data.DuplicateNameException" />
      <apidata name="DuplicateNameException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.DuplicateNameException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" />
      </containers>
    </api>
    <api id="Overload:System.Data.DuplicateNameException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.DuplicateNameException.#ctor" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.String)" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.DuplicateNameException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.DuplicateNameException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.DuplicateNameException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityCommandCompilationException">
      <topicdata group="api" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.EntityCommandCompilationException.#ctor">
          <element api="M:System.Data.EntityCommandCompilationException.#ctor" />
          <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String)" />
          <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EntityCommandCompilationException">
      <topicdata name="EntityCommandCompilationException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntityCommandCompilationException">
      <topicdata name="EntityCommandCompilationException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityCommandCompilationException" />
      <apidata name="EntityCommandCompilationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandCompilationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityCommandCompilationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityCommandCompilationException.#ctor" />
        <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String)" />
        <element api="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandCompilationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandCompilationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityCommandExecutionException">
      <topicdata group="api" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.EntityCommandExecutionException.#ctor">
          <element api="M:System.Data.EntityCommandExecutionException.#ctor" />
          <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String)" />
          <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EntityCommandExecutionException">
      <topicdata name="EntityCommandExecutionException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntityCommandExecutionException">
      <topicdata name="EntityCommandExecutionException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityCommandExecutionException" />
      <apidata name="EntityCommandExecutionException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityCommandExecutionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityCommandExecutionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityCommandExecutionException.#ctor" />
        <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String)" />
        <element api="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityCommandExecutionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityCommandExecutionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityException">
      <topicdata group="api" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EntityCommandCompilationException" ref="true" />
          <type api="T:System.Data.EntityCommandExecutionException" ref="true" />
          <type api="T:System.Data.EntitySqlException" ref="true" />
          <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
          <type api="T:System.Data.MappingException" ref="true" />
          <type api="T:System.Data.MetadataException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.EntityException.#ctor">
          <element api="M:System.Data.EntityException.#ctor" />
          <element api="M:System.Data.EntityException.#ctor(System.String)" />
          <element api="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.EntityException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.EntityException">
      <topicdata name="EntityException" group="list" subgroup="Events" typeTopicId="T:System.Data.EntityException" />
      <apidata name="EntityException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityException.#ctor" />
        <element api="M:System.Data.EntityException.#ctor(System.String)" />
        <element api="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EntityException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityKey">
      <topicdata group="api" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Data.EntityKey" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="F:System.Data.EntityKey.EntityNotValidKey" />
        <element api="F:System.Data.EntityKey.NoEntitySetKey" />
        <element api="Overload:System.Data.EntityKey.#ctor">
          <element api="M:System.Data.EntityKey.#ctor" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
          <element api="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
        </element>
        <element api="Overload:System.Data.EntityKey.Equals">
          <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
          <element api="M:System.Data.EntityKey.Equals(System.Object)" />
        </element>
        <element api="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
        <element api="M:System.Data.EntityKey.GetHashCode" />
        <element api="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.EntityKey.EntityContainerName" />
        <element api="P:System.Data.EntityKey.EntityKeyValues" />
        <element api="P:System.Data.EntityKey.EntitySetName" />
        <element api="P:System.Data.EntityKey.IsTemporary" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="IsReference">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="Overload:System.Data.EntityKey.Equals">
          <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
          <element api="M:System.Data.EntityKey.Equals(System.Object)" />
        </element>
        <element api="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)" />
        <element api="M:System.Data.EntityKey.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
    </api>
    <api id="Operators.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="P:System.Data.EntityKey.EntityContainerName" />
        <element api="P:System.Data.EntityKey.EntityKeyValues" />
        <element api="P:System.Data.EntityKey.EntitySetName" />
        <element api="P:System.Data.EntityKey.IsTemporary" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
    </api>
    <api id="Fields.T:System.Data.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Fields" typeTopicId="T:System.Data.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntityKey.#ctor" />
      <elements>
        <element api="F:System.Data.EntityKey.EntityNotValidKey" />
        <element api="F:System.Data.EntityKey.NoEntitySetKey" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityKey.#ctor" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})" />
        <element api="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityKey.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EntityKey.Equals(System.Data.EntityKey)" />
        <element api="M:System.Data.EntityKey.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityKeyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityKeyValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.EntityKeyMember" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKey.#ctor" />
      <parameters>
        <parameter name="qualifiedEntitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntityKey.EntityContainerName">
      <topicdata group="api" />
      <apidata name="EntityContainerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityContainerName" />
      <setter name="set_EntityContainerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.EntityKey.EntityKeyValues">
      <topicdata group="api" />
      <apidata name="EntityKeyValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKeyValues" />
      <setter name="set_EntityKeyValues" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.EntityKeyMember" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.EntityKey.EntityNotValidKey">
      <topicdata group="api" />
      <apidata name="EntityNotValidKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntityKey.EntitySetName">
      <topicdata group="api" />
      <apidata name="EntitySetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntitySetName" />
      <setter name="set_EntitySetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.EntityKey.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Data.EntityKey" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.EntityKey.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
      <topicdata group="api" />
      <apidata name="GetEntitySet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataWorkspace">
          <type api="T:System.Data.Metadata.Edm.MetadataWorkspace" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Metadata.Edm.EntitySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntityKey.IsTemporary">
      <topicdata group="api" />
      <apidata name="IsTemporary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTemporary" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="F:System.Data.EntityKey.NoEntitySetKey">
      <topicdata group="api" />
      <apidata name="NoEntitySetKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key1">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
        <parameter name="key2">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key1">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
        <parameter name="key2">
          <type api="T:System.Data.EntityKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityKeyMember">
      <topicdata group="api" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.EntityKeyMember.#ctor">
          <element api="M:System.Data.EntityKeyMember.#ctor" />
          <element api="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)" />
        </element>
        <element api="M:System.Data.EntityKeyMember.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.EntityKeyMember.Key" />
        <element api="P:System.Data.EntityKeyMember.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.EntityKeyMember">
      <topicdata name="EntityKeyMember" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <elements>
        <element api="M:System.Data.EntityKeyMember.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntityKeyMember">
      <topicdata name="EntityKeyMember" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntityKeyMember" />
      <apidata name="EntityKeyMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EntityKeyMember.#ctor" />
      <elements>
        <element api="P:System.Data.EntityKeyMember.Key" />
        <element api="P:System.Data.EntityKeyMember.Value" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntityKeyMember.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntityKeyMember.#ctor" />
        <element api="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKeyMember.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKeyMember.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntityKeyMember.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntityKeyMember.#ctor" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntityKeyMember.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EntityKeyMember.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntityKeyMember.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityKeyMember" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.EntitySqlException">
      <topicdata group="api" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.EntitySqlException.#ctor">
          <element api="M:System.Data.EntitySqlException.#ctor" />
          <element api="M:System.Data.EntitySqlException.#ctor(System.String)" />
          <element api="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Data.EntitySqlException.Column" />
        <element api="P:System.Data.EntitySqlException.ErrorContext" />
        <element api="P:System.Data.EntitySqlException.ErrorDescription" />
        <element api="P:System.Data.EntitySqlException.Line" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EntitySqlException">
      <topicdata name="EntitySqlException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <elements>
        <element api="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EntitySqlException">
      <topicdata name="EntitySqlException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EntitySqlException" />
      <apidata name="EntitySqlException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.EntitySqlException.#ctor" />
      <elements>
        <element api="P:System.Data.EntitySqlException.Column" />
        <element api="P:System.Data.EntitySqlException.ErrorContext" />
        <element api="P:System.Data.EntitySqlException.ErrorDescription" />
        <element api="P:System.Data.EntitySqlException.Line" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" />
      </containers>
    </api>
    <api id="Overload:System.Data.EntitySqlException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EntitySqlException.#ctor" />
        <element api="M:System.Data.EntitySqlException.#ctor(System.String)" />
        <element api="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntitySqlException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EntitySqlException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntitySqlException.Column">
      <topicdata group="api" />
      <apidata name="Column" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Column" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntitySqlException.ErrorContext">
      <topicdata group="api" />
      <apidata name="ErrorContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorContext" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.EntitySqlException.ErrorDescription">
      <topicdata group="api" />
      <apidata name="ErrorDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EntitySqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.EntitySqlException.Line">
      <topicdata group="api" />
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntitySqlException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.EntityState.Detached" />
        <element api="F:System.Data.EntityState.Unchanged" />
        <element api="F:System.Data.EntityState.Added" />
        <element api="F:System.Data.EntityState.Deleted" />
        <element api="F:System.Data.EntityState.Modified" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.BindableTypeAttribute" ref="true" />
          <assignment name="IsBindable">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.EntityState.Added">
      <topicdata group="api" notopic="" />
      <apidata name="Added" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.EntityState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.EntityState.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.EntityState.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.EntityState.Unchanged">
      <topicdata group="api" notopic="" />
      <apidata name="Unchanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EntityState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.EnumerableRowCollection">
      <topicdata group="api" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollection">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollection" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection" />
      </containers>
    </api>
    <api id="M:System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EnumerableRowCollection`1">
      <topicdata group="api" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TRow" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollection`1">
      <topicdata name="EnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollection`1" />
      <apidata name="EnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension" overload="true">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" />
      </containers>
    </api>
    <api id="M:System.Data.EnumerableRowCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.EnumerableRowCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.EnumerableRowCollectionExtensions">
      <topicdata group="api" />
      <apidata name="EnumerableRowCollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.EnumerableRowCollectionExtensions">
      <topicdata name="EnumerableRowCollectionExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.EnumerableRowCollectionExtensions" />
      <apidata name="EnumerableRowCollectionExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" />
      </containers>
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy">
      <topicdata name="ThenBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending">
      <topicdata name="ThenByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="S" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.EvaluateException">
      <topicdata group="api" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.EvaluateException.#ctor">
          <element api="M:System.Data.EvaluateException.#ctor" />
          <element api="M:System.Data.EvaluateException.#ctor(System.String)" />
          <element api="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Methods" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Properties" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.EvaluateException">
      <topicdata name="EvaluateException" group="list" subgroup="Events" typeTopicId="T:System.Data.EvaluateException" />
      <apidata name="EvaluateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.EvaluateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" />
      </containers>
    </api>
    <api id="Overload:System.Data.EvaluateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.EvaluateException.#ctor" />
        <element api="M:System.Data.EvaluateException.#ctor(System.String)" />
        <element api="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EvaluateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.EvaluateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.EvaluateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.EvaluateException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.FillErrorEventArgs">
      <topicdata group="api" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.FillErrorEventArgs.Continue" />
        <element api="P:System.Data.FillErrorEventArgs.DataTable" />
        <element api="P:System.Data.FillErrorEventArgs.Errors" />
        <element api="P:System.Data.FillErrorEventArgs.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.FillErrorEventArgs">
      <topicdata name="FillErrorEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.FillErrorEventArgs">
      <topicdata name="FillErrorEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.FillErrorEventArgs" />
      <apidata name="FillErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.FillErrorEventArgs.Continue" />
        <element api="P:System.Data.FillErrorEventArgs.DataTable" />
        <element api="P:System.Data.FillErrorEventArgs.Errors" />
        <element api="P:System.Data.FillErrorEventArgs.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="dataTable">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Continue">
      <topicdata group="api" />
      <apidata name="Continue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Continue" />
      <setter name="set_Continue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.FillErrorEventArgs.DataTable">
      <topicdata group="api" />
      <apidata name="DataTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Errors" />
      <setter name="set_Errors" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.FillErrorEventArgs.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.FillErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.FillErrorEventHandler">
      <topicdata group="api" />
      <apidata name="FillErrorEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.FillErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.ForeignKeyConstraint">
      <topicdata group="api" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Constraint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="Overload:System.Data.ForeignKeyConstraint.#ctor">
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
          <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
        </element>
        <element api="M:System.Data.ForeignKeyConstraint.Equals(System.Object)" />
        <element api="M:System.Data.ForeignKeyConstraint.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.ForeignKeyConstraint.AcceptRejectRule" />
        <element api="P:System.Data.ForeignKeyConstraint.Columns" />
        <element api="P:System.Data.ForeignKeyConstraint.DeleteRule" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedColumns" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedTable" />
        <element api="P:System.Data.ForeignKeyConstraint.Table" />
        <element api="P:System.Data.ForeignKeyConstraint.UpdateRule" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.ForeignKeyConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.ForeignKeyConstraint">
      <topicdata name="ForeignKeyConstraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Data.ForeignKeyConstraint.Equals(System.Object)" />
        <element api="M:System.Data.ForeignKeyConstraint.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ForeignKeyConstraint">
      <topicdata name="ForeignKeyConstraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.ForeignKeyConstraint" />
      <apidata name="ForeignKeyConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.ForeignKeyConstraint.AcceptRejectRule" />
        <element api="P:System.Data.ForeignKeyConstraint.Columns" />
        <element api="P:System.Data.ForeignKeyConstraint.DeleteRule" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedColumns" />
        <element api="P:System.Data.ForeignKeyConstraint.RelatedTable" />
        <element api="P:System.Data.ForeignKeyConstraint.Table" />
        <element api="P:System.Data.ForeignKeyConstraint.UpdateRule" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" />
      </containers>
    </api>
    <api id="Overload:System.Data.ForeignKeyConstraint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
        <element api="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="childColumn">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="acceptRejectRule">
          <type api="T:System.Data.AcceptRejectRule" ref="false" />
        </parameter>
        <parameter name="deleteRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
        <parameter name="updateRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ForeignKeyConstraint.#ctor" />
      <parameters>
        <parameter name="constraintName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parentColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="childColumnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="acceptRejectRule">
          <type api="T:System.Data.AcceptRejectRule" ref="false" />
        </parameter>
        <parameter name="deleteRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
        <parameter name="updateRule">
          <type api="T:System.Data.Rule" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <topicdata group="api" />
      <apidata name="AcceptRejectRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptRejectRule" />
      <setter name="set_AcceptRejectRule" />
      <returns>
        <type api="T:System.Data.AcceptRejectRule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.AcceptRejectRule" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <topicdata group="api" />
      <apidata name="DeleteRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteRule" />
      <setter name="set_DeleteRule" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.Rule" ref="false" />
            <enumValue>
              <field name="Cascade" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <topicdata group="api" />
      <apidata name="RelatedColumns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelatedColumns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <topicdata group="api" />
      <apidata name="RelatedTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelatedTable" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Constraint.Table">
          <type api="T:System.Data.Constraint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <topicdata group="api" />
      <apidata name="UpdateRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateRule" />
      <setter name="set_UpdateRule" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ForeignKeyConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Data.Rule" ref="false" />
            <enumValue>
              <field name="Cascade" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.IColumnMapping">
      <topicdata group="api" />
      <apidata name="IColumnMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Common.DataColumnMapping" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.IColumnMapping.DataSetColumn" />
        <element api="P:System.Data.IColumnMapping.SourceColumn" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IColumnMapping">
      <topicdata name="IColumnMapping" group="list" subgroup="Properties" typeTopicId="T:System.Data.IColumnMapping" />
      <apidata name="IColumnMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IColumnMapping.DataSetColumn" />
        <element api="P:System.Data.IColumnMapping.SourceColumn" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" />
      </containers>
    </api>
    <api id="P:System.Data.IColumnMapping.DataSetColumn">
      <topicdata group="api" />
      <apidata name="DataSetColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetColumn" />
      <setter name="set_DataSetColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IColumnMapping.SourceColumn">
      <topicdata group="api" />
      <apidata name="SourceColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceColumn" />
      <setter name="set_SourceColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IColumnMappingCollection">
      <topicdata group="api" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DataColumnMappingCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IColumnMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
        </element>
        <element api="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)" />
        <element api="Overload:System.Data.IColumnMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IColumnMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IColumnMappingCollection">
      <topicdata name="IColumnMappingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IColumnMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
        </element>
        <element api="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)" />
        <element api="Overload:System.Data.IColumnMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.IColumnMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IColumnMappingCollection">
      <topicdata name="IColumnMappingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IColumnMappingCollection" />
      <apidata name="IColumnMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IColumnMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.IColumnMappingCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.IColumnMappingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IColumnMappingCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataSetColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <topicdata group="api" />
      <apidata name="GetByDataSetColumn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSetColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IColumnMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IColumnMappingCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceColumnName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDataAdapter">
      <topicdata group="api" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
        <type api="T:System.Data.SqlClient.SqlDataAdapter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbDataAdapter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcDataAdapter" ref="true" />
        <type api="T:System.Data.Common.DataAdapter" ref="true" />
        <type api="T:System.Data.Common.DbDataAdapter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleDataAdapter" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDataAdapter">
      <topicdata name="IDataAdapter" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDataAdapter">
      <topicdata name="IDataAdapter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataAdapter" />
      <apidata name="IDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" />
      </containers>
    </api>
    <api id="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Fill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <topicdata group="api" />
      <apidata name="FillSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="schemaType">
          <type api="T:System.Data.SchemaType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataTable" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataAdapter.GetFillParameters">
      <topicdata group="api" />
      <apidata name="GetFillParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.IDataParameter" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataAdapter.MissingMappingAction">
      <topicdata group="api" />
      <apidata name="MissingMappingAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MissingMappingAction" />
      <setter name="set_MissingMappingAction" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataAdapter.MissingSchemaAction">
      <topicdata group="api" />
      <apidata name="MissingSchemaAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MissingSchemaAction" />
      <setter name="set_MissingSchemaAction" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataAdapter.TableMappings">
      <topicdata group="api" />
      <apidata name="TableMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TableMappings" />
      <returns>
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDataParameter">
      <topicdata group="api" />
      <apidata name="IDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.IDbDataParameter" ref="true" />
        <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbParameter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcParameter" ref="true" />
        <type api="T:System.Data.Common.DbParameter" ref="true" />
        <type api="T:System.Data.EntityClient.EntityParameter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleParameter" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDataParameter">
      <topicdata name="IDataParameter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataParameter" />
      <apidata name="IDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.DbType">
      <topicdata group="api" />
      <apidata name="DbType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DbType" />
      <setter name="set_DbType" />
      <returns>
        <type api="T:System.Data.DbType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.ParameterName">
      <topicdata group="api" />
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterName" />
      <setter name="set_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.SourceColumn">
      <topicdata group="api" />
      <apidata name="SourceColumn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceColumn" />
      <setter name="set_SourceColumn" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.SourceVersion">
      <topicdata group="api" />
      <apidata name="SourceVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceVersion" />
      <setter name="set_SourceVersion" />
      <returns>
        <type api="T:System.Data.DataRowVersion" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameter.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDataParameterCollection">
      <topicdata group="api" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DbParameterCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IDataParameterCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
        </element>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IDataParameterCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDataParameterCollection">
      <topicdata name="IDataParameterCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.IDataParameterCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.IDataParameterCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDataParameterCollection">
      <topicdata name="IDataParameterCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataParameterCollection" />
      <apidata name="IDataParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.IDataParameterCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.IDataParameterCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.IDataParameterCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.IDataParameterCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDataParameterCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.IDataParameterCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataParameterCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataParameterCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDataReader">
      <topicdata group="api" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDataReader.Close" />
        <element api="M:System.Data.IDataReader.GetSchemaTable" />
        <element api="M:System.Data.IDataReader.NextResult" />
        <element api="M:System.Data.IDataReader.Read" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.Data.IDataReader.Depth" />
        <element api="P:System.Data.IDataReader.IsClosed" />
        <element api="P:System.Data.IDataReader.RecordsAffected" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataReader.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDataReader">
      <topicdata name="IDataReader" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataReader.Close" />
        <element api="M:System.Data.IDataReader.GetSchemaTable" />
        <element api="M:System.Data.IDataReader.NextResult" />
        <element api="M:System.Data.IDataReader.Read" />
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDataReader">
      <topicdata name="IDataReader" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataReader" />
      <apidata name="IDataReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataReader.Depth" />
        <element api="P:System.Data.IDataReader.IsClosed" />
        <element api="P:System.Data.IDataReader.RecordsAffected" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataReader.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" />
      </containers>
    </api>
    <api id="M:System.Data.IDataReader.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataReader.Depth">
      <topicdata group="api" />
      <apidata name="Depth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Depth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataReader.GetSchemaTable">
      <topicdata group="api" />
      <apidata name="GetSchemaTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataReader.IsClosed">
      <topicdata group="api" />
      <apidata name="IsClosed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsClosed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataReader.NextResult">
      <topicdata group="api" />
      <apidata name="NextResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataReader.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataReader.RecordsAffected">
      <topicdata group="api" />
      <apidata name="RecordsAffected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RecordsAffected" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDataRecord">
      <topicdata group="api" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.SqlServer.Server.SqlDataRecord" ref="true" />
        <type api="T:System.Data.IDataReader" ref="true" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
        <type api="T:System.Data.SqlClient.SqlDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
        <type api="T:System.Data.Common.DbDataRecord" ref="true" />
        <type api="T:System.Data.EntityClient.EntityDataReader" ref="true" />
        <type api="T:System.Data.Objects.DbUpdatableDataRecord" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDataRecord">
      <topicdata name="IDataRecord" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDataRecord">
      <topicdata name="IDataRecord" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDataRecord" />
      <apidata name="IDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDataRecord.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
        <element api="P:System.Data.IDataRecord.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataRecord.FieldCount">
      <topicdata group="api" />
      <apidata name="FieldCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_FieldCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fieldOffset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferoffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fieldoffset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="bufferoffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetData(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDouble" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFieldType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFloat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetGuid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt16" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt32" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetInt64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <topicdata group="api" />
      <apidata name="GetOrdinal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetString(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsDBNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataRecord.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataRecord.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDataRecord.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.IDataRecord.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDataRecord" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDbCommand">
      <topicdata group="api" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.OleDb.OleDbCommand" ref="true" />
        <type api="T:System.Data.Common.DbCommand" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDbCommand.Cancel" />
        <element api="M:System.Data.IDbCommand.CreateParameter" />
        <element api="M:System.Data.IDbCommand.ExecuteNonQuery" />
        <element api="Overload:System.Data.IDbCommand.ExecuteReader">
          <element api="M:System.Data.IDbCommand.ExecuteReader" />
          <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
        </element>
        <element api="M:System.Data.IDbCommand.ExecuteScalar" />
        <element api="M:System.Data.IDbCommand.Prepare" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.Data.IDbCommand.CommandText" />
        <element api="P:System.Data.IDbCommand.CommandTimeout" />
        <element api="P:System.Data.IDbCommand.CommandType" />
        <element api="P:System.Data.IDbCommand.Connection" />
        <element api="P:System.Data.IDbCommand.Parameters" />
        <element api="P:System.Data.IDbCommand.Transaction" />
        <element api="P:System.Data.IDbCommand.UpdatedRowSource" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDbCommand">
      <topicdata name="IDbCommand" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDbCommand.Cancel" />
        <element api="M:System.Data.IDbCommand.CreateParameter" />
        <element api="M:System.Data.IDbCommand.ExecuteNonQuery" />
        <element api="Overload:System.Data.IDbCommand.ExecuteReader">
          <element api="M:System.Data.IDbCommand.ExecuteReader" />
          <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
        </element>
        <element api="M:System.Data.IDbCommand.ExecuteScalar" />
        <element api="M:System.Data.IDbCommand.Prepare" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDbCommand">
      <topicdata name="IDbCommand" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbCommand" />
      <apidata name="IDbCommand" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbCommand.CommandText" />
        <element api="P:System.Data.IDbCommand.CommandTimeout" />
        <element api="P:System.Data.IDbCommand.CommandType" />
        <element api="P:System.Data.IDbCommand.Connection" />
        <element api="P:System.Data.IDbCommand.Parameters" />
        <element api="P:System.Data.IDbCommand.Transaction" />
        <element api="P:System.Data.IDbCommand.UpdatedRowSource" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDbCommand.ExecuteReader">
      <topicdata name="ExecuteReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.IDbCommand.ExecuteReader" />
        <element api="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.CommandText">
      <topicdata group="api" />
      <apidata name="CommandText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandText" />
      <setter name="set_CommandText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.CommandTimeout">
      <topicdata group="api" />
      <apidata name="CommandTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandTimeout" />
      <setter name="set_CommandTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.CommandType">
      <topicdata group="api" />
      <apidata name="CommandType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandType" />
      <setter name="set_CommandType" />
      <returns>
        <type api="T:System.Data.CommandType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Connection" />
      <setter name="set_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.CreateParameter">
      <topicdata group="api" />
      <apidata name="CreateParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteNonQuery">
      <topicdata group="api" />
      <apidata name="ExecuteNonQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteReader">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbCommand.ExecuteReader" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <topicdata group="api" />
      <apidata name="ExecuteReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbCommand.ExecuteReader" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="behavior">
          <type api="T:System.Data.CommandBehavior" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.ExecuteScalar">
      <topicdata group="api" />
      <apidata name="ExecuteScalar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Data.IDataParameterCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbCommand.Prepare">
      <topicdata group="api" />
      <apidata name="Prepare" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.Transaction">
      <topicdata group="api" />
      <apidata name="Transaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Transaction" />
      <setter name="set_Transaction" />
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbCommand.UpdatedRowSource">
      <topicdata group="api" />
      <apidata name="UpdatedRowSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdatedRowSource" />
      <setter name="set_UpdatedRowSource" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbCommand" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDbConnection">
      <topicdata group="api" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.OleDb.OleDbConnection" ref="true" />
        <type api="T:System.Data.Common.DbConnection" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.Data.IDbConnection.BeginTransaction">
          <element api="M:System.Data.IDbConnection.BeginTransaction" />
          <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
        </element>
        <element api="M:System.Data.IDbConnection.ChangeDatabase(System.String)" />
        <element api="M:System.Data.IDbConnection.Close" />
        <element api="M:System.Data.IDbConnection.CreateCommand" />
        <element api="M:System.Data.IDbConnection.Open" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.Data.IDbConnection.ConnectionString" />
        <element api="P:System.Data.IDbConnection.ConnectionTimeout" />
        <element api="P:System.Data.IDbConnection.Database" />
        <element api="P:System.Data.IDbConnection.State" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDbConnection">
      <topicdata name="IDbConnection" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.IDbConnection.BeginTransaction">
          <element api="M:System.Data.IDbConnection.BeginTransaction" />
          <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
        </element>
        <element api="M:System.Data.IDbConnection.ChangeDatabase(System.String)" />
        <element api="M:System.Data.IDbConnection.Close" />
        <element api="M:System.Data.IDbConnection.CreateCommand" />
        <element api="M:System.Data.IDbConnection.Open" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDbConnection">
      <topicdata name="IDbConnection" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbConnection" />
      <apidata name="IDbConnection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbConnection.ConnectionString" />
        <element api="P:System.Data.IDbConnection.ConnectionTimeout" />
        <element api="P:System.Data.IDbConnection.Database" />
        <element api="P:System.Data.IDbConnection.State" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" />
      </containers>
    </api>
    <api id="Overload:System.Data.IDbConnection.BeginTransaction">
      <topicdata name="BeginTransaction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.IDbConnection.BeginTransaction" />
        <element api="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.BeginTransaction">
      <topicdata group="api" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbConnection.BeginTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <topicdata group="api" />
      <apidata name="BeginTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.IDbConnection.BeginTransaction" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="il">
          <type api="T:System.Data.IsolationLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <topicdata group="api" />
      <apidata name="ChangeDatabase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="databaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbConnection.ConnectionString">
      <topicdata group="api" />
      <apidata name="ConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionString" />
      <setter name="set_ConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbConnection.ConnectionTimeout">
      <topicdata group="api" />
      <apidata name="ConnectionTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConnectionTimeout" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.CreateCommand">
      <topicdata group="api" />
      <apidata name="CreateCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbConnection.Database">
      <topicdata group="api" />
      <apidata name="Database" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Database" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbConnection.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbConnection.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbConnection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDbDataAdapter">
      <topicdata group="api" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataAdapter" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlDataAdapter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbDataAdapter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcDataAdapter" ref="true" />
        <type api="T:System.Data.Common.DbDataAdapter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleDataAdapter" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
        <element api="P:System.Data.IDbDataAdapter.DeleteCommand" />
        <element api="P:System.Data.IDbDataAdapter.InsertCommand" />
        <element api="P:System.Data.IDbDataAdapter.SelectCommand" />
        <element api="P:System.Data.IDbDataAdapter.UpdateCommand" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDbDataAdapter">
      <topicdata name="IDbDataAdapter" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />
        <element api="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
        <element api="M:System.Data.IDataAdapter.GetFillParameters" />
        <element api="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDbDataAdapter">
      <topicdata name="IDbDataAdapter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbDataAdapter" />
      <apidata name="IDbDataAdapter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataAdapter.MissingMappingAction" />
        <element api="P:System.Data.IDataAdapter.MissingSchemaAction" />
        <element api="P:System.Data.IDataAdapter.TableMappings" />
        <element api="P:System.Data.IDbDataAdapter.DeleteCommand" />
        <element api="P:System.Data.IDbDataAdapter.InsertCommand" />
        <element api="P:System.Data.IDbDataAdapter.SelectCommand" />
        <element api="P:System.Data.IDbDataAdapter.UpdateCommand" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataAdapter.DeleteCommand">
      <topicdata group="api" />
      <apidata name="DeleteCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DeleteCommand" />
      <setter name="set_DeleteCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataAdapter.InsertCommand">
      <topicdata group="api" />
      <apidata name="InsertCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InsertCommand" />
      <setter name="set_InsertCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataAdapter.SelectCommand">
      <topicdata group="api" />
      <apidata name="SelectCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SelectCommand" />
      <setter name="set_SelectCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataAdapter.UpdateCommand">
      <topicdata group="api" />
      <apidata name="UpdateCommand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateCommand" />
      <setter name="set_UpdateCommand" />
      <returns>
        <type api="T:System.Data.IDbCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataAdapter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDbDataParameter">
      <topicdata group="api" />
      <apidata name="IDbDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataParameter" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.SqlClient.SqlParameter" ref="true" />
        <type api="T:System.Data.OleDb.OleDbParameter" ref="true" />
        <type api="T:System.Data.Odbc.OdbcParameter" ref="true" />
        <type api="T:System.Data.Common.DbParameter" ref="true" />
        <type api="T:System.Data.EntityClient.EntityParameter" ref="true" />
        <type api="T:System.Data.OracleClient.OracleParameter" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
        <element api="P:System.Data.IDbDataParameter.Precision" />
        <element api="P:System.Data.IDbDataParameter.Scale" />
        <element api="P:System.Data.IDbDataParameter.Size" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDbDataParameter">
      <topicdata name="IDbDataParameter" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbDataParameter" />
      <apidata name="IDbDataParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataParameter.DbType" />
        <element api="P:System.Data.IDataParameter.Direction" />
        <element api="P:System.Data.IDataParameter.IsNullable" />
        <element api="P:System.Data.IDataParameter.ParameterName" />
        <element api="P:System.Data.IDataParameter.SourceColumn" />
        <element api="P:System.Data.IDataParameter.SourceVersion" />
        <element api="P:System.Data.IDataParameter.Value" />
        <element api="P:System.Data.IDbDataParameter.Precision" />
        <element api="P:System.Data.IDbDataParameter.Scale" />
        <element api="P:System.Data.IDbDataParameter.Size" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataParameter.Precision">
      <topicdata group="api" />
      <apidata name="Precision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Precision" />
      <setter name="set_Precision" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataParameter.Scale">
      <topicdata group="api" />
      <apidata name="Scale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Scale" />
      <setter name="set_Scale" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbDataParameter.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbDataParameter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IDbTransaction">
      <topicdata group="api" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DbTransaction" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDbTransaction.Commit" />
        <element api="M:System.Data.IDbTransaction.Rollback" />
        <element api="M:System.IDisposable.Dispose" />
        <element api="P:System.Data.IDbTransaction.Connection" />
        <element api="P:System.Data.IDbTransaction.IsolationLevel" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IDbTransaction">
      <topicdata name="IDbTransaction" group="list" subgroup="Methods" typeTopicId="T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDbTransaction.Commit" />
        <element api="M:System.Data.IDbTransaction.Rollback" />
        <element api="M:System.IDisposable.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IDbTransaction">
      <topicdata name="IDbTransaction" group="list" subgroup="Properties" typeTopicId="T:System.Data.IDbTransaction" />
      <apidata name="IDbTransaction" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDbTransaction.Connection" />
        <element api="P:System.Data.IDbTransaction.IsolationLevel" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" />
      </containers>
    </api>
    <api id="M:System.Data.IDbTransaction.Commit">
      <topicdata group="api" />
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbTransaction.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Data.IDbConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.IDbTransaction.IsolationLevel">
      <topicdata group="api" />
      <apidata name="IsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsolationLevel" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IDbTransaction.Rollback">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IDbTransaction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IExtendedDataRecord">
      <topicdata group="api" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.IDataRecord" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.EntityClient.EntityDataReader" ref="true" />
        <type api="T:System.Data.Objects.DbUpdatableDataRecord" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)" />
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IExtendedDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
        <element api="P:System.Data.IExtendedDataRecord.DataRecordInfo" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.IExtendedDataRecord">
      <topicdata name="IExtendedDataRecord" group="list" subgroup="Methods" typeTopicId="T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.IDataRecord.GetBoolean(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetByte(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChar(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetData(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDateTime(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDecimal(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetDouble(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFieldType(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetFloat(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetGuid(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt16(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt32(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetInt64(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetName(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetOrdinal(System.String)" />
        <element api="M:System.Data.IDataRecord.GetString(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValue(System.Int32)" />
        <element api="M:System.Data.IDataRecord.GetValues(System.Object[])" />
        <element api="M:System.Data.IDataRecord.IsDBNull(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)" />
        <element api="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.IExtendedDataRecord">
      <topicdata name="IExtendedDataRecord" group="list" subgroup="Properties" typeTopicId="T:System.Data.IExtendedDataRecord" />
      <apidata name="IExtendedDataRecord" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.IDataRecord.FieldCount" />
        <element api="Overload:System.Data.IExtendedDataRecord.Item">
          <element api="P:System.Data.IDataRecord.Item(System.Int32)" />
          <element api="P:System.Data.IDataRecord.Item(System.String)" />
        </element>
        <element api="P:System.Data.IExtendedDataRecord.DataRecordInfo" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" />
      </containers>
    </api>
    <api id="P:System.Data.IExtendedDataRecord.DataRecordInfo">
      <topicdata group="api" />
      <apidata name="DataRecordInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataRecordInfo" />
      <returns>
        <type api="T:System.Data.Common.DataRecordInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IExtendedDataRecord.GetDataReader(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataReader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.DbDataReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.IExtendedDataRecord.GetDataRecord(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetDataRecord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Common.DbDataRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IExtendedDataRecord" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.InRowChangingEventException">
      <topicdata group="api" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.InRowChangingEventException.#ctor">
          <element api="M:System.Data.InRowChangingEventException.#ctor" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.String)" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.InRowChangingEventException">
      <topicdata name="InRowChangingEventException" group="list" subgroup="Events" typeTopicId="T:System.Data.InRowChangingEventException" />
      <apidata name="InRowChangingEventException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InRowChangingEventException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" />
      </containers>
    </api>
    <api id="Overload:System.Data.InRowChangingEventException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InRowChangingEventException.#ctor" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.String)" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InRowChangingEventException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InRowChangingEventException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InRowChangingEventException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.InternalDataCollectionBase">
      <topicdata group="api" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.ConstraintCollection" ref="true" />
          <type api="T:System.Data.DataColumnCollection" ref="true" />
          <type api="T:System.Data.DataRelationCollection" ref="true" />
          <type api="T:System.Data.DataRowCollection" ref="true" />
          <type api="T:System.Data.DataTableCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.InternalDataCollectionBase.#ctor" />
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.InternalDataCollectionBase">
      <topicdata name="InternalDataCollectionBase" group="list" subgroup="Methods" typeTopicId="T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Data.InternalDataCollectionBase.GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.InternalDataCollectionBase">
      <topicdata name="InternalDataCollectionBase" group="list" subgroup="Properties" typeTopicId="T:System.Data.InternalDataCollectionBase" />
      <apidata name="InternalDataCollectionBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.InternalDataCollectionBase.#ctor" />
      <elements>
        <element api="P:System.Data.InternalDataCollectionBase.Count" />
        <element api="P:System.Data.InternalDataCollectionBase.IsReadOnly" />
        <element api="P:System.Data.InternalDataCollectionBase.IsSynchronized" />
        <element api="P:System.Data.InternalDataCollectionBase.List" />
        <element api="P:System.Data.InternalDataCollectionBase.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" />
      </containers>
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ar">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.List">
      <topicdata group="api" />
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_List" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InternalDataCollectionBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.InvalidCommandTreeException">
      <topicdata group="api" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.InvalidCommandTreeException.#ctor">
          <element api="M:System.Data.InvalidCommandTreeException.#ctor" />
          <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.InvalidCommandTreeException">
      <topicdata name="InvalidCommandTreeException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.InvalidCommandTreeException">
      <topicdata name="InvalidCommandTreeException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidCommandTreeException" />
      <apidata name="InvalidCommandTreeException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.InvalidCommandTreeException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" />
      </containers>
    </api>
    <api id="Overload:System.Data.InvalidCommandTreeException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidCommandTreeException.#ctor" />
        <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidCommandTreeException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidCommandTreeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidCommandTreeException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.InvalidConstraintException">
      <topicdata group="api" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.InvalidConstraintException.#ctor">
          <element api="M:System.Data.InvalidConstraintException.#ctor" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.InvalidConstraintException">
      <topicdata name="InvalidConstraintException" group="list" subgroup="Events" typeTopicId="T:System.Data.InvalidConstraintException" />
      <apidata name="InvalidConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidConstraintException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" />
      </containers>
    </api>
    <api id="Overload:System.Data.InvalidConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidConstraintException.#ctor" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidConstraintException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.InvalidExpressionException">
      <topicdata group="api" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.EvaluateException" ref="true" />
          <type api="T:System.Data.SyntaxErrorException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.InvalidExpressionException.#ctor">
          <element api="M:System.Data.InvalidExpressionException.#ctor" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.String)" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Methods" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Properties" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.InvalidExpressionException">
      <topicdata name="InvalidExpressionException" group="list" subgroup="Events" typeTopicId="T:System.Data.InvalidExpressionException" />
      <apidata name="InvalidExpressionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.InvalidExpressionException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" />
      </containers>
    </api>
    <api id="Overload:System.Data.InvalidExpressionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.InvalidExpressionException.#ctor" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.String)" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.InvalidExpressionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.InvalidExpressionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.InvalidExpressionException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.IsolationLevel">
      <topicdata group="api" />
      <apidata name="IsolationLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.IsolationLevel.Unspecified" />
        <element api="F:System.Data.IsolationLevel.Chaos" />
        <element api="F:System.Data.IsolationLevel.ReadUncommitted" />
        <element api="F:System.Data.IsolationLevel.ReadCommitted" />
        <element api="F:System.Data.IsolationLevel.RepeatableRead" />
        <element api="F:System.Data.IsolationLevel.Serializable" />
        <element api="F:System.Data.IsolationLevel.Snapshot" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.Chaos">
      <topicdata group="api" notopic="" />
      <apidata name="Chaos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.ReadCommitted">
      <topicdata group="api" notopic="" />
      <apidata name="ReadCommitted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.ReadUncommitted">
      <topicdata group="api" notopic="" />
      <apidata name="ReadUncommitted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.RepeatableRead">
      <topicdata group="api" notopic="" />
      <apidata name="RepeatableRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.Serializable">
      <topicdata group="api" notopic="" />
      <apidata name="Serializable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.Snapshot">
      <topicdata group="api" notopic="" />
      <apidata name="Snapshot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.IsolationLevel.Unspecified">
      <topicdata group="api" notopic="" />
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.IsolationLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.ITableMapping">
      <topicdata group="api" />
      <apidata name="ITableMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Common.DataTableMapping" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.ITableMapping.ColumnMappings" />
        <element api="P:System.Data.ITableMapping.DataSetTable" />
        <element api="P:System.Data.ITableMapping.SourceTable" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ITableMapping">
      <topicdata name="ITableMapping" group="list" subgroup="Properties" typeTopicId="T:System.Data.ITableMapping" />
      <apidata name="ITableMapping" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.ITableMapping.ColumnMappings" />
        <element api="P:System.Data.ITableMapping.DataSetTable" />
        <element api="P:System.Data.ITableMapping.SourceTable" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" />
      </containers>
    </api>
    <api id="P:System.Data.ITableMapping.ColumnMappings">
      <topicdata group="api" />
      <apidata name="ColumnMappings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ColumnMappings" />
      <returns>
        <type api="T:System.Data.IColumnMappingCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ITableMapping.DataSetTable">
      <topicdata group="api" />
      <apidata name="DataSetTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DataSetTable" />
      <setter name="set_DataSetTable" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ITableMapping.SourceTable">
      <topicdata group="api" />
      <apidata name="SourceTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceTable" />
      <setter name="set_SourceTable" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ITableMappingCollection">
      <topicdata group="api" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.Data.Common.DataTableMappingCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.ITableMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
        </element>
        <element api="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)" />
        <element api="Overload:System.Data.ITableMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
        </element>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.ITableMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.ITableMappingCollection">
      <topicdata name="ITableMappingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
        <element api="M:System.Collections.IList.Clear" />
        <element api="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.IList.Remove(System.Object)" />
        <element api="Overload:System.Data.ITableMappingCollection.Add">
          <element api="M:System.Collections.IList.Add(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.Contains">
          <element api="M:System.Collections.IList.Contains(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
        </element>
        <element api="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)" />
        <element api="Overload:System.Data.ITableMappingCollection.IndexOf">
          <element api="M:System.Collections.IList.IndexOf(System.Object)" />
          <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
        </element>
        <element api="Overload:System.Data.ITableMappingCollection.RemoveAt">
          <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
          <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ITableMappingCollection">
      <topicdata name="ITableMappingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.ITableMappingCollection" />
      <apidata name="ITableMappingCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="P:System.Collections.IList.IsFixedSize" />
        <element api="P:System.Collections.IList.IsReadOnly" />
        <element api="Overload:System.Data.ITableMappingCollection.Item">
          <element api="P:System.Collections.IList.Item(System.Int32)" />
          <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Add(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.Contains(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.Contains(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.IndexOf(System.Object)" />
        <element api="M:System.Data.ITableMappingCollection.IndexOf(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.IList.Item(System.Int32)" />
        <element api="P:System.Data.ITableMappingCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.ITableMappingCollection.RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.IList.RemoveAt(System.Int32)" />
        <element api="M:System.Data.ITableMappingCollection.RemoveAt(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dataSetTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.ITableMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Contains" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <topicdata group="api" />
      <apidata name="GetByDataSetTable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataSetTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.ITableMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.IndexOf" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.ITableMappingCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.Item" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.ITableMappingCollection.RemoveAt" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sourceTableName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ITableMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.KeyRestrictionBehavior">
      <topicdata group="api" />
      <apidata name="KeyRestrictionBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Data.KeyRestrictionBehavior.AllowOnly" />
        <element api="F:System.Data.KeyRestrictionBehavior.PreventUsage" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.KeyRestrictionBehavior.AllowOnly">
      <topicdata group="api" notopic="" />
      <apidata name="AllowOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.KeyRestrictionBehavior.PreventUsage">
      <topicdata group="api" notopic="" />
      <apidata name="PreventUsage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.KeyRestrictionBehavior" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.LoadOption">
      <topicdata group="api" />
      <apidata name="LoadOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.LoadOption.OverwriteChanges" />
        <element api="F:System.Data.LoadOption.PreserveChanges" />
        <element api="F:System.Data.LoadOption.Upsert" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.LoadOption.OverwriteChanges">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.LoadOption.PreserveChanges">
      <topicdata group="api" notopic="" />
      <apidata name="PreserveChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.LoadOption.Upsert">
      <topicdata group="api" notopic="" />
      <apidata name="Upsert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.LoadOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.LoadOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.MappingException">
      <topicdata group="api" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.MappingException.#ctor">
          <element api="M:System.Data.MappingException.#ctor" />
          <element api="M:System.Data.MappingException.#ctor(System.String)" />
          <element api="M:System.Data.MappingException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.MappingException">
      <topicdata name="MappingException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.MappingException">
      <topicdata name="MappingException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MappingException" />
      <apidata name="MappingException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MappingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" />
      </containers>
    </api>
    <api id="Overload:System.Data.MappingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MappingException.#ctor" />
        <element api="M:System.Data.MappingException.#ctor(System.String)" />
        <element api="M:System.Data.MappingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MappingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MappingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MappingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MappingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.MappingType">
      <topicdata group="api" />
      <apidata name="MappingType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Data.MappingType.Element" />
        <element api="F:System.Data.MappingType.Attribute" />
        <element api="F:System.Data.MappingType.SimpleContent" />
        <element api="F:System.Data.MappingType.Hidden" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.MappingType.Attribute">
      <topicdata group="api" notopic="" />
      <apidata name="Attribute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MappingType.Element">
      <topicdata group="api" notopic="" />
      <apidata name="Element" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MappingType.Hidden">
      <topicdata group="api" notopic="" />
      <apidata name="Hidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MappingType.SimpleContent">
      <topicdata group="api" notopic="" />
      <apidata name="SimpleContent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MappingType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MappingType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.MergeFailedEventArgs">
      <topicdata group="api" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.MergeFailedEventArgs.Conflict" />
        <element api="P:System.Data.MergeFailedEventArgs.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.MergeFailedEventArgs">
      <topicdata name="MergeFailedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.MergeFailedEventArgs">
      <topicdata name="MergeFailedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.MergeFailedEventArgs" />
      <apidata name="MergeFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.MergeFailedEventArgs.Conflict" />
        <element api="P:System.Data.MergeFailedEventArgs.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Data.DataTable" ref="true" />
        </parameter>
        <parameter name="conflict">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.MergeFailedEventArgs.Conflict">
      <topicdata group="api" />
      <apidata name="Conflict" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Conflict" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.MergeFailedEventArgs.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.MergeFailedEventHandler">
      <topicdata group="api" />
      <apidata name="MergeFailedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.MergeFailedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.MetadataException">
      <topicdata group="api" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.MetadataException.#ctor">
          <element api="M:System.Data.MetadataException.#ctor" />
          <element api="M:System.Data.MetadataException.#ctor(System.String)" />
          <element api="M:System.Data.MetadataException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.MetadataException">
      <topicdata name="MetadataException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.MetadataException">
      <topicdata name="MetadataException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MetadataException" />
      <apidata name="MetadataException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.MetadataException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" />
      </containers>
    </api>
    <api id="Overload:System.Data.MetadataException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MetadataException.#ctor" />
        <element api="M:System.Data.MetadataException.#ctor(System.String)" />
        <element api="M:System.Data.MetadataException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MetadataException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MetadataException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MetadataException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MetadataException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MetadataException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.MissingMappingAction">
      <topicdata group="api" />
      <apidata name="MissingMappingAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.MissingMappingAction.Passthrough" />
        <element api="F:System.Data.MissingMappingAction.Ignore" />
        <element api="F:System.Data.MissingMappingAction.Error" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.MissingMappingAction.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MissingMappingAction.Ignore">
      <topicdata group="api" notopic="" />
      <apidata name="Ignore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MissingMappingAction.Passthrough">
      <topicdata group="api" notopic="" />
      <apidata name="Passthrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingMappingAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.MissingPrimaryKeyException">
      <topicdata group="api" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.MissingPrimaryKeyException.#ctor">
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.MissingPrimaryKeyException">
      <topicdata name="MissingPrimaryKeyException" group="list" subgroup="Events" typeTopicId="T:System.Data.MissingPrimaryKeyException" />
      <apidata name="MissingPrimaryKeyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.MissingPrimaryKeyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" />
      </containers>
    </api>
    <api id="Overload:System.Data.MissingPrimaryKeyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.MissingPrimaryKeyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.MissingPrimaryKeyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingPrimaryKeyException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.MissingSchemaAction">
      <topicdata group="api" />
      <apidata name="MissingSchemaAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.MissingSchemaAction.Add" />
        <element api="F:System.Data.MissingSchemaAction.Ignore" />
        <element api="F:System.Data.MissingSchemaAction.Error" />
        <element api="F:System.Data.MissingSchemaAction.AddWithKey" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.MissingSchemaAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MissingSchemaAction.AddWithKey">
      <topicdata group="api" notopic="" />
      <apidata name="AddWithKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MissingSchemaAction.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.MissingSchemaAction.Ignore">
      <topicdata group="api" notopic="" />
      <apidata name="Ignore" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.MissingSchemaAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.NoNullAllowedException">
      <topicdata group="api" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.NoNullAllowedException.#ctor">
          <element api="M:System.Data.NoNullAllowedException.#ctor" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.String)" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Methods" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Properties" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.NoNullAllowedException">
      <topicdata name="NoNullAllowedException" group="list" subgroup="Events" typeTopicId="T:System.Data.NoNullAllowedException" />
      <apidata name="NoNullAllowedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.NoNullAllowedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" />
      </containers>
    </api>
    <api id="Overload:System.Data.NoNullAllowedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.NoNullAllowedException.#ctor" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.String)" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.NoNullAllowedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.NoNullAllowedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.NoNullAllowedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ObjectNotFoundException">
      <topicdata group="api" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.ObjectNotFoundException.#ctor">
          <element api="M:System.Data.ObjectNotFoundException.#ctor" />
          <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String)" />
          <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.ObjectNotFoundException">
      <topicdata name="ObjectNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ObjectNotFoundException">
      <topicdata name="ObjectNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ObjectNotFoundException" />
      <apidata name="ObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ObjectNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.Data.ObjectNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ObjectNotFoundException.#ctor" />
        <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String)" />
        <element api="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ObjectNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.OperationAbortedException">
      <topicdata group="api" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.OperationAbortedException">
      <topicdata name="OperationAbortedException" group="list" subgroup="Methods" typeTopicId="T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OperationAbortedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.OperationAbortedException">
      <topicdata name="OperationAbortedException" group="list" subgroup="Properties" typeTopicId="T:System.Data.OperationAbortedException" />
      <apidata name="OperationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OperationAbortedException" />
      </containers>
    </api>
    <api id="T:System.Data.OptimisticConcurrencyException">
      <topicdata group="api" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.UpdateException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.OptimisticConcurrencyException.#ctor">
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Data.UpdateException.StateEntries" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.OptimisticConcurrencyException">
      <topicdata name="OptimisticConcurrencyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.OptimisticConcurrencyException">
      <topicdata name="OptimisticConcurrencyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.OptimisticConcurrencyException" />
      <apidata name="OptimisticConcurrencyException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.OptimisticConcurrencyException.#ctor" />
      <elements>
        <element api="P:System.Data.UpdateException.StateEntries" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" />
      </containers>
    </api>
    <api id="Overload:System.Data.OptimisticConcurrencyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.OptimisticConcurrencyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="stateEntries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.OrderedEnumerableRowCollection`1">
      <topicdata group="api" />
      <apidata name="OrderedEnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            </specialization>
          </type>
          <type api="T:System.Data.EnumerableRowCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.OrderedEnumerableRowCollection`1">
      <topicdata name="OrderedEnumerableRowCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.OrderedEnumerableRowCollection`1" />
      <apidata name="OrderedEnumerableRowCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TRow" />
      </templates>
      <elements>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
            <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" />
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="T:System.Data.OrderedEnumerableRowCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.EnumerableRowCollectionExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.EnumerableRowCollection`1.GetEnumerator" />
        <element api="M:System.Data.EnumerableRowCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" />
      </containers>
    </api>
    <api id="T:System.Data.ParameterDirection">
      <topicdata group="api" />
      <apidata name="ParameterDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.ParameterDirection.Input" />
        <element api="F:System.Data.ParameterDirection.Output" />
        <element api="F:System.Data.ParameterDirection.InputOutput" />
        <element api="F:System.Data.ParameterDirection.ReturnValue" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.ParameterDirection.Input">
      <topicdata group="api" notopic="" />
      <apidata name="Input" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ParameterDirection.InputOutput">
      <topicdata group="api" notopic="" />
      <apidata name="InputOutput" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ParameterDirection.Output">
      <topicdata group="api" notopic="" />
      <apidata name="Output" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.ParameterDirection.ReturnValue">
      <topicdata group="api" notopic="" />
      <apidata name="ReturnValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ParameterDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.PropertyCollection">
      <topicdata group="api" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="Overload:System.Data.PropertyCollection.#ctor">
          <element api="M:System.Data.PropertyCollection.#ctor" />
          <element api="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.PropertyCollection.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.PropertyCollection.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.PropertyCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.PropertyCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.PropertyCollection.#ctor" />
        <element api="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyCollection.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.PropertyCollection.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Hashtable.Clone">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.PropertyConstraintException">
      <topicdata group="api" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.ConstraintException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.PropertyConstraintException.#ctor">
          <element api="M:System.Data.PropertyConstraintException.#ctor" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)" />
          <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)" />
        </element>
        <element api="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Data.PropertyConstraintException.PropertyName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.PropertyConstraintException">
      <topicdata name="PropertyConstraintException" group="list" subgroup="Methods" typeTopicId="T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <elements>
        <element api="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.PropertyConstraintException">
      <topicdata name="PropertyConstraintException" group="list" subgroup="Properties" typeTopicId="T:System.Data.PropertyConstraintException" />
      <apidata name="PropertyConstraintException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.PropertyConstraintException.#ctor" />
      <elements>
        <element api="P:System.Data.PropertyConstraintException.PropertyName" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" />
      </containers>
    </api>
    <api id="Overload:System.Data.PropertyConstraintException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.PropertyConstraintException.#ctor" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)" />
        <element api="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.PropertyConstraintException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.PropertyConstraintException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.PropertyConstraintException.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.PropertyConstraintException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ProviderIncompatibleException">
      <topicdata group="api" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.EntityException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.ProviderIncompatibleException.#ctor">
          <element api="M:System.Data.ProviderIncompatibleException.#ctor" />
          <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String)" />
          <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.ProviderIncompatibleException">
      <topicdata name="ProviderIncompatibleException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ProviderIncompatibleException">
      <topicdata name="ProviderIncompatibleException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ProviderIncompatibleException" />
      <apidata name="ProviderIncompatibleException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.ProviderIncompatibleException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" />
      </containers>
    </api>
    <api id="Overload:System.Data.ProviderIncompatibleException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ProviderIncompatibleException.#ctor" />
        <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String)" />
        <element api="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ProviderIncompatibleException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ProviderIncompatibleException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.ReadOnlyException">
      <topicdata group="api" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.ReadOnlyException.#ctor">
          <element api="M:System.Data.ReadOnlyException.#ctor" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.String)" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Methods" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Properties" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.ReadOnlyException">
      <topicdata name="ReadOnlyException" group="list" subgroup="Events" typeTopicId="T:System.Data.ReadOnlyException" />
      <apidata name="ReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.ReadOnlyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" />
      </containers>
    </api>
    <api id="Overload:System.Data.ReadOnlyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.ReadOnlyException.#ctor" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.String)" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.ReadOnlyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.ReadOnlyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.ReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.RowNotInTableException">
      <topicdata group="api" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.RowNotInTableException.#ctor">
          <element api="M:System.Data.RowNotInTableException.#ctor" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.String)" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Methods" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Properties" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.RowNotInTableException">
      <topicdata name="RowNotInTableException" group="list" subgroup="Events" typeTopicId="T:System.Data.RowNotInTableException" />
      <apidata name="RowNotInTableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.RowNotInTableException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" />
      </containers>
    </api>
    <api id="Overload:System.Data.RowNotInTableException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.RowNotInTableException.#ctor" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.String)" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.RowNotInTableException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.RowNotInTableException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.RowNotInTableException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Rule">
      <topicdata group="api" />
      <apidata name="Rule" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Rule.None" />
        <element api="F:System.Data.Rule.Cascade" />
        <element api="F:System.Data.Rule.SetNull" />
        <element api="F:System.Data.Rule.SetDefault" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.Rule.Cascade">
      <topicdata group="api" notopic="" />
      <apidata name="Cascade" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Rule.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Rule.SetDefault">
      <topicdata group="api" notopic="" />
      <apidata name="SetDefault" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Rule.SetNull">
      <topicdata group="api" notopic="" />
      <apidata name="SetNull" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Rule" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.Rule" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.SchemaSerializationMode">
      <topicdata group="api" />
      <apidata name="SchemaSerializationMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SchemaSerializationMode.IncludeSchema" />
        <element api="F:System.Data.SchemaSerializationMode.ExcludeSchema" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.SchemaSerializationMode.ExcludeSchema">
      <topicdata group="api" notopic="" />
      <apidata name="ExcludeSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SchemaSerializationMode.IncludeSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IncludeSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaSerializationMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.SchemaType">
      <topicdata group="api" />
      <apidata name="SchemaType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SchemaType.Source" />
        <element api="F:System.Data.SchemaType.Mapped" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.SchemaType.Mapped">
      <topicdata group="api" notopic="" />
      <apidata name="Mapped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SchemaType.Source">
      <topicdata group="api" notopic="" />
      <apidata name="Source" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SchemaType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SchemaType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.SerializationFormat">
      <topicdata group="api" />
      <apidata name="SerializationFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SerializationFormat.Xml" />
        <element api="F:System.Data.SerializationFormat.Binary" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.SerializationFormat.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SerializationFormat.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SerializationFormat" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.SqlDbType">
      <topicdata group="api" />
      <apidata name="SqlDbType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.SqlDbType.BigInt" />
        <element api="F:System.Data.SqlDbType.Binary" />
        <element api="F:System.Data.SqlDbType.Bit" />
        <element api="F:System.Data.SqlDbType.Char" />
        <element api="F:System.Data.SqlDbType.DateTime" />
        <element api="F:System.Data.SqlDbType.Decimal" />
        <element api="F:System.Data.SqlDbType.Float" />
        <element api="F:System.Data.SqlDbType.Image" />
        <element api="F:System.Data.SqlDbType.Int" />
        <element api="F:System.Data.SqlDbType.Money" />
        <element api="F:System.Data.SqlDbType.NChar" />
        <element api="F:System.Data.SqlDbType.NText" />
        <element api="F:System.Data.SqlDbType.NVarChar" />
        <element api="F:System.Data.SqlDbType.Real" />
        <element api="F:System.Data.SqlDbType.UniqueIdentifier" />
        <element api="F:System.Data.SqlDbType.SmallDateTime" />
        <element api="F:System.Data.SqlDbType.SmallInt" />
        <element api="F:System.Data.SqlDbType.SmallMoney" />
        <element api="F:System.Data.SqlDbType.Text" />
        <element api="F:System.Data.SqlDbType.Timestamp" />
        <element api="F:System.Data.SqlDbType.TinyInt" />
        <element api="F:System.Data.SqlDbType.VarBinary" />
        <element api="F:System.Data.SqlDbType.VarChar" />
        <element api="F:System.Data.SqlDbType.Variant" />
        <element api="F:System.Data.SqlDbType.Xml" />
        <element api="F:System.Data.SqlDbType.Udt" />
        <element api="F:System.Data.SqlDbType.Structured" />
        <element api="F:System.Data.SqlDbType.Date" />
        <element api="F:System.Data.SqlDbType.Time" />
        <element api="F:System.Data.SqlDbType.DateTime2" />
        <element api="F:System.Data.SqlDbType.DateTimeOffset" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.BigInt">
      <topicdata group="api" notopic="" />
      <apidata name="BigInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Bit">
      <topicdata group="api" notopic="" />
      <apidata name="Bit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Char">
      <topicdata group="api" notopic="" />
      <apidata name="Char" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.DateTime2">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.DateTimeOffset">
      <topicdata group="api" notopic="" />
      <apidata name="DateTimeOffset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Decimal">
      <topicdata group="api" notopic="" />
      <apidata name="Decimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Float">
      <topicdata group="api" notopic="" />
      <apidata name="Float" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Image">
      <topicdata group="api" notopic="" />
      <apidata name="Image" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Int">
      <topicdata group="api" notopic="" />
      <apidata name="Int" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Money">
      <topicdata group="api" notopic="" />
      <apidata name="Money" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.NChar">
      <topicdata group="api" notopic="" />
      <apidata name="NChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.NText">
      <topicdata group="api" notopic="" />
      <apidata name="NText" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.NVarChar">
      <topicdata group="api" notopic="" />
      <apidata name="NVarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Real">
      <topicdata group="api" notopic="" />
      <apidata name="Real" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.SmallDateTime">
      <topicdata group="api" notopic="" />
      <apidata name="SmallDateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.SmallInt">
      <topicdata group="api" notopic="" />
      <apidata name="SmallInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.SmallMoney">
      <topicdata group="api" notopic="" />
      <apidata name="SmallMoney" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Structured">
      <topicdata group="api" notopic="" />
      <apidata name="Structured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Timestamp">
      <topicdata group="api" notopic="" />
      <apidata name="Timestamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.TinyInt">
      <topicdata group="api" notopic="" />
      <apidata name="TinyInt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Udt">
      <topicdata group="api" notopic="" />
      <apidata name="Udt" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>29</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.UniqueIdentifier">
      <topicdata group="api" notopic="" />
      <apidata name="UniqueIdentifier" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.VarBinary">
      <topicdata group="api" notopic="" />
      <apidata name="VarBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.VarChar">
      <topicdata group="api" notopic="" />
      <apidata name="VarChar" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Variant">
      <topicdata group="api" notopic="" />
      <apidata name="Variant" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.SqlDbType.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.SqlDbType" ref="false" />
      </returns>
      <value>25</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SqlDbType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.StateChangeEventArgs">
      <topicdata group="api" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.StateChangeEventArgs.CurrentState" />
        <element api="P:System.Data.StateChangeEventArgs.OriginalState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.StateChangeEventArgs">
      <topicdata name="StateChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.StateChangeEventArgs">
      <topicdata name="StateChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.StateChangeEventArgs" />
      <apidata name="StateChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.StateChangeEventArgs.CurrentState" />
        <element api="P:System.Data.StateChangeEventArgs.OriginalState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="originalState">
          <type api="T:System.Data.ConnectionState" ref="false" />
        </parameter>
        <parameter name="currentState">
          <type api="T:System.Data.ConnectionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.StateChangeEventArgs.CurrentState">
      <topicdata group="api" />
      <apidata name="CurrentState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentState" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.StateChangeEventArgs.OriginalState">
      <topicdata group="api" />
      <apidata name="OriginalState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalState" />
      <returns>
        <type api="T:System.Data.ConnectionState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StateChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.StateChangeEventHandler">
      <topicdata group="api" />
      <apidata name="StateChangeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.StateChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.StatementCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.StatementCompletedEventArgs.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.StatementCompletedEventArgs">
      <topicdata name="StatementCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.StatementCompletedEventArgs">
      <topicdata name="StatementCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.StatementCompletedEventArgs" />
      <apidata name="StatementCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.StatementCompletedEventArgs.RecordCount" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" />
      </containers>
    </api>
    <api id="M:System.Data.StatementCompletedEventArgs.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="recordCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.StatementCompletedEventArgs.RecordCount">
      <topicdata group="api" />
      <apidata name="RecordCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecordCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.StatementCompletedEventHandler">
      <topicdata group="api" />
      <apidata name="StatementCompletedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Data.StatementCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="T:System.Data.StatementType">
      <topicdata group="api" />
      <apidata name="StatementType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.StatementType.Select" />
        <element api="F:System.Data.StatementType.Insert" />
        <element api="F:System.Data.StatementType.Update" />
        <element api="F:System.Data.StatementType.Delete" />
        <element api="F:System.Data.StatementType.Batch" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.StatementType.Batch">
      <topicdata group="api" notopic="" />
      <apidata name="Batch" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.StatementType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.StatementType.Insert">
      <topicdata group="api" notopic="" />
      <apidata name="Insert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.StatementType.Select">
      <topicdata group="api" notopic="" />
      <apidata name="Select" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.StatementType.Update">
      <topicdata group="api" notopic="" />
      <apidata name="Update" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.StatementType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StatementType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.StrongTypingException">
      <topicdata group="api" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.StrongTypingException.#ctor">
          <element api="M:System.Data.StrongTypingException.#ctor" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.String)" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Methods" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Properties" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.StrongTypingException">
      <topicdata name="StrongTypingException" group="list" subgroup="Events" typeTopicId="T:System.Data.StrongTypingException" />
      <apidata name="StrongTypingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.StrongTypingException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" />
      </containers>
    </api>
    <api id="Overload:System.Data.StrongTypingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.StrongTypingException.#ctor" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.String)" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.StrongTypingException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.StrongTypingException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.SyntaxErrorException">
      <topicdata group="api" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.InvalidExpressionException" ref="true" />
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.SyntaxErrorException.#ctor">
          <element api="M:System.Data.SyntaxErrorException.#ctor" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.String)" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Methods" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Properties" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.SyntaxErrorException">
      <topicdata name="SyntaxErrorException" group="list" subgroup="Events" typeTopicId="T:System.Data.SyntaxErrorException" />
      <apidata name="SyntaxErrorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.SyntaxErrorException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" />
      </containers>
    </api>
    <api id="Overload:System.Data.SyntaxErrorException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.SyntaxErrorException.#ctor" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.String)" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.SyntaxErrorException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.SyntaxErrorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.SyntaxErrorException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.TypedDataSetGenerator">
      <topicdata group="api" />
      <apidata name="TypedDataSetGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.TypedDataSetGenerator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.TypedDataSetGenerator.#ctor" />
        <element api="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TypedDataSetGenerator class will be removed in a future release. Please use System.Data.Design.TypedDataSetGenerator in System.Design.dll.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.TypedDataSetGenerator">
      <topicdata name="TypedDataSetGenerator" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedDataSetGenerator" />
      <apidata name="TypedDataSetGenerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.TypedDataSetGenerator.#ctor" />
      <elements>
        <element api="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <topicdata group="api" />
      <apidata name="Generate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dataSet">
          <type api="T:System.Data.DataSet" ref="true" />
        </parameter>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeGen">
          <type api="T:System.CodeDom.Compiler.ICodeGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <topicdata group="api" />
      <apidata name="GenerateIdName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="codeGen">
          <type api="T:System.CodeDom.Compiler.ICodeGenerator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGenerator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.TypedDataSetGeneratorException">
      <topicdata group="api" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.TypedDataSetGeneratorException.#ctor">
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.TypedDataSetGeneratorException.ErrorList" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Properties" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="P:System.Data.TypedDataSetGeneratorException.ErrorList" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.TypedDataSetGeneratorException">
      <topicdata name="TypedDataSetGeneratorException" group="list" subgroup="Events" typeTopicId="T:System.Data.TypedDataSetGeneratorException" />
      <apidata name="TypedDataSetGeneratorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.TypedDataSetGeneratorException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" />
      </containers>
    </api>
    <api id="Overload:System.Data.TypedDataSetGeneratorException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.ArrayList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.TypedDataSetGeneratorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <topicdata group="api" />
      <apidata name="ErrorList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorList" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedDataSetGeneratorException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.TypedTableBase`1">
      <topicdata group="api" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataTable" ref="true" />
          <type api="T:System.ComponentModel.MarshalByValueComponent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Data.DataTable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
            <parameter name="errorHandler">
              <type api="T:System.Data.FillErrorEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
        <element api="F:System.Data.DataTable.fInitInProgress" />
        <element api="Overload:System.Data.TypedTableBase`1.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.TypedTableBase`1.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.TypedTableBase`1.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.TypedTableBase`1.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.TypedTableBase`1.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.TypedTableBase`1.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.#ctor">
          <element api="M:System.Data.TypedTableBase`1.#ctor" />
          <element api="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.Data.TypedTableBase`1.Cast``1" />
        <element api="M:System.Data.TypedTableBase`1.GetEnumerator" />
        <element api="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" source="extension">
          <apidata name="AsDataView" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.DataView" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Data.DataTable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" source="extension" overload="true">
          <apidata name="CopyToDataTable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="table">
              <type api="T:System.Data.DataTable" ref="true" />
            </parameter>
            <parameter name="options">
              <type api="T:System.Data.LoadOption" ref="false" />
            </parameter>
            <parameter name="errorHandler">
              <type api="T:System.Data.FillErrorEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" source="extension" overload="true">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <type api="T:System.Data.DataRow" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.DataTableExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" source="extension" overload="true">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
            <template name="S" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                  <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TRow">
              <constrained>
                <type api="T:System.Data.DataRow" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
              <specialization>
                <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Data" />
            <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.Dispose">
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose" />
          <element api="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.MarshalByValueComponent.Finalize" />
        <element api="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)" />
        <element api="M:System.Data.DataTable.AcceptChanges" />
        <element api="M:System.Data.DataTable.BeginInit" />
        <element api="M:System.Data.DataTable.BeginLoadData" />
        <element api="M:System.Data.DataTable.Clear" />
        <element api="M:System.Data.DataTable.Clone" />
        <element api="M:System.Data.DataTable.Compute(System.String,System.String)" />
        <element api="M:System.Data.DataTable.Copy" />
        <element api="M:System.Data.DataTable.CreateDataReader" />
        <element api="M:System.Data.DataTable.CreateInstance" />
        <element api="M:System.Data.DataTable.EndInit" />
        <element api="M:System.Data.DataTable.EndLoadData" />
        <element api="Overload:System.Data.TypedTableBase`1.GetChanges">
          <element api="M:System.Data.DataTable.GetChanges" />
          <element api="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
        </element>
        <element api="M:System.Data.DataTable.GetErrors" />
        <element api="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.DataTable.GetRowType" />
        <element api="M:System.Data.DataTable.GetSchema" />
        <element api="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
        <element api="Overload:System.Data.TypedTableBase`1.Load">
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
          <element api="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.LoadDataRow">
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
          <element api="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.Merge">
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
          <element api="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
        </element>
        <element api="M:System.Data.DataTable.NewRow" />
        <element api="M:System.Data.DataTable.NewRowArray(System.Int32)" />
        <element api="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
        <element api="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
        <element api="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
        <element api="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
        <element api="Overload:System.Data.TypedTableBase`1.ReadXml">
          <element api="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXml(System.String)" />
          <element api="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.ReadXmlSchema">
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
          <element api="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.RejectChanges" />
        <element api="M:System.Data.DataTable.Reset" />
        <element api="Overload:System.Data.TypedTableBase`1.Select">
          <element api="M:System.Data.DataTable.Select" />
          <element api="M:System.Data.DataTable.Select(System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String)" />
          <element api="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
        </element>
        <element api="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Data.DataTable.ToString" />
        <element api="Overload:System.Data.TypedTableBase`1.WriteXml">
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Data.TypedTableBase`1.WriteXmlSchema">
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
          <element api="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
        </element>
        <element api="M:System.Data.TypedTableBase`1.Cast``1" />
        <element api="M:System.Data.TypedTableBase`1.GetEnumerator" />
        <element api="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Properties" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ComponentModel.MarshalByValueComponent.Container" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.DesignMode" />
        <element api="P:System.ComponentModel.MarshalByValueComponent.Events" />
        <element api="P:System.Data.DataTable.CaseSensitive" />
        <element api="P:System.Data.DataTable.ChildRelations" />
        <element api="P:System.Data.DataTable.Columns" />
        <element api="P:System.Data.DataTable.Constraints" />
        <element api="P:System.Data.DataTable.DataSet" />
        <element api="P:System.Data.DataTable.DefaultView" />
        <element api="P:System.Data.DataTable.DisplayExpression" />
        <element api="P:System.Data.DataTable.ExtendedProperties" />
        <element api="P:System.Data.DataTable.HasErrors" />
        <element api="P:System.Data.DataTable.IsInitialized" />
        <element api="P:System.Data.DataTable.Locale" />
        <element api="P:System.Data.DataTable.MinimumCapacity" />
        <element api="P:System.Data.DataTable.Namespace" />
        <element api="P:System.Data.DataTable.ParentRelations" />
        <element api="P:System.Data.DataTable.Prefix" />
        <element api="P:System.Data.DataTable.PrimaryKey" />
        <element api="P:System.Data.DataTable.RemotingFormat" />
        <element api="P:System.Data.DataTable.Rows" />
        <element api="P:System.Data.DataTable.Site" />
        <element api="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.DataTable.TableName" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
    </api>
    <api id="Events.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Events" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:System.ComponentModel.MarshalByValueComponent.Disposed" />
        <element api="E:System.Data.DataTable.ColumnChanged" />
        <element api="E:System.Data.DataTable.ColumnChanging" />
        <element api="E:System.Data.DataTable.Initialized" />
        <element api="E:System.Data.DataTable.RowChanged" />
        <element api="E:System.Data.DataTable.RowChanging" />
        <element api="E:System.Data.DataTable.RowDeleted" />
        <element api="E:System.Data.DataTable.RowDeleting" />
        <element api="E:System.Data.DataTable.TableCleared" />
        <element api="E:System.Data.DataTable.TableClearing" />
        <element api="E:System.Data.DataTable.TableNewRow" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
    </api>
    <api id="Fields.T:System.Data.TypedTableBase`1">
      <topicdata name="TypedTableBase" group="list" subgroup="Fields" typeTopicId="T:System.Data.TypedTableBase`1" />
      <apidata name="TypedTableBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:System.Data.DataTable.fInitInProgress" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" />
      </containers>
    </api>
    <api id="Overload:System.Data.TypedTableBase`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.TypedTableBase`1.#ctor" />
        <element api="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBase`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedTableBase`1.#ctor" />
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBase`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.TypedTableBase`1.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBase`1.Cast``1">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Data.TypedTableBase`1.Cast``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBase`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Data.TypedTableBase`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBase`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBase`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.TypedTableBaseExtensions">
      <topicdata group="api" />
      <apidata name="TypedTableBaseExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.TypedTableBaseExtensions">
      <topicdata name="TypedTableBaseExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Data.TypedTableBaseExtensions" />
      <apidata name="TypedTableBaseExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
        <element api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
        </element>
        <element api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" />
      </containers>
    </api>
    <api id="Overload:System.Data.TypedTableBaseExtensions.OrderBy">
      <topicdata name="OrderBy" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending">
      <topicdata name="OrderByDescending" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
        <element api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </elements>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})">
      <topicdata group="api" />
      <apidata name="AsEnumerable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.AsEnumerable``1(System.Data.TypedTableBase{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="ElementAtOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.ElementAtOrDefault``1(System.Data.TypedTableBase{``0},System.Int32)" />
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderBy" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderBy``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Data.TypedTableBaseExtensions.OrderByDescending" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="1" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.OrderedEnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.OrderByDescending``2(System.Data.TypedTableBase{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
        <template name="S" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
              <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="S" index="1" api="M:System.Data.TypedTableBaseExtensions.Select``2(System.Data.TypedTableBase{``0},System.Func{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TRow">
          <constrained>
            <type api="T:System.Data.DataRow" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Data.TypedTableBase`1" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.EnumerableRowCollection`1" ref="true">
          <specialization>
            <template name="TRow" index="0" api="M:System.Data.TypedTableBaseExtensions.Where``1(System.Data.TypedTableBase{``0},System.Func{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.DataSetExtensions" module="System.Data.DataSetExtensions" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.TypedTableBaseExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.UniqueConstraint">
      <topicdata group="api" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Constraint" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="Overload:System.Data.UniqueConstraint.#ctor">
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)" />
          <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)" />
        </element>
        <element api="M:System.Data.UniqueConstraint.Equals(System.Object)" />
        <element api="M:System.Data.UniqueConstraint.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.UniqueConstraint.Columns" />
        <element api="P:System.Data.UniqueConstraint.IsPrimaryKey" />
        <element api="P:System.Data.UniqueConstraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ConstraintName</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VSDesigner.Data.Design.UniqueConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.UniqueConstraint">
      <topicdata name="UniqueConstraint" group="list" subgroup="Methods" typeTopicId="T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.Constraint.CheckStateForProperty" />
        <element api="M:System.Data.Constraint.SetDataSet(System.Data.DataSet)" />
        <element api="M:System.Data.Constraint.ToString" />
        <element api="M:System.Data.UniqueConstraint.Equals(System.Object)" />
        <element api="M:System.Data.UniqueConstraint.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.UniqueConstraint">
      <topicdata name="UniqueConstraint" group="list" subgroup="Properties" typeTopicId="T:System.Data.UniqueConstraint" />
      <apidata name="UniqueConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Constraint._DataSet" />
        <element api="P:System.Data.Constraint.ConstraintName" />
        <element api="P:System.Data.Constraint.ExtendedProperties" />
        <element api="P:System.Data.UniqueConstraint.Columns" />
        <element api="P:System.Data.UniqueConstraint.IsPrimaryKey" />
        <element api="P:System.Data.UniqueConstraint.Table" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" />
      </containers>
    </api>
    <api id="Overload:System.Data.UniqueConstraint.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)" />
        <element api="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="column">
          <type api="T:System.Data.DataColumn" ref="true" />
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <arrayOf rank="1">
            <type api="T:System.Data.DataColumn" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UniqueConstraint.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columnNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="isPrimaryKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.UniqueConstraint.Columns">
      <topicdata group="api" />
      <apidata name="Columns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Columns" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Data.DataColumn" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="key2">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UniqueConstraint.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <topicdata group="api" />
      <apidata name="IsPrimaryKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPrimaryKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.UniqueConstraint.Table">
      <topicdata group="api" />
      <apidata name="Table" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Data.Constraint.Table">
          <type api="T:System.Data.Constraint" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Table" />
      <returns>
        <type api="T:System.Data.DataTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UniqueConstraint" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.UpdateException">
      <topicdata group="api" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.OptimisticConcurrencyException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.UpdateException.#ctor">
          <element api="M:System.Data.UpdateException.#ctor" />
          <element api="M:System.Data.UpdateException.#ctor(System.String)" />
          <element api="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Data.UpdateException.StateEntries" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Methods" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Properties" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="P:System.Data.UpdateException.StateEntries" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Events" typeTopicId="T:System.Data.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.UpdateException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" />
      </containers>
    </api>
    <api id="Overload:System.Data.UpdateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.UpdateException.#ctor" />
        <element api="M:System.Data.UpdateException.#ctor(System.String)" />
        <element api="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UpdateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="stateEntries">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.UpdateException.StateEntries">
      <topicdata group="api" />
      <apidata name="StateEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StateEntries" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.UpdateRowSource">
      <topicdata group="api" />
      <apidata name="UpdateRowSource" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.UpdateRowSource.None" />
        <element api="F:System.Data.UpdateRowSource.OutputParameters" />
        <element api="F:System.Data.UpdateRowSource.FirstReturnedRecord" />
        <element api="F:System.Data.UpdateRowSource.Both" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateRowSource.Both">
      <topicdata group="api" notopic="" />
      <apidata name="Both" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <topicdata group="api" notopic="" />
      <apidata name="FirstReturnedRecord" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateRowSource.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateRowSource.OutputParameters">
      <topicdata group="api" notopic="" />
      <apidata name="OutputParameters" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateRowSource" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.UpdateStatus">
      <topicdata group="api" />
      <apidata name="UpdateStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.UpdateStatus.Continue" />
        <element api="F:System.Data.UpdateStatus.ErrorsOccurred" />
        <element api="F:System.Data.UpdateStatus.SkipCurrentRow" />
        <element api="F:System.Data.UpdateStatus.SkipAllRemainingRows" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateStatus.Continue">
      <topicdata group="api" notopic="" />
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateStatus.ErrorsOccurred">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorsOccurred" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <topicdata group="api" notopic="" />
      <apidata name="SkipAllRemainingRows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.UpdateStatus.SkipCurrentRow">
      <topicdata group="api" notopic="" />
      <apidata name="SkipCurrentRow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.UpdateStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.VersionNotFoundException">
      <topicdata group="api" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.DataException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Data.VersionNotFoundException.#ctor">
          <element api="M:System.Data.VersionNotFoundException.#ctor" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.String)" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
    </api>
    <api id="Events.T:System.Data.VersionNotFoundException">
      <topicdata name="VersionNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.Data.VersionNotFoundException" />
      <apidata name="VersionNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Data.VersionNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.Data.VersionNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.VersionNotFoundException.#ctor" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.String)" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.VersionNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.VersionNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.VersionNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.XmlReadMode">
      <topicdata group="api" />
      <apidata name="XmlReadMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.XmlReadMode.Auto" />
        <element api="F:System.Data.XmlReadMode.ReadSchema" />
        <element api="F:System.Data.XmlReadMode.IgnoreSchema" />
        <element api="F:System.Data.XmlReadMode.InferSchema" />
        <element api="F:System.Data.XmlReadMode.DiffGram" />
        <element api="F:System.Data.XmlReadMode.Fragment" />
        <element api="F:System.Data.XmlReadMode.InferTypedSchema" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.DiffGram">
      <topicdata group="api" notopic="" />
      <apidata name="DiffGram" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.Fragment">
      <topicdata group="api" notopic="" />
      <apidata name="Fragment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.IgnoreSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.InferSchema">
      <topicdata group="api" notopic="" />
      <apidata name="InferSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.InferTypedSchema">
      <topicdata group="api" notopic="" />
      <apidata name="InferTypedSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlReadMode.ReadSchema">
      <topicdata group="api" notopic="" />
      <apidata name="ReadSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlReadMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.XmlWriteMode">
      <topicdata group="api" />
      <apidata name="XmlWriteMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.XmlWriteMode.WriteSchema" />
        <element api="F:System.Data.XmlWriteMode.IgnoreSchema" />
        <element api="F:System.Data.XmlWriteMode.DiffGram" />
      </elements>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
      </containers>
    </api>
    <api id="F:System.Data.XmlWriteMode.DiffGram">
      <topicdata group="api" notopic="" />
      <apidata name="DiffGram" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlWriteMode.IgnoreSchema">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.XmlWriteMode.WriteSchema">
      <topicdata group="api" notopic="" />
      <apidata name="WriteSchema" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data" module="System.Data" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data" />
        <type api="T:System.Data.XmlWriteMode" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>