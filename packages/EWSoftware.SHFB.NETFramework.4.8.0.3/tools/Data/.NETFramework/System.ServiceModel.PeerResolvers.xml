<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.PeerResolvers">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.PeerResolvers" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
        <element api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
        <element api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />
        <element api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
        <element api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" />
        <element api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />
        <element api="T:System.ServiceModel.PeerResolvers.ResolveInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.RegisterInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.UpdateInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.RefreshInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />
        <element api="T:System.ServiceModel.PeerResolvers.RefreshResult" />
        <element api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService">
      <topicdata group="api" />
      <apidata name="CustomPeerResolverService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
        <element api="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register">
          <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
          <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PeerChannel feature is obsolete and will be removed in the future.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
          <assignment name="UseSynchronizationContext">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="InstanceContextMode">
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="Single" />
            </enumValue>
          </assignment>
          <assignment name="ConcurrencyMode">
            <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
            <enumValue>
              <field name="Multiple" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.CustomPeerResolverService">
      <topicdata name="CustomPeerResolverService" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
      <apidata name="CustomPeerResolverService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
        <element api="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register">
          <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
          <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.CustomPeerResolverService">
      <topicdata name="CustomPeerResolverService" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
      <apidata name="CustomPeerResolverService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
        <element api="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval">
      <topicdata group="api" />
      <apidata name="CleanupInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CleanupInterval" />
      <setter name="set_CleanupInterval" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape">
      <topicdata group="api" />
      <apidata name="ControlShape" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ControlShape" />
      <setter name="set_ControlShape" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings">
      <topicdata group="api" />
      <apidata name="GetServiceSettings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open">
      <topicdata group="api" />
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refreshInfo">
          <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval">
      <topicdata group="api" />
      <apidata name="RefreshInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RefreshInterval" />
      <setter name="set_RefreshInterval" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="clientId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="registerInfo">
          <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="resolveInfo">
          <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="unregisterInfo">
          <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="updateInfo">
          <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
          <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.IPeerResolverContract">
      <topicdata group="api" />
      <apidata name="IPeerResolverContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>IPeerResolverContract</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver</value>
          </assignment>
          <assignment name="SessionMode">
            <type api="T:System.ServiceModel.SessionMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.IPeerResolverContract">
      <topicdata name="IPeerResolverContract" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
      <apidata name="IPeerResolverContract" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
        <element api="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings">
      <topicdata group="api" />
      <apidata name="GetServiceSettings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>GetServiceInfo</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/GetServiceSettings</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/GetServiceSettingsResponse</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refreshInfo">
          <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Refresh</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/Refresh</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/RefreshResponse</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="registerInfo">
          <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Register</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/Register</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/RegisterResponse</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="resolveInfo">
          <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Resolve</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/Resolve</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/ResolveResponse</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="unregisterInfo">
          <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Unregister</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/Unregister</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="updateInfo">
          <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>Update</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/Update</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/net/2006/05/peer/resolver/UpdateResponse</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings">
      <topicdata group="api" />
      <apidata name="PeerCustomResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.IsBindingSpecified" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Resolver" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings">
      <topicdata name="PeerCustomResolverSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />
      <apidata name="PeerCustomResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings">
      <topicdata name="PeerCustomResolverSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />
      <apidata name="PeerCustomResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.IsBindingSpecified" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Resolver" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Binding" />
      <setter name="set_Binding" />
      <returns>
        <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.IsBindingSpecified">
      <topicdata group="api" />
      <apidata name="IsBindingSpecified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBindingSpecified" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings.Resolver">
      <topicdata group="api" />
      <apidata name="Resolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resolver" />
      <setter name="set_Resolver" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy">
      <topicdata group="api" />
      <apidata name="PeerReferralPolicy" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Service" />
        <element api="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Share" />
        <element api="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.DoNotShare" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.DoNotShare">
      <topicdata group="api" notopic="" />
      <apidata name="DoNotShare" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Service">
      <topicdata group="api" notopic="" />
      <apidata name="Service" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerReferralPolicy.Share">
      <topicdata group="api" notopic="" />
      <apidata name="Share" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.PeerResolverMode">
      <topicdata group="api" />
      <apidata name="PeerResolverMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Auto" />
        <element api="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Pnrp" />
        <element api="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Custom" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.PeerResolverMode.Pnrp">
      <topicdata group="api" notopic="" />
      <apidata name="Pnrp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.PeerResolverSettings">
      <topicdata group="api" />
      <apidata name="PeerResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Custom" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Mode" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.ReferralPolicy" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.PeerResolverSettings">
      <topicdata name="PeerResolverSettings" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />
      <apidata name="PeerResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.PeerResolverSettings">
      <topicdata name="PeerResolverSettings" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />
      <apidata name="PeerResolverSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Custom" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Mode" />
        <element api="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.ReferralPolicy" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.PeerResolverSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Custom">
      <topicdata group="api" />
      <apidata name="Custom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Custom" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerCustomResolverSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.PeerResolverSettings.ReferralPolicy">
      <topicdata group="api" />
      <apidata name="ReferralPolicy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReferralPolicy" />
      <setter name="set_ReferralPolicy" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.PeerResolverSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.RefreshInfo">
      <topicdata group="api" />
      <apidata name="RefreshInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor(System.String,System.Guid)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.RefreshInfo">
      <topicdata name="RefreshInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.RefreshInfo" />
      <apidata name="RefreshInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.RefreshInfo">
      <topicdata name="RefreshInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.RefreshInfo" />
      <apidata name="RefreshInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.RefreshInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor(System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RefreshInfo.#ctor" />
      <parameters>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="regId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RefreshInfo.MeshId">
      <topicdata group="api" />
      <apidata name="MeshId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MeshId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RefreshInfo.RegistrationId">
      <topicdata group="api" />
      <apidata name="RegistrationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo">
      <topicdata group="api" />
      <apidata name="RefreshResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor(System.TimeSpan,System.ServiceModel.PeerResolvers.RefreshResult)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.RegistrationLifetime" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.RefreshResponseInfo">
      <topicdata name="RefreshResponseInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />
      <apidata name="RefreshResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.RefreshResponseInfo">
      <topicdata name="RefreshResponseInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />
      <apidata name="RefreshResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.RegistrationLifetime" />
        <element api="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.Result" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor(System.TimeSpan,System.ServiceModel.PeerResolvers.RefreshResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor(System.TimeSpan,System.ServiceModel.PeerResolvers.RefreshResult)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RefreshResponseInfo.#ctor" />
      <parameters>
        <parameter name="registrationLifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="result">
          <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RefreshResponseInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.RegistrationLifetime">
      <topicdata group="api" />
      <apidata name="RegistrationLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RegistrationLifetime" />
      <setter name="set_RegistrationLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RefreshResponseInfo.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.RefreshResult">
      <topicdata group="api" />
      <apidata name="RefreshResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.PeerResolvers.RefreshResult.Success" />
        <element api="F:System.ServiceModel.PeerResolvers.RefreshResult.RegistrationNotFound" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.RefreshResult.RegistrationNotFound">
      <topicdata group="api" notopic="" />
      <apidata name="RegistrationNotFound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.ServiceModel.PeerResolvers.RefreshResult.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RefreshResult" ref="false" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.RegisterInfo">
      <topicdata group="api" />
      <apidata name="RegisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.NodeAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.RegisterInfo">
      <topicdata name="RegisterInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.RegisterInfo" />
      <apidata name="RegisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.RegisterInfo">
      <topicdata name="RegisterInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.RegisterInfo" />
      <apidata name="RegisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterInfo.NodeAddress" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RegisterInfo.#ctor" />
      <parameters>
        <parameter name="client">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RegisterInfo.ClientId">
      <topicdata group="api" />
      <apidata name="ClientId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RegisterInfo.MeshId">
      <topicdata group="api" />
      <apidata name="MeshId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MeshId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RegisterInfo.NodeAddress">
      <topicdata group="api" />
      <apidata name="NodeAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NodeAddress" />
      <returns>
        <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo">
      <topicdata group="api" />
      <apidata name="RegisterResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor(System.Guid,System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationLifetime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.RegisterResponseInfo">
      <topicdata name="RegisterResponseInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />
      <apidata name="RegisterResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.RegisterResponseInfo">
      <topicdata name="RegisterResponseInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />
      <apidata name="RegisterResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationId" />
        <element api="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationLifetime" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor(System.Guid,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor(System.Guid,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.RegisterResponseInfo.#ctor" />
      <parameters>
        <parameter name="registrationId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="registrationLifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.RegisterResponseInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationId">
      <topicdata group="api" />
      <apidata name="RegistrationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RegistrationId" />
      <setter name="set_RegistrationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.RegisterResponseInfo.RegistrationLifetime">
      <topicdata group="api" />
      <apidata name="RegistrationLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RegistrationLifetime" />
      <setter name="set_RegistrationLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.ResolveInfo">
      <topicdata group="api" />
      <apidata name="ResolveInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor(System.Guid,System.String,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.MeshId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.ResolveInfo">
      <topicdata name="ResolveInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.ResolveInfo" />
      <apidata name="ResolveInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.ResolveInfo">
      <topicdata name="ResolveInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.ResolveInfo" />
      <apidata name="ResolveInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveInfo.MeshId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor(System.Guid,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor(System.Guid,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ResolveInfo.#ctor" />
      <parameters>
        <parameter name="clientId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="maxAddresses">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.ResolveInfo.ClientId">
      <topicdata group="api" />
      <apidata name="ClientId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses">
      <topicdata group="api" />
      <apidata name="MaxAddresses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaxAddresses" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.ResolveInfo.MeshId">
      <topicdata group="api" />
      <apidata name="MeshId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MeshId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo">
      <topicdata group="api" />
      <apidata name="ResolveResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor(System.ServiceModel.PeerNodeAddress[])" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.ResolveResponseInfo.Addresses" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.ResolveResponseInfo">
      <topicdata name="ResolveResponseInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />
      <apidata name="ResolveResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.ResolveResponseInfo">
      <topicdata name="ResolveResponseInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />
      <apidata name="ResolveResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.ResolveResponseInfo.Addresses" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor(System.ServiceModel.PeerNodeAddress[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor(System.ServiceModel.PeerNodeAddress[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ResolveResponseInfo.#ctor" />
      <parameters>
        <parameter name="addresses">
          <arrayOf rank="1">
            <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.ResolveResponseInfo.Addresses">
      <topicdata group="api" />
      <apidata name="Addresses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Addresses" />
      <setter name="set_Addresses" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ResolveResponseInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo">
      <topicdata group="api" />
      <apidata name="ServiceSettingsResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.ControlMeshShape" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo">
      <topicdata name="ServiceSettingsResponseInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />
      <apidata name="ServiceSettingsResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo">
      <topicdata name="ServiceSettingsResponseInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />
      <apidata name="ServiceSettingsResponseInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.ControlMeshShape" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.#ctor" />
      <parameters>
        <parameter name="control">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.ControlMeshShape">
      <topicdata group="api" />
      <apidata name="ControlMeshShape" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ControlMeshShape" />
      <setter name="set_ControlMeshShape" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.UnregisterInfo">
      <topicdata group="api" />
      <apidata name="UnregisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor(System.String,System.Guid)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.UnregisterInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.UnregisterInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.UnregisterInfo">
      <topicdata name="UnregisterInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />
      <apidata name="UnregisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.UnregisterInfo">
      <topicdata name="UnregisterInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />
      <apidata name="UnregisterInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.UnregisterInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.UnregisterInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor(System.String,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.UnregisterInfo.#ctor" />
      <parameters>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="registrationId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UnregisterInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UnregisterInfo.MeshId">
      <topicdata group="api" />
      <apidata name="MeshId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MeshId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UnregisterInfo.RegistrationId">
      <topicdata group="api" />
      <apidata name="RegistrationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UnregisterInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.PeerResolvers.UpdateInfo">
      <topicdata group="api" />
      <apidata name="UpdateInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor">
          <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
          <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor(System.Guid,System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
        </element>
        <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.HasBody" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.NodeAddress" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.MessageContractAttribute" ref="true" />
          <assignment name="IsWrapped">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.PeerResolvers.UpdateInfo">
      <topicdata name="UpdateInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.PeerResolvers.UpdateInfo" />
      <apidata name="UpdateInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.HasBody" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.PeerResolvers.UpdateInfo">
      <topicdata name="UpdateInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.PeerResolvers.UpdateInfo" />
      <apidata name="UpdateInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.ClientId" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.MeshId" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.NodeAddress" />
        <element api="P:System.ServiceModel.PeerResolvers.UpdateInfo.RegistrationId" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
        <element api="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor(System.Guid,System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor(System.Guid,System.Guid,System.String,System.ServiceModel.PeerNodeAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.PeerResolvers.UpdateInfo.#ctor" />
      <parameters>
        <parameter name="registrationId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="client">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="meshId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="address">
          <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UpdateInfo.ClientId">
      <topicdata group="api" />
      <apidata name="ClientId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.PeerResolvers.UpdateInfo.HasBody">
      <topicdata group="api" />
      <apidata name="HasBody" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UpdateInfo.MeshId">
      <topicdata group="api" />
      <apidata name="MeshId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MeshId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UpdateInfo.NodeAddress">
      <topicdata group="api" />
      <apidata name="NodeAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NodeAddress" />
      <returns>
        <type api="T:System.ServiceModel.PeerNodeAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.PeerResolvers.UpdateInfo.RegistrationId">
      <topicdata group="api" />
      <apidata name="RegistrationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.PeerResolvers" />
        <type api="T:System.ServiceModel.PeerResolvers.UpdateInfo" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>