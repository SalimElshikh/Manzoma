<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.AddIn">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.AddIn.Contract">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.AddIn.Contract.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Windows.Presentation">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Presentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Presentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Presentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.AddIn.Pipeline">
      <topicdata group="api" />
      <apidata name="System.AddIn.Pipeline" group="namespace" />
      <elements>
        <element api="T:System.AddIn.Pipeline.HostAdapterAttribute" />
        <element api="T:System.AddIn.Pipeline.AddInAdapterAttribute" />
        <element api="T:System.AddIn.Pipeline.AddInBaseAttribute" />
        <element api="T:System.AddIn.Pipeline.CollectionAdapters" />
        <element api="T:System.AddIn.Pipeline.ContractAdapter" />
        <element api="T:System.AddIn.Pipeline.ContractBase" />
        <element api="T:System.AddIn.Pipeline.ContractHandle" />
        <element api="T:System.AddIn.Pipeline.AddInContractAttribute" />
        <element api="T:System.AddIn.Pipeline.QualificationDataAttribute" />
        <element api="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
      </elements>
    </api>
    <api id="T:System.AddIn.Pipeline.AddInAdapterAttribute">
      <topicdata group="api" />
      <apidata name="AddInAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInAdapterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.AddInAdapterAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.AddInAdapterAttribute">
      <topicdata name="AddInAdapterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.AddInAdapterAttribute" />
      <apidata name="AddInAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInAdapterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInAdapterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.AddInAdapterAttribute">
      <topicdata name="AddInAdapterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.AddInAdapterAttribute" />
      <apidata name="AddInAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInAdapterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInAdapterAttribute" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.AddInAdapterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInAdapterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.AddInBaseAttribute">
      <topicdata group="api" />
      <apidata name="AddInBaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInBaseAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.AddInBaseAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.AddIn.Pipeline.AddInBaseAttribute.ActivatableAs" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.AddInBaseAttribute">
      <topicdata name="AddInBaseAttribute" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.AddInBaseAttribute" />
      <apidata name="AddInBaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInBaseAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInBaseAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.AddInBaseAttribute">
      <topicdata name="AddInBaseAttribute" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.AddInBaseAttribute" />
      <apidata name="AddInBaseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInBaseAttribute.#ctor" />
      <elements>
        <element api="P:System.AddIn.Pipeline.AddInBaseAttribute.ActivatableAs" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInBaseAttribute" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.AddInBaseAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInBaseAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.AddIn.Pipeline.AddInBaseAttribute.ActivatableAs">
      <topicdata group="api" />
      <apidata name="ActivatableAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ActivatableAs" />
      <setter name="set_ActivatableAs" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInBaseAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.AddInContractAttribute">
      <topicdata group="api" />
      <apidata name="AddInContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.AddInContractAttribute">
      <topicdata name="AddInContractAttribute" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.AddInContractAttribute" />
      <apidata name="AddInContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInContractAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.AddInContractAttribute">
      <topicdata name="AddInContractAttribute" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.AddInContractAttribute" />
      <apidata name="AddInContractAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInContractAttribute" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.AddInContractAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.AddInContractAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.CollectionAdapters">
      <topicdata group="api" />
      <apidata name="CollectionAdapters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIList">
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
        </element>
        <element api="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIListContract">
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.CollectionAdapters">
      <topicdata name="CollectionAdapters" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.CollectionAdapters" />
      <apidata name="CollectionAdapters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIList">
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
        </element>
        <element api="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIListContract">
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
          <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" />
      </containers>
    </api>
    <api id="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIList">
      <topicdata name="ToIList" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToIList" group="member" subgroup="method" />
      <elements>
        <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
        <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIListContract">
      <topicdata name="ToIListContract" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToIListContract" group="member" subgroup="method" />
      <elements>
        <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
        <element api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})">
      <topicdata group="api" />
      <apidata name="ToIList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIList" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.AddIn.Contract.IListContract`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``1(System.AddIn.Contract.IListContract{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
      <topicdata group="api" />
      <apidata name="ToIList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIList" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TContract" />
        <template name="TView" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.AddIn.Contract.IListContract`1" ref="true">
            <specialization>
              <template name="TContract" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractViewAdapter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="TContract" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
              <template name="TView" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="viewContractAdapter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="TView" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
              <template name="TContract" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="TView" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIList``2(System.AddIn.Contract.IListContract{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})">
      <topicdata group="api" />
      <apidata name="ToIListContract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIListContract" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.IListContract`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1(System.Collections.Generic.IList{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})">
      <topicdata group="api" />
      <apidata name="ToIListContract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.CollectionAdapters.ToIListContract" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TView" />
        <template name="TContract" />
      </templates>
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="TView" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="viewContractAdapter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="TView" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
              <template name="TContract" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="contractViewAdapter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="TContract" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
              <template name="TView" index="0" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.IListContract`1" ref="true">
          <specialization>
            <template name="TContract" index="1" api="M:System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2(System.Collections.Generic.IList{``0},System.Converter{``0,``1},System.Converter{``1,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.CollectionAdapters" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.ContractAdapter">
      <topicdata group="api" />
      <apidata name="ContractAdapter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter">
          <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
          <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
        </element>
        <element api="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.ContractAdapter">
      <topicdata name="ContractAdapter" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.ContractAdapter" />
      <apidata name="ContractAdapter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter">
          <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
          <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
        </element>
        <element api="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractAdapter" />
      </containers>
    </api>
    <api id="Overload:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter">
      <topicdata name="ContractToViewAdapter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ContractToViewAdapter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
        <element api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)">
      <topicdata group="api" />
      <apidata name="ContractToViewAdapter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TView" />
      </templates>
      <parameters>
        <parameter name="contract">
          <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.AddIn.Hosting.PipelineStoreLocation" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TView" index="0" api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.AddIn.Hosting.PipelineStoreLocation)" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)">
      <topicdata group="api" />
      <apidata name="ContractToViewAdapter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TView" />
      </templates>
      <parameters>
        <parameter name="contract">
          <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
        </parameter>
        <parameter name="pipelineRoot">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TView" index="0" api="M:System.AddIn.Pipeline.ContractAdapter.ContractToViewAdapter``1(System.AddIn.Pipeline.ContractHandle,System.String)" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractAdapter" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractAdapter.ViewToContractAdapter(System.Object)">
      <topicdata group="api" />
      <apidata name="ViewToContractAdapter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="view">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractAdapter" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.ContractBase">
      <topicdata group="api" />
      <apidata name="ContractBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
        <type api="T:System.Runtime.Remoting.Lifetime.ISponsor" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractBase.#ctor" />
        <element api="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
        <element api="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
        <element api="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
        <element api="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.AddIn.Pipeline.ContractBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.ContractBase">
      <topicdata name="ContractBase" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.ContractBase" />
      <apidata name="ContractBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.ContractBase.#ctor" />
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken" />
        <element api="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode" />
        <element api="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke" />
        <element api="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RemoteToString" />
        <element api="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)" />
        <element api="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.AddIn.Pipeline.ContractBase.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.AcquireLifetimeToken">
      <topicdata group="api" />
      <apidata name="AcquireLifetimeToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.AcquireLifetimeToken">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.GetRemoteHashCode">
      <topicdata group="api" />
      <apidata name="GetRemoteHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.GetRemoteHashCode">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.OnFinalRevoke">
      <topicdata group="api" />
      <apidata name="OnFinalRevoke" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.QueryContract(System.String)">
      <topicdata group="api" />
      <apidata name="QueryContract" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="contractIdentifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </returns>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.QueryContract(System.String)">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.RemoteEquals(System.AddIn.Contract.IContract)">
      <topicdata group="api" />
      <apidata name="RemoteEquals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="contract">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.RemoteToString">
      <topicdata group="api" />
      <apidata name="RemoteToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.RemoteToString">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.Renewal(System.Runtime.Remoting.Lifetime.ILease)">
      <topicdata group="api" />
      <apidata name="Renewal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="lease">
          <type api="T:System.Runtime.Remoting.Lifetime.ILease" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Runtime.Remoting.Lifetime.ISponsor.Renewal(System.Runtime.Remoting.Lifetime.ILease)">
          <type api="T:System.Runtime.Remoting.Lifetime.ISponsor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractBase.RevokeLifetimeToken(System.Int32)">
      <topicdata group="api" />
      <apidata name="RevokeLifetimeToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.ContractHandle">
      <topicdata group="api" />
      <apidata name="ContractHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)" />
        <element api="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
        <element api="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
        <element api="Overload:System.AddIn.Pipeline.ContractHandle.Dispose">
          <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
          <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.ContractHandle">
      <topicdata name="ContractHandle" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.ContractHandle" />
      <apidata name="ContractHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)" />
        <element api="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)" />
        <element api="Overload:System.AddIn.Pipeline.ContractHandle.Dispose">
          <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
          <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.AddIn.Pipeline.ContractHandle.Finalize" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.ContractHandle">
      <topicdata name="ContractHandle" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.ContractHandle" />
      <apidata name="ContractHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.AddIn.Pipeline.ContractHandle.Contract" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" />
      </containers>
    </api>
    <api id="Overload:System.AddIn.Pipeline.ContractHandle.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose" />
        <element api="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="contract">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)">
      <topicdata group="api" />
      <apidata name="AppDomainOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.AppDomain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.AddIn.Pipeline.ContractHandle.Contract">
      <topicdata group="api" />
      <apidata name="Contract" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Contract" />
      <returns>
        <type api="T:System.AddIn.Contract.IContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)">
      <topicdata group="api" />
      <apidata name="ContractOwnsAppDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contract">
          <type api="T:System.AddIn.Contract.IContract" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.AppDomain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.AddIn.Pipeline.ContractHandle.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.ContractHandle.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.ContractHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.FrameworkElementAdapters">
      <topicdata group="api" />
      <apidata name="FrameworkElementAdapters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <element api="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </elements>
      <containers>
        <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.FrameworkElementAdapters">
      <topicdata name="FrameworkElementAdapters" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
      <apidata name="FrameworkElementAdapters" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)" />
        <element api="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)" />
      </elements>
      <containers>
        <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.FrameworkElementAdapters" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.FrameworkElementAdapters.ContractToViewAdapter(System.AddIn.Contract.INativeHandleContract)">
      <topicdata group="api" />
      <apidata name="ContractToViewAdapter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nativeHandleContract">
          <type api="T:System.AddIn.Contract.INativeHandleContract" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.FrameworkElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.FrameworkElementAdapters" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.AddIn.Pipeline.FrameworkElementAdapters.ViewToContractAdapter(System.Windows.FrameworkElement)">
      <topicdata group="api" />
      <apidata name="ViewToContractAdapter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.AddIn.Contract.INativeHandleContract" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.FrameworkElementAdapters" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.AddIn.Pipeline.HostAdapterAttribute">
      <topicdata group="api" />
      <apidata name="HostAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.HostAdapterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.HostAdapterAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.HostAdapterAttribute">
      <topicdata name="HostAdapterAttribute" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.HostAdapterAttribute" />
      <apidata name="HostAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.HostAdapterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.HostAdapterAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.HostAdapterAttribute">
      <topicdata name="HostAdapterAttribute" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.HostAdapterAttribute" />
      <apidata name="HostAdapterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.AddIn.Pipeline.HostAdapterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.HostAdapterAttribute" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.HostAdapterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.AddIn" module="System.AddIn" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.HostAdapterAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.AddIn.Pipeline.QualificationDataAttribute">
      <topicdata group="api" />
      <apidata name="QualificationDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.AddIn.Pipeline.QualificationDataAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.AddIn.Pipeline.QualificationDataAttribute.Name" />
        <element api="P:System.AddIn.Pipeline.QualificationDataAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.AddIn.Pipeline.QualificationDataAttribute">
      <topicdata name="QualificationDataAttribute" group="list" subgroup="Methods" typeTopicId="T:System.AddIn.Pipeline.QualificationDataAttribute" />
      <apidata name="QualificationDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.QualificationDataAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.AddIn.Pipeline.QualificationDataAttribute">
      <topicdata name="QualificationDataAttribute" group="list" subgroup="Properties" typeTopicId="T:System.AddIn.Pipeline.QualificationDataAttribute" />
      <apidata name="QualificationDataAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.AddIn.Pipeline.QualificationDataAttribute.Name" />
        <element api="P:System.AddIn.Pipeline.QualificationDataAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.QualificationDataAttribute" />
      </containers>
    </api>
    <api id="M:System.AddIn.Pipeline.QualificationDataAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.QualificationDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.AddIn.Pipeline.QualificationDataAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.QualificationDataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.AddIn.Pipeline.QualificationDataAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.AddIn.Contract" module="System.AddIn.Contract" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.AddIn.Pipeline" />
        <type api="T:System.AddIn.Pipeline.QualificationDataAttribute" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>