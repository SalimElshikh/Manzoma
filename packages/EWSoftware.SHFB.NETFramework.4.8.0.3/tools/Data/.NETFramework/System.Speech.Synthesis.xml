<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Speech">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Speech.Synthesis">
      <topicdata group="api" />
      <apidata name="System.Speech.Synthesis" group="namespace" />
      <elements>
        <element api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
        <element api="T:System.Speech.Synthesis.FilePrompt" />
        <element api="T:System.Speech.Synthesis.InstalledVoice" />
        <element api="T:System.Speech.Synthesis.Prompt" />
        <element api="T:System.Speech.Synthesis.SynthesisMediaType" />
        <element api="T:System.Speech.Synthesis.SynthesisTextFormat" />
        <element api="T:System.Speech.Synthesis.PromptBuilder" />
        <element api="T:System.Speech.Synthesis.PromptEventArgs" />
        <element api="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
        <element api="T:System.Speech.Synthesis.PromptStyle" />
        <element api="T:System.Speech.Synthesis.SayAs" />
        <element api="T:System.Speech.Synthesis.VoiceGender" />
        <element api="T:System.Speech.Synthesis.VoiceAge" />
        <element api="T:System.Speech.Synthesis.PromptRate" />
        <element api="T:System.Speech.Synthesis.PromptVolume" />
        <element api="T:System.Speech.Synthesis.PromptEmphasis" />
        <element api="T:System.Speech.Synthesis.PromptBreak" />
        <element api="T:System.Speech.Synthesis.SpeechSynthesizer" />
        <element api="T:System.Speech.Synthesis.SynthesizerState" />
        <element api="T:System.Speech.Synthesis.SynthesizerEmphasis" />
        <element api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
        <element api="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
        <element api="T:System.Speech.Synthesis.StateChangedEventArgs" />
        <element api="T:System.Speech.Synthesis.VoiceInfo" />
        <element api="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
        <element api="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
        <element api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      </elements>
    </api>
    <api id="T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata group="api" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata name="BookmarkReachedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.BookmarkReachedEventArgs">
      <topicdata name="BookmarkReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      <apidata name="BookmarkReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.BookmarkReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.BookmarkReachedEventArgs.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bookmark" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.FilePrompt">
      <topicdata group="api" />
      <apidata name="FilePrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.FilePrompt.#ctor">
          <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)" />
          <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)" />
        </element>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.FilePrompt">
      <topicdata name="FilePrompt" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.FilePrompt" />
      <apidata name="FilePrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.FilePrompt">
      <topicdata name="FilePrompt" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.FilePrompt" />
      <apidata name="FilePrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.FilePrompt.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)" />
        <element api="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.FilePrompt.#ctor(System.String,System.Speech.Synthesis.SynthesisMediaType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.FilePrompt.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.FilePrompt.#ctor(System.Uri,System.Speech.Synthesis.SynthesisMediaType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.FilePrompt.#ctor" />
      <parameters>
        <parameter name="promptFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.InstalledVoice">
      <topicdata group="api" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.InstalledVoice">
      <topicdata name="InstalledVoice" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.InstalledVoice.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.InstalledVoice">
      <topicdata name="InstalledVoice" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.InstalledVoice" />
      <apidata name="InstalledVoice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Synthesis.InstalledVoice.Enabled" />
        <element api="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.InstalledVoice.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.InstalledVoice.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.InstalledVoice.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.InstalledVoice.VoiceInfo">
      <topicdata group="api" />
      <apidata name="VoiceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VoiceInfo" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata group="api" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata name="PhonemeReachedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PhonemeReachedEventArgs">
      <topicdata name="PhonemeReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      <apidata name="PhonemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme" />
        <element api="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Emphasis" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.NextPhoneme">
      <topicdata group="api" />
      <apidata name="NextPhoneme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextPhoneme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PhonemeReachedEventArgs.Phoneme">
      <topicdata group="api" />
      <apidata name="Phoneme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Phoneme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.Prompt">
      <topicdata group="api" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Synthesis.FilePrompt" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.Prompt.#ctor">
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
          <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
        </element>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.Prompt">
      <topicdata name="Prompt" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.Prompt" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.Prompt">
      <topicdata name="Prompt" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.Prompt" />
      <apidata name="Prompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Synthesis.Prompt.IsCompleted" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.Prompt.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String)" />
        <element api="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.Prompt.#ctor" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="media">
          <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.Prompt.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptBreak">
      <topicdata group="api" />
      <apidata name="PromptBreak" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptBreak.None" />
        <element api="F:System.Speech.Synthesis.PromptBreak.ExtraSmall" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Small" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Medium" />
        <element api="F:System.Speech.Synthesis.PromptBreak.Large" />
        <element api="F:System.Speech.Synthesis.PromptBreak.ExtraLarge" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.ExtraLarge">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLarge" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.ExtraSmall">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSmall" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Large">
      <topicdata group="api" notopic="" />
      <apidata name="Large" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptBreak.Small">
      <topicdata group="api" notopic="" />
      <apidata name="Small" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptBuilder">
      <topicdata group="api" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.#ctor">
          <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.Culture" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.PromptBuilder">
      <topicdata name="PromptBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
        <element api="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        </element>
        <element api="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptBuilder">
      <topicdata name="PromptBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptBuilder" />
      <apidata name="PromptBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <elements>
        <element api="P:System.Speech.Synthesis.PromptBuilder.Culture" />
        <element api="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio">
      <topicdata name="AppendAudio" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak">
      <topicdata name="AppendBreak" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml">
      <topicdata name="AppendSsml" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendText">
      <topicdata name="AppendText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint">
      <topicdata name="AppendTextWithHint" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph">
      <topicdata name="StartParagraph" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence">
      <topicdata name="StartSentence" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice">
      <topicdata name="StartVoice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
        <element api="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AppendAudio" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendAudio" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="alternateText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)">
      <topicdata group="api" />
      <apidata name="AppendBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="strength">
          <type api="T:System.Speech.Synthesis.PromptBreak" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="AppendBreak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="AppendPromptBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlFile">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="AppendSsml" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendSsml" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlFile">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)">
      <topicdata group="api" />
      <apidata name="AppendSsmlMarkup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ssmlMarkup">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="emphasis">
          <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rate">
          <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)">
      <topicdata group="api" />
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="volume">
          <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithAlias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="substitute">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)">
      <topicdata group="api" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sayAs">
          <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithHint" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sayAs">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendTextWithPronunciation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pronunciation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.ClearContent">
      <topicdata group="api" />
      <apidata name="ClearContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptBuilder.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Culture" />
      <setter name="set_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndParagraph">
      <topicdata group="api" />
      <apidata name="EndParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndSentence">
      <topicdata group="api" />
      <apidata name="EndSentence" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndStyle">
      <topicdata group="api" />
      <apidata name="EndStyle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.EndVoice">
      <topicdata group="api" />
      <apidata name="EndVoice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptBuilder.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartParagraph">
      <topicdata group="api" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartParagraph" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartSentence">
      <topicdata group="api" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartSentence" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)">
      <topicdata group="api" />
      <apidata name="StartStyle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="style">
          <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="voice">
          <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)">
      <topicdata group="api" />
      <apidata name="StartVoice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.PromptBuilder.StartVoice" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptBuilder.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptEmphasis">
      <topicdata group="api" />
      <apidata name="PromptEmphasis" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptEmphasis.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Strong" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Moderate" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.None" />
        <element api="F:System.Speech.Synthesis.PromptEmphasis.Reduced" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Moderate">
      <topicdata group="api" notopic="" />
      <apidata name="Moderate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Reduced">
      <topicdata group="api" notopic="" />
      <apidata name="Reduced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptEmphasis.Strong">
      <topicdata group="api" notopic="" />
      <apidata name="Strong" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata group="api" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
          <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata name="PromptEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.PromptEventArgs" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptEventArgs">
      <topicdata name="PromptEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptEventArgs" />
      <apidata name="PromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptEventArgs.Prompt">
      <topicdata group="api" />
      <apidata name="Prompt" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Prompt" />
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptRate">
      <topicdata group="api" />
      <apidata name="PromptRate" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptRate.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptRate.ExtraFast" />
        <element api="F:System.Speech.Synthesis.PromptRate.Fast" />
        <element api="F:System.Speech.Synthesis.PromptRate.Medium" />
        <element api="F:System.Speech.Synthesis.PromptRate.Slow" />
        <element api="F:System.Speech.Synthesis.PromptRate.ExtraSlow" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.ExtraFast">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraFast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.ExtraSlow">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSlow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Fast">
      <topicdata group="api" notopic="" />
      <apidata name="Fast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptRate.Slow">
      <topicdata group="api" notopic="" />
      <apidata name="Slow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptStyle">
      <topicdata group="api" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptStyle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Synthesis.PromptStyle.#ctor">
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)" />
          <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)" />
        </element>
        <element api="P:System.Speech.Synthesis.PromptStyle.Emphasis" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Rate" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.PromptStyle">
      <topicdata name="PromptStyle" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.PromptStyle" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptStyle.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.PromptStyle">
      <topicdata name="PromptStyle" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.PromptStyle" />
      <apidata name="PromptStyle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Speech.Synthesis.PromptStyle.#ctor" />
      <elements>
        <element api="P:System.Speech.Synthesis.PromptStyle.Emphasis" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Rate" />
        <element api="P:System.Speech.Synthesis.PromptStyle.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.PromptStyle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)" />
        <element api="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptEmphasis)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="emphasis">
          <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptRate)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="rate">
          <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.PromptStyle.#ctor(System.Speech.Synthesis.PromptVolume)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Synthesis.PromptStyle.#ctor" />
      <parameters>
        <parameter name="volume">
          <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Emphasis" />
      <setter name="set_Emphasis" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Rate" />
      <setter name="set_Rate" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptRate" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.PromptStyle.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Volume" />
      <setter name="set_Volume" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptStyle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.PromptVolume">
      <topicdata group="api" />
      <apidata name="PromptVolume" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.PromptVolume.NotSet" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Silent" />
        <element api="F:System.Speech.Synthesis.PromptVolume.ExtraSoft" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Soft" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Medium" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Loud" />
        <element api="F:System.Speech.Synthesis.PromptVolume.ExtraLoud" />
        <element api="F:System.Speech.Synthesis.PromptVolume.Default" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.ExtraLoud">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraLoud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.ExtraSoft">
      <topicdata group="api" notopic="" />
      <apidata name="ExtraSoft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Loud">
      <topicdata group="api" notopic="" />
      <apidata name="Loud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Silent">
      <topicdata group="api" notopic="" />
      <apidata name="Silent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.PromptVolume.Soft">
      <topicdata group="api" notopic="" />
      <apidata name="Soft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.PromptVolume" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SayAs">
      <topicdata group="api" />
      <apidata name="SayAs" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.SayAs.SpellOut" />
        <element api="F:System.Speech.Synthesis.SayAs.NumberOrdinal" />
        <element api="F:System.Speech.Synthesis.SayAs.NumberCardinal" />
        <element api="F:System.Speech.Synthesis.SayAs.Date" />
        <element api="F:System.Speech.Synthesis.SayAs.DayMonthYear" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthDayYear" />
        <element api="F:System.Speech.Synthesis.SayAs.YearMonthDay" />
        <element api="F:System.Speech.Synthesis.SayAs.YearMonth" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthYear" />
        <element api="F:System.Speech.Synthesis.SayAs.MonthDay" />
        <element api="F:System.Speech.Synthesis.SayAs.DayMonth" />
        <element api="F:System.Speech.Synthesis.SayAs.Year" />
        <element api="F:System.Speech.Synthesis.SayAs.Month" />
        <element api="F:System.Speech.Synthesis.SayAs.Day" />
        <element api="F:System.Speech.Synthesis.SayAs.Time" />
        <element api="F:System.Speech.Synthesis.SayAs.Time24" />
        <element api="F:System.Speech.Synthesis.SayAs.Time12" />
        <element api="F:System.Speech.Synthesis.SayAs.Telephone" />
        <element api="F:System.Speech.Synthesis.SayAs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Date">
      <topicdata group="api" notopic="" />
      <apidata name="Date" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Day">
      <topicdata group="api" notopic="" />
      <apidata name="Day" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.DayMonth">
      <topicdata group="api" notopic="" />
      <apidata name="DayMonth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.DayMonthYear">
      <topicdata group="api" notopic="" />
      <apidata name="DayMonthYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Month">
      <topicdata group="api" notopic="" />
      <apidata name="Month" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthDay">
      <topicdata group="api" notopic="" />
      <apidata name="MonthDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthDayYear">
      <topicdata group="api" notopic="" />
      <apidata name="MonthDayYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.MonthYear">
      <topicdata group="api" notopic="" />
      <apidata name="MonthYear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.NumberCardinal">
      <topicdata group="api" notopic="" />
      <apidata name="NumberCardinal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.NumberOrdinal">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOrdinal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.SpellOut">
      <topicdata group="api" notopic="" />
      <apidata name="SpellOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Telephone">
      <topicdata group="api" notopic="" />
      <apidata name="Telephone" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time">
      <topicdata group="api" notopic="" />
      <apidata name="Time" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time12">
      <topicdata group="api" notopic="" />
      <apidata name="Time12" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Time24">
      <topicdata group="api" notopic="" />
      <apidata name="Time24" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.Year">
      <topicdata group="api" notopic="" />
      <apidata name="Year" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.YearMonth">
      <topicdata group="api" notopic="" />
      <apidata name="YearMonth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SayAs.YearMonthDay">
      <topicdata group="api" notopic="" />
      <apidata name="YearMonthDay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SayAs" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="SpeakCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <topicdata name="SpeakCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      <apidata name="SpeakCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeakCompletedEventArgs">
      <topicdata name="SpeakCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      <apidata name="SpeakCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata group="api" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata name="SpeakProgressEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeakProgressEventArgs">
      <topicdata name="SpeakProgressEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      <apidata name="SpeakProgressEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
        <element api="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount">
      <topicdata group="api" />
      <apidata name="CharacterCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CharacterCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition">
      <topicdata group="api" />
      <apidata name="CharacterPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CharacterPosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <topicdata group="api" />
      <apidata name="SpeakStartedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <topicdata name="SpeakStartedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      <apidata name="SpeakStartedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeakStartedEventArgs">
      <topicdata name="SpeakStartedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      <apidata name="SpeakStartedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata group="api" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Pause" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Resume" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)" />
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
        </element>
        <element api="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
          <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
        </element>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <elements>
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Rate" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.State" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Voice" />
        <element api="P:System.Speech.Synthesis.SpeechSynthesizer.Volume" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" />
      </containers>
    </api>
    <api id="Events.T:System.Speech.Synthesis.SpeechSynthesizer">
      <topicdata name="SpeechSynthesizer" group="list" subgroup="Events" typeTopicId="T:System.Speech.Synthesis.SpeechSynthesizer" />
      <apidata name="SpeechSynthesizer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor" />
      <elements>
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached" />
        <element api="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
      <topicdata name="GetInstalledVoices" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints">
      <topicdata name="SelectVoiceByHints" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile">
      <topicdata name="SetOutputToWaveFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak">
      <topicdata name="Speak" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Speak" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync">
      <topicdata name="SpeakAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)" />
        <element api="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name="AddLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached">
      <topicdata group="api" />
      <apidata name="BookmarkReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BookmarkReached" />
      <remover name="remove_BookmarkReached" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.BookmarkReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt">
      <topicdata group="api" />
      <apidata name="GetCurrentlySpokenPrompt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices">
      <topicdata group="api" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GetInstalledVoices" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.InstalledVoice" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Pause">
      <topicdata group="api" />
      <apidata name="Pause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached">
      <topicdata group="api" />
      <apidata name="PhonemeReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_PhonemeReached" />
      <remover name="remove_PhonemeReached" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.PhonemeReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Rate">
      <topicdata group="api" />
      <apidata name="Rate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Rate" />
      <setter name="set_Rate" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon(System.Uri)">
      <topicdata group="api" />
      <apidata name="RemoveLexicon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Resume">
      <topicdata group="api" />
      <apidata name="Resume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoice(System.String)">
      <topicdata group="api" />
      <apidata name="SelectVoice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="SelectVoiceByHints" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="gender">
          <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
        </parameter>
        <parameter name="age">
          <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
        </parameter>
        <parameter name="voiceAlternate">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetOutputToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioDestination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="formatInfo">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice">
      <topicdata group="api" />
      <apidata name="SetOutputToDefaultAudioDevice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull">
      <topicdata group="api" />
      <apidata name="SetOutputToNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile(System.String,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="formatInfo">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SetOutputToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioDestination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.Speak(System.String)">
      <topicdata group="api" />
      <apidata name="Speak" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.Speak" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.Speech.Synthesis.PromptBuilder)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="promptBuilder">
          <type api="T:System.Speech.Synthesis.PromptBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel(System.Speech.Synthesis.Prompt)">
      <topicdata group="api" />
      <apidata name="SpeakAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prompt">
          <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll">
      <topicdata group="api" />
      <apidata name="SpeakAsyncCancelAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted">
      <topicdata group="api" />
      <apidata name="SpeakCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeakCompleted" />
      <remover name="remove_SpeakCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress">
      <topicdata group="api" />
      <apidata name="SpeakProgress" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeakProgress" />
      <remover name="remove_SpeakProgress" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakProgressEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakSsml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync(System.String)">
      <topicdata group="api" />
      <apidata name="SpeakSsmlAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textToSpeak">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Synthesis.Prompt" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted">
      <topicdata group="api" />
      <apidata name="SpeakStarted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeakStarted" />
      <remover name="remove_SpeakStarted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.SpeakStartedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.StateChanged">
      <topicdata group="api" />
      <apidata name="StateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_StateChanged" />
      <remover name="remove_StateChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.VisemeReached">
      <topicdata group="api" />
      <apidata name="VisemeReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_VisemeReached" />
      <remover name="remove_VisemeReached" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Voice">
      <topicdata group="api" />
      <apidata name="Voice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Voice" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Speech.Synthesis.SpeechSynthesizer.VoiceChange">
      <topicdata group="api" />
      <apidata name="VoiceChange" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_VoiceChange" />
      <remover name="remove_VoiceChange" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.SpeechSynthesizer.Volume">
      <topicdata group="api" />
      <apidata name="Volume" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Volume" />
      <setter name="set_Volume" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SpeechSynthesizer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata group="api" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState" />
        <element api="P:System.Speech.Synthesis.StateChangedEventArgs.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.StateChangedEventArgs.PreviousState">
      <topicdata group="api" />
      <apidata name="PreviousState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousState" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.StateChangedEventArgs.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.StateChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SynthesisMediaType">
      <topicdata group="api" />
      <apidata name="SynthesisMediaType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.Text" />
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.Ssml" />
        <element api="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.Ssml">
      <topicdata group="api" notopic="" />
      <apidata name="Ssml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisMediaType.WaveAudio">
      <topicdata group="api" notopic="" />
      <apidata name="WaveAudio" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisMediaType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SynthesisTextFormat">
      <topicdata group="api" />
      <apidata name="SynthesisTextFormat" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesisTextFormat.Text" />
        <element api="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisTextFormat.Ssml">
      <topicdata group="api" notopic="" />
      <apidata name="Ssml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesisTextFormat.Text">
      <topicdata group="api" notopic="" />
      <apidata name="Text" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesisTextFormat" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SynthesizerEmphasis">
      <topicdata group="api" />
      <apidata name="SynthesizerEmphasis" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed" />
        <element api="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerEmphasis.Emphasized">
      <topicdata group="api" notopic="" />
      <apidata name="Emphasized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerEmphasis.Stressed">
      <topicdata group="api" notopic="" />
      <apidata name="Stressed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.SynthesizerState">
      <topicdata group="api" />
      <apidata name="SynthesizerState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.SynthesizerState.Ready" />
        <element api="F:System.Speech.Synthesis.SynthesizerState.Speaking" />
        <element api="F:System.Speech.Synthesis.SynthesizerState.Paused" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Paused">
      <topicdata group="api" notopic="" />
      <apidata name="Paused" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Ready">
      <topicdata group="api" notopic="" />
      <apidata name="Ready" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.SynthesizerState.Speaking">
      <topicdata group="api" notopic="" />
      <apidata name="Speaking" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.SynthesizerState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata group="api" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata name="VisemeReachedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VisemeReachedEventArgs">
      <topicdata name="VisemeReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      <apidata name="VisemeReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme" />
        <element api="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Emphasis">
      <topicdata group="api" />
      <apidata name="Emphasis" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Emphasis" />
      <returns>
        <type api="T:System.Speech.Synthesis.SynthesizerEmphasis" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.NextViseme">
      <topicdata group="api" />
      <apidata name="NextViseme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextViseme" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VisemeReachedEventArgs.Viseme">
      <topicdata group="api" />
      <apidata name="Viseme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Viseme" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VisemeReachedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.VoiceAge">
      <topicdata group="api" />
      <apidata name="VoiceAge" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.VoiceAge.NotSet" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Child" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Teen" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Adult" />
        <element api="F:System.Speech.Synthesis.VoiceAge.Senior" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Adult">
      <topicdata group="api" notopic="" />
      <apidata name="Adult" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Child">
      <topicdata group="api" notopic="" />
      <apidata name="Child" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Senior">
      <topicdata group="api" notopic="" />
      <apidata name="Senior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>65</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceAge.Teen">
      <topicdata group="api" notopic="" />
      <apidata name="Teen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata group="api" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Synthesis.PromptEventArgs" ref="true" />
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata name="VoiceChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VoiceChangeEventArgs">
      <topicdata name="VoiceChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      <apidata name="VoiceChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Synthesis.PromptEventArgs.Prompt" />
        <element api="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceChangeEventArgs.Voice">
      <topicdata group="api" />
      <apidata name="Voice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Voice" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.VoiceGender">
      <topicdata group="api" />
      <apidata name="VoiceGender" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Synthesis.VoiceGender.NotSet" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Male" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Female" />
        <element api="F:System.Speech.Synthesis.VoiceGender.Neutral" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Female">
      <topicdata group="api" notopic="" />
      <apidata name="Female" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Male">
      <topicdata group="api" notopic="" />
      <apidata name="Male" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.Neutral">
      <topicdata group="api" notopic="" />
      <apidata name="Neutral" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
    </api>
    <api id="F:System.Speech.Synthesis.VoiceGender.NotSet">
      <topicdata group="api" notopic="" />
      <apidata name="NotSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </containers>
    </api>
    <api id="T:System.Speech.Synthesis.VoiceInfo">
      <topicdata group="api" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Age" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Culture" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Description" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Gender" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Id" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Name" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
      </containers>
    </api>
    <api id="Methods.T:System.Speech.Synthesis.VoiceInfo">
      <topicdata name="VoiceInfo" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)" />
        <element api="M:System.Speech.Synthesis.VoiceInfo.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Speech.Synthesis.VoiceInfo">
      <topicdata name="VoiceInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Synthesis.VoiceInfo" />
      <apidata name="VoiceInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Age" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Culture" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Description" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Gender" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Id" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.Name" />
        <element api="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.AdditionalInfo">
      <topicdata group="api" />
      <apidata name="AdditionalInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdditionalInfo" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Age">
      <topicdata group="api" />
      <apidata name="Age" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Age" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceAge" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.VoiceInfo.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Gender">
      <topicdata group="api" />
      <apidata name="Gender" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Gender" />
      <returns>
        <type api="T:System.Speech.Synthesis.VoiceGender" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Speech.Synthesis.VoiceInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Speech.Synthesis.VoiceInfo.SupportedAudioFormats">
      <topicdata group="api" />
      <apidata name="SupportedAudioFormats" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportedAudioFormats" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Synthesis" />
        <type api="T:System.Speech.Synthesis.VoiceInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>