<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Xml.Linq">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.Linq.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Xml.Linq">
      <topicdata group="api" />
      <apidata name="System.Xml.Linq" group="namespace" />
      <elements>
        <element api="T:System.Xml.Linq.XName" />
        <element api="T:System.Xml.Linq.XNamespace" />
        <element api="T:System.Xml.Linq.XObject" />
        <element api="T:System.Xml.Linq.XObjectChange" />
        <element api="T:System.Xml.Linq.XObjectChangeEventArgs" />
        <element api="T:System.Xml.Linq.XNode" />
        <element api="T:System.Xml.Linq.XNodeDocumentOrderComparer" />
        <element api="T:System.Xml.Linq.XNodeEqualityComparer" />
        <element api="T:System.Xml.Linq.XText" />
        <element api="T:System.Xml.Linq.XCData" />
        <element api="T:System.Xml.Linq.XContainer" />
        <element api="T:System.Xml.Linq.XElement" />
        <element api="T:System.Xml.Linq.LoadOptions" />
        <element api="T:System.Xml.Linq.SaveOptions" />
        <element api="T:System.Xml.Linq.ReaderOptions" />
        <element api="T:System.Xml.Linq.XDocument" />
        <element api="T:System.Xml.Linq.XComment" />
        <element api="T:System.Xml.Linq.XProcessingInstruction" />
        <element api="T:System.Xml.Linq.XDeclaration" />
        <element api="T:System.Xml.Linq.XDocumentType" />
        <element api="T:System.Xml.Linq.XAttribute" />
        <element api="T:System.Xml.Linq.XStreamingElement" />
        <element api="T:System.Xml.Linq.Extensions" />
      </elements>
    </api>
    <api id="T:System.Xml.Linq.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Xml.Linq.Extensions.Ancestors">
          <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.AncestorsAndSelf">
          <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.Attributes">
          <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
        <element api="Overload:System.Xml.Linq.Extensions.Descendants">
          <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.DescendantsAndSelf">
          <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.Elements">
          <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Xml.Linq.Extensions.Remove">
          <element api="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})" />
          <element api="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Linq.Extensions">
      <topicdata name="Extensions" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.Extensions" />
      <apidata name="Extensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Xml.Linq.Extensions.Ancestors">
          <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.AncestorsAndSelf">
          <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.Attributes">
          <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
        <element api="Overload:System.Xml.Linq.Extensions.Descendants">
          <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.DescendantsAndSelf">
          <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
          <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.Extensions.Elements">
          <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="Overload:System.Xml.Linq.Extensions.Remove">
          <element api="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})" />
          <element api="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.Ancestors">
      <topicdata name="Ancestors" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.AncestorsAndSelf">
      <topicdata name="AncestorsAndSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
        <element api="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.Attributes">
      <topicdata name="Attributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
        <element api="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.Descendants">
      <topicdata name="Descendants" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.DescendantsAndSelf">
      <topicdata name="DescendantsAndSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})" />
        <element api="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.Elements">
      <topicdata name="Elements" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Elements" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.Extensions.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})" />
        <element api="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Ancestors" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Ancestors" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <topicdata group="api" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.AncestorsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.AncestorsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Attributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Attributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="DescendantNodes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <topicdata group="api" />
      <apidata name="DescendantNodesAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Descendants" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Descendants" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
      <topicdata group="api" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.DescendantsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.DescendantsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XElement" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Elements" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Elements" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="InDocumentOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Nodes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XContainer" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.Extensions.Remove" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.Extensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Xml.Linq.LoadOptions">
      <topicdata group="api" />
      <apidata name="LoadOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Linq.LoadOptions.None" />
        <element api="F:System.Xml.Linq.LoadOptions.PreserveWhitespace" />
        <element api="F:System.Xml.Linq.LoadOptions.SetBaseUri" />
        <element api="F:System.Xml.Linq.LoadOptions.SetLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Linq.LoadOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.LoadOptions.PreserveWhitespace">
      <topicdata group="api" notopic="" />
      <apidata name="PreserveWhitespace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.LoadOptions.SetBaseUri">
      <topicdata group="api" notopic="" />
      <apidata name="SetBaseUri" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.LoadOptions.SetLineInfo">
      <topicdata group="api" notopic="" />
      <apidata name="SetLineInfo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.ReaderOptions">
      <topicdata group="api" />
      <apidata name="ReaderOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Linq.ReaderOptions.None" />
        <element api="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Linq.ReaderOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.ReaderOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.ReaderOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.ReaderOptions.OmitDuplicateNamespaces">
      <topicdata group="api" notopic="" />
      <apidata name="OmitDuplicateNamespaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.ReaderOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.ReaderOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.SaveOptions">
      <topicdata group="api" />
      <apidata name="SaveOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Linq.SaveOptions.None" />
        <element api="F:System.Xml.Linq.SaveOptions.DisableFormatting" />
        <element api="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Linq.SaveOptions.DisableFormatting">
      <topicdata group="api" notopic="" />
      <apidata name="DisableFormatting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.SaveOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces">
      <topicdata group="api" notopic="" />
      <apidata name="OmitDuplicateNamespaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XAttribute">
      <topicdata group="api" />
      <apidata name="XAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)" source="extension">
          <apidata name="GetSchemaInfo" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.Schema.IXmlSchemaInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XAttribute.#ctor">
          <element api="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
          <element api="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
        </element>
        <element api="Overload:System.Xml.Linq.XAttribute.op_Explicit">
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
        </element>
        <element api="M:System.Xml.Linq.XAttribute.Remove" />
        <element api="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <element api="M:System.Xml.Linq.XAttribute.ToString" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XAttribute.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XAttribute.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XAttribute.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XAttribute.EmptySequence" />
        <element api="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
        <element api="P:System.Xml.Linq.XAttribute.Name" />
        <element api="P:System.Xml.Linq.XAttribute.NextAttribute" />
        <element api="P:System.Xml.Linq.XAttribute.NodeType" />
        <element api="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
        <element api="P:System.Xml.Linq.XAttribute.Value" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XAttribute">
      <topicdata name="XAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XAttribute" />
      <apidata name="XAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XAttribute)" source="extension">
          <apidata name="GetSchemaInfo" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.Schema.IXmlSchemaInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XAttribute,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.Linq.XAttribute.Remove" />
        <element api="M:System.Xml.Linq.XAttribute.SetValue(System.Object)" />
        <element api="M:System.Xml.Linq.XAttribute.ToString" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XAttribute.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XAttribute.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XAttribute.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" />
      </containers>
    </api>
    <api id="Operators.T:System.Xml.Linq.XAttribute">
      <topicdata name="XAttribute" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Xml.Linq.XAttribute" />
      <apidata name="XAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Xml.Linq.XAttribute.op_Explicit">
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
          <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XAttribute">
      <topicdata name="XAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XAttribute" />
      <apidata name="XAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XAttribute.EmptySequence" />
        <element api="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration" />
        <element api="P:System.Xml.Linq.XAttribute.Name" />
        <element api="P:System.Xml.Linq.XAttribute.NextAttribute" />
        <element api="P:System.Xml.Linq.XAttribute.NodeType" />
        <element api="P:System.Xml.Linq.XAttribute.PreviousAttribute" />
        <element api="P:System.Xml.Linq.XAttribute.Value" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XAttribute">
      <topicdata name="XAttribute" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XAttribute" />
      <apidata name="XAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)" />
        <element api="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XAttribute.op_Explicit">
      <topicdata name="Explicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32" />
        <element api="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XAttribute)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XAttribute.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.#ctor(System.Xml.Linq.XName,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.EmptySequence">
      <topicdata group="api" />
      <apidata name="EmptySequence" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmptySequence" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.IsNamespaceDeclaration">
      <topicdata group="api" />
      <apidata name="IsNamespaceDeclaration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNamespaceDeclaration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.NextAttribute">
      <topicdata group="api" />
      <apidata name="NextAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextAttribute" />
      <returns>
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.String">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Boolean">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Boolean}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int32">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int32}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt32">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt32}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Int64">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Int64}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.UInt64">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.UInt64}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Single">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Single}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Double">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Double}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Decimal">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Decimal}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTime">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTime}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.DateTimeOffset">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.DateTimeOffset}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.TimeSpan">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.TimeSpan}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Guid">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.op_Explicit(System.Xml.Linq.XAttribute)~System.Nullable{System.Guid}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XAttribute.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.PreviousAttribute">
      <topicdata group="api" />
      <apidata name="PreviousAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousAttribute" />
      <returns>
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.Remove">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.SetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XAttribute.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XCData">
      <topicdata group="api" />
      <apidata name="XCData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XText" ref="true" />
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XCData.#ctor">
          <element api="M:System.Xml.Linq.XCData.#ctor(System.String)" />
          <element api="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)" />
        </element>
        <element api="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XCData.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XCData.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XCData.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XCData.NodeType" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XText.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XCData">
      <topicdata name="XCData" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XCData" />
      <apidata name="XCData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XCData.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XCData.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XCData.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XCData.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XCData">
      <topicdata name="XCData" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XCData" />
      <apidata name="XCData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XCData.NodeType" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XText.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XCData">
      <topicdata name="XCData" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XCData" />
      <apidata name="XCData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XCData.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XCData.#ctor(System.String)" />
        <element api="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XCData.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XCData.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XCData.#ctor(System.Xml.Linq.XCData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XCData.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XCData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XCData.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XText.NodeType">
          <type api="T:System.Xml.Linq.XText" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XCData.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XText" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XCData" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XComment">
      <topicdata group="api" />
      <apidata name="XComment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XComment.#ctor">
          <element api="M:System.Xml.Linq.XComment.#ctor(System.String)" />
          <element api="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)" />
        </element>
        <element api="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XComment.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XComment.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XComment.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XComment.NodeType" />
        <element api="P:System.Xml.Linq.XComment.Value" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XComment">
      <topicdata name="XComment" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XComment" />
      <apidata name="XComment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XComment.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XComment.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XComment.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XComment.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XComment">
      <topicdata name="XComment" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XComment" />
      <apidata name="XComment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XComment.NodeType" />
        <element api="P:System.Xml.Linq.XComment.Value" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XComment">
      <topicdata name="XComment" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XComment" />
      <apidata name="XComment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XComment.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XComment.#ctor(System.String)" />
        <element api="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XComment.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XComment.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XComment.#ctor(System.Xml.Linq.XComment)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XComment.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XComment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XComment.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XComment.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XComment.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XComment" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XContainer">
      <topicdata group="api" />
      <apidata name="XContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Linq.XElement" ref="true" />
          <type api="T:System.Xml.Linq.XDocument" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XContainer.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XContainer.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XContainer.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XContainer.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XContainer.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XContainer.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XContainer">
      <topicdata name="XContainer" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XContainer" />
      <apidata name="XContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XContainer.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XContainer.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XContainer.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XContainer.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XContainer.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XContainer.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XContainer.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XContainer">
      <topicdata name="XContainer" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XContainer" />
      <apidata name="XContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XContainer">
      <topicdata name="XContainer" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XContainer" />
      <apidata name="XContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XContainer.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
        <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XContainer.AddFirst">
      <topicdata name="AddFirst" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddFirst" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
        <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XContainer.Descendants">
      <topicdata name="Descendants" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XContainer.Descendants" />
        <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XContainer.Elements">
      <topicdata name="Elements" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Elements" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XContainer.Elements" />
        <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XContainer.ReplaceNodes">
      <topicdata name="ReplaceNodes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReplaceNodes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
        <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Add(System.Object[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.AddFirst(System.Object)">
      <topicdata group="api" />
      <apidata name="AddFirst" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.AddFirst" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddFirst" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.AddFirst" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.CreateWriter">
      <topicdata group="api" />
      <apidata name="CreateWriter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.DescendantNodes">
      <topicdata group="api" />
      <apidata name="DescendantNodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Descendants">
      <topicdata group="api" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Descendants" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Descendants" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Descendants" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Element" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Elements">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Elements" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Elements" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.Elements" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XContainer.FirstNode">
      <topicdata group="api" />
      <apidata name="FirstNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstNode" />
      <returns>
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XContainer.LastNode">
      <topicdata group="api" />
      <apidata name="LastNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastNode" />
      <returns>
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.Nodes">
      <topicdata group="api" />
      <apidata name="Nodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.RemoveNodes">
      <topicdata group="api" />
      <apidata name="RemoveNodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)">
      <topicdata group="api" />
      <apidata name="ReplaceNodes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.ReplaceNodes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])">
      <topicdata group="api" />
      <apidata name="ReplaceNodes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XContainer.ReplaceNodes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XDeclaration">
      <topicdata group="api" />
      <apidata name="XDeclaration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XDeclaration.#ctor">
          <element api="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)" />
          <element api="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Linq.XDeclaration.ToString" />
        <element api="P:System.Xml.Linq.XDeclaration.Encoding" />
        <element api="P:System.Xml.Linq.XDeclaration.Standalone" />
        <element api="P:System.Xml.Linq.XDeclaration.Version" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XDeclaration">
      <topicdata name="XDeclaration" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XDeclaration" />
      <apidata name="XDeclaration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.Linq.XDeclaration.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XDeclaration">
      <topicdata name="XDeclaration" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XDeclaration" />
      <apidata name="XDeclaration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XDeclaration.Encoding" />
        <element api="P:System.Xml.Linq.XDeclaration.Standalone" />
        <element api="P:System.Xml.Linq.XDeclaration.Version" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDeclaration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)" />
        <element api="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDeclaration.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDeclaration.#ctor" />
      <parameters>
        <parameter name="version">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="standalone">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDeclaration.#ctor(System.Xml.Linq.XDeclaration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDeclaration.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDeclaration.Encoding">
      <topicdata group="api" />
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Encoding" />
      <setter name="set_Encoding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDeclaration.Standalone">
      <topicdata group="api" />
      <apidata name="Standalone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Standalone" />
      <setter name="set_Standalone" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDeclaration.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDeclaration.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XDocument">
      <topicdata group="api" />
      <apidata name="XDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Linq.XDocument.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XContainer" ref="true" />
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XDocument.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XDocument.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XDocument.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XDocument.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.#ctor">
          <element api="M:System.Xml.Linq.XDocument.#ctor" />
          <element api="M:System.Xml.Linq.XDocument.#ctor(System.Object[])" />
          <element api="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)" />
          <element api="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Load">
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Parse">
          <element api="M:System.Xml.Linq.XDocument.Parse(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Save">
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XDocument.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XDocument.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XDocument.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XDocument.Declaration" />
        <element api="P:System.Xml.Linq.XDocument.DocumentType" />
        <element api="P:System.Xml.Linq.XDocument.NodeType" />
        <element api="P:System.Xml.Linq.XDocument.Root" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XDocument">
      <topicdata name="XDocument" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XDocument" />
      <apidata name="XDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Linq.XDocument.#ctor" />
      <elements>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XDocument.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XDocument.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XDocument.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XDocument.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Load">
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Parse">
          <element api="M:System.Xml.Linq.XDocument.Parse(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Save">
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.String)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XDocument.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XDocument.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XDocument.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocument.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XDocument">
      <topicdata name="XDocument" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XDocument" />
      <apidata name="XDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Linq.XDocument.#ctor" />
      <elements>
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XDocument.Declaration" />
        <element api="P:System.Xml.Linq.XDocument.DocumentType" />
        <element api="P:System.Xml.Linq.XDocument.NodeType" />
        <element api="P:System.Xml.Linq.XDocument.Root" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XDocument">
      <topicdata name="XDocument" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XDocument" />
      <apidata name="XDocument" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Linq.XDocument.#ctor" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDocument.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XDocument.#ctor" />
        <element api="M:System.Xml.Linq.XDocument.#ctor(System.Object[])" />
        <element api="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)" />
        <element api="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDocument.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.String)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDocument.Parse">
      <topicdata name="Parse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Parse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XDocument.Parse(System.String)" />
        <element api="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDocument.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.String)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocument.#ctor" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocument.#ctor" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocument.#ctor" />
      <parameters>
        <parameter name="declaration">
          <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
        </parameter>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocument.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XDocument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocument.Declaration">
      <topicdata group="api" />
      <apidata name="Declaration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Declaration" />
      <setter name="set_Declaration" />
      <returns>
        <type api="T:System.Xml.Linq.XDeclaration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocument.DocumentType">
      <topicdata group="api" />
      <apidata name="DocumentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DocumentType" />
      <returns>
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.String)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocument.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Parse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XDocument.Parse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocument.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Root" />
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.String)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XDocument.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XDocumentType">
      <topicdata group="api" />
      <apidata name="XDocumentType" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XDocumentType.#ctor">
          <element api="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)" />
          <element api="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XDocumentType.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XDocumentType.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XDocumentType.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XDocumentType.InternalSubset" />
        <element api="P:System.Xml.Linq.XDocumentType.Name" />
        <element api="P:System.Xml.Linq.XDocumentType.NodeType" />
        <element api="P:System.Xml.Linq.XDocumentType.PublicId" />
        <element api="P:System.Xml.Linq.XDocumentType.SystemId" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XDocumentType">
      <topicdata name="XDocumentType" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XDocumentType" />
      <apidata name="XDocumentType" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XDocumentType.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XDocumentType.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XDocumentType.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XDocumentType.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XDocumentType">
      <topicdata name="XDocumentType" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XDocumentType" />
      <apidata name="XDocumentType" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XDocumentType.InternalSubset" />
        <element api="P:System.Xml.Linq.XDocumentType.Name" />
        <element api="P:System.Xml.Linq.XDocumentType.NodeType" />
        <element api="P:System.Xml.Linq.XDocumentType.PublicId" />
        <element api="P:System.Xml.Linq.XDocumentType.SystemId" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XDocumentType">
      <topicdata name="XDocumentType" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XDocumentType" />
      <apidata name="XDocumentType" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XDocumentType.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)" />
        <element api="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocumentType.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="publicId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="systemId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="internalSubset">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XDocumentType.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocumentType.InternalSubset">
      <topicdata group="api" />
      <apidata name="InternalSubset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InternalSubset" />
      <setter name="set_InternalSubset" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocumentType.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocumentType.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocumentType.PublicId">
      <topicdata group="api" />
      <apidata name="PublicId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PublicId" />
      <setter name="set_PublicId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XDocumentType.SystemId">
      <topicdata group="api" />
      <apidata name="SystemId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SystemId" />
      <setter name="set_SystemId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XElement">
      <topicdata group="api" />
      <apidata name="XElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XContainer" ref="true" />
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)" source="extension">
          <apidata name="GetSchemaInfo" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.Schema.IXmlSchemaInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XElement.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XElement.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XElement.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.#ctor">
          <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)" />
          <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)" />
          <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)" />
          <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)" />
          <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AncestorsAndSelf">
          <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf" />
          <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XElement.Attributes">
          <element api="M:System.Xml.Linq.XElement.Attributes" />
          <element api="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.DescendantNodesAndSelf" />
        <element api="Overload:System.Xml.Linq.XElement.DescendantsAndSelf">
          <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf" />
          <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.GetDefaultNamespace" />
        <element api="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)" />
        <element api="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)" />
        <element api="Overload:System.Xml.Linq.XElement.Load">
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.op_Explicit">
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Parse">
          <element api="M:System.Xml.Linq.XElement.Parse(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.RemoveAll" />
        <element api="M:System.Xml.Linq.XElement.RemoveAttributes" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceAll">
          <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)" />
          <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ReplaceAttributes">
          <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)" />
          <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Save">
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XElement.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XElement.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XElement.EmptySequence" />
        <element api="P:System.Xml.Linq.XElement.FirstAttribute" />
        <element api="P:System.Xml.Linq.XElement.HasAttributes" />
        <element api="P:System.Xml.Linq.XElement.HasElements" />
        <element api="P:System.Xml.Linq.XElement.IsEmpty" />
        <element api="P:System.Xml.Linq.XElement.LastAttribute" />
        <element api="P:System.Xml.Linq.XElement.Name" />
        <element api="P:System.Xml.Linq.XElement.NodeType" />
        <element api="P:System.Xml.Linq.XElement.Value" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
          <assignment name="IsAny">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Linq.XElement">
      <topicdata name="XElement" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XElement" />
      <apidata name="XElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.Schema.Extensions.GetSchemaInfo(System.Xml.Linq.XElement)" source="extension">
          <apidata name="GetSchemaInfo" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.Schema.IXmlSchemaInfo" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Schema.Extensions.Validate(System.Xml.Linq.XElement,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Boolean)" source="extension" overload="true">
          <apidata name="Validate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="partialValidationType">
              <type api="T:System.Xml.Schema.XmlSchemaObject" ref="true" />
            </parameter>
            <parameter name="schemas">
              <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
            </parameter>
            <parameter name="validationEventHandler">
              <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
            </parameter>
            <parameter name="addSchemaInfo">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.Schema" />
            <type api="T:System.Xml.Schema.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XElement.Add">
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AddFirst">
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.AddFirst(System.Object[])" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.CreateWriter" />
        <element api="M:System.Xml.Linq.XContainer.DescendantNodes" />
        <element api="Overload:System.Xml.Linq.XElement.Descendants">
          <element api="M:System.Xml.Linq.XContainer.Descendants" />
          <element api="M:System.Xml.Linq.XContainer.Descendants(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Element(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XElement.Elements">
          <element api="M:System.Xml.Linq.XContainer.Elements" />
          <element api="M:System.Xml.Linq.XContainer.Elements(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XContainer.Nodes" />
        <element api="M:System.Xml.Linq.XContainer.RemoveNodes" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceNodes">
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object)" />
          <element api="M:System.Xml.Linq.XContainer.ReplaceNodes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AncestorsAndSelf">
          <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf" />
          <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)" />
        <element api="Overload:System.Xml.Linq.XElement.Attributes">
          <element api="M:System.Xml.Linq.XElement.Attributes" />
          <element api="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.DescendantNodesAndSelf" />
        <element api="Overload:System.Xml.Linq.XElement.DescendantsAndSelf">
          <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf" />
          <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.GetDefaultNamespace" />
        <element api="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)" />
        <element api="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)" />
        <element api="Overload:System.Xml.Linq.XElement.Load">
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
          <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Parse">
          <element api="M:System.Xml.Linq.XElement.Parse(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.RemoveAll" />
        <element api="M:System.Xml.Linq.XElement.RemoveAttributes" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceAll">
          <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)" />
          <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ReplaceAttributes">
          <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)" />
          <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Save">
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.String)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XElement.SetValue(System.Object)" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)" />
        <element api="Overload:System.Xml.Linq.XElement.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XElement.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XElement.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XElement.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" />
      </containers>
    </api>
    <api id="Operators.T:System.Xml.Linq.XElement">
      <topicdata name="XElement" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Xml.Linq.XElement" />
      <apidata name="XElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Xml.Linq.XElement.op_Explicit">
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32" />
          <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XElement">
      <topicdata name="XElement" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XElement" />
      <apidata name="XElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XContainer.FirstNode" />
        <element api="P:System.Xml.Linq.XContainer.LastNode" />
        <element api="P:System.Xml.Linq.XElement.EmptySequence" />
        <element api="P:System.Xml.Linq.XElement.FirstAttribute" />
        <element api="P:System.Xml.Linq.XElement.HasAttributes" />
        <element api="P:System.Xml.Linq.XElement.HasElements" />
        <element api="P:System.Xml.Linq.XElement.IsEmpty" />
        <element api="P:System.Xml.Linq.XElement.LastAttribute" />
        <element api="P:System.Xml.Linq.XElement.Name" />
        <element api="P:System.Xml.Linq.XElement.NodeType" />
        <element api="P:System.Xml.Linq.XElement.Value" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XElement">
      <topicdata name="XElement" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XElement" />
      <apidata name="XElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)" />
        <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)" />
        <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.AncestorsAndSelf">
      <topicdata name="AncestorsAndSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf" />
        <element api="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.Attributes">
      <topicdata name="Attributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.Attributes" />
        <element api="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.DescendantsAndSelf">
      <topicdata name="DescendantsAndSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf" />
        <element api="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.String)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)" />
        <element api="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.op_Explicit">
      <topicdata name="Explicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32" />
        <element api="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.Parse">
      <topicdata name="Parse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Parse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.Parse(System.String)" />
        <element api="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.ReplaceAll">
      <topicdata name="ReplaceAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReplaceAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)" />
        <element api="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.ReplaceAttributes">
      <topicdata name="ReplaceAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReplaceAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)" />
        <element api="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XElement.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.String)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XElement.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.#ctor(System.Xml.Linq.XStreamingElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XElement.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.AncestorsAndSelf">
      <topicdata group="api" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.AncestorsAndSelf" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.AncestorsAndSelf(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="AncestorsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.AncestorsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Attribute(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Attribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Attributes" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Attributes(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Attributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.DescendantNodesAndSelf">
      <topicdata group="api" />
      <apidata name="DescendantNodesAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.DescendantsAndSelf">
      <topicdata group="api" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.DescendantsAndSelf" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.DescendantsAndSelf(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="DescendantsAndSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.DescendantsAndSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.EmptySequence">
      <topicdata group="api" />
      <apidata name="EmptySequence" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmptySequence" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.FirstAttribute">
      <topicdata group="api" />
      <apidata name="FirstAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstAttribute" />
      <returns>
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.GetDefaultNamespace">
      <topicdata group="api" />
      <apidata name="GetDefaultNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.GetNamespaceOfPrefix(System.String)">
      <topicdata group="api" />
      <apidata name="GetNamespaceOfPrefix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.GetPrefixOfNamespace(System.Xml.Linq.XNamespace)">
      <topicdata group="api" />
      <apidata name="GetPrefixOfNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ns">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.HasAttributes">
      <topicdata group="api" />
      <apidata name="HasAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasAttributes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.HasElements">
      <topicdata group="api" />
      <apidata name="HasElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasElements" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.LastAttribute">
      <topicdata group="api" />
      <apidata name="LastAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastAttribute" />
      <returns>
        <type api="T:System.Xml.Linq.XAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.String)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.String,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.String">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Boolean">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Boolean}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int32">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int32}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt32">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt32}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Int64">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Int64}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.UInt64">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.UInt64}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Single">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Single}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Double">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Double}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Decimal">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Decimal}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTime">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTime}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.DateTimeOffset">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.DateTimeOffset}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.TimeSpan">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.TimeSpan}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Guid">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.op_Explicit(System.Xml.Linq.XElement)~System.Nullable{System.Guid}">
      <topicdata group="api" />
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Xml.Linq.XElement.op_Explicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.Linq.XElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XElement.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Parse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Parse(System.String,System.Xml.Linq.LoadOptions)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XElement.Parse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.LoadOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.RemoveAll">
      <topicdata group="api" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.RemoveAttributes">
      <topicdata group="api" />
      <apidata name="RemoveAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.ReplaceAll(System.Object)">
      <topicdata group="api" />
      <apidata name="ReplaceAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.ReplaceAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.ReplaceAll(System.Object[])">
      <topicdata group="api" />
      <apidata name="ReplaceAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.ReplaceAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object)">
      <topicdata group="api" />
      <apidata name="ReplaceAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.ReplaceAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.ReplaceAttributes(System.Object[])">
      <topicdata group="api" />
      <apidata name="ReplaceAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.ReplaceAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.String)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.Save(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.SetAttributeValue(System.Xml.Linq.XName,System.Object)">
      <topicdata group="api" />
      <apidata name="SetAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.SetElementValue(System.Xml.Linq.XName,System.Object)">
      <topicdata group="api" />
      <apidata name="SetElementValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.SetValue(System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XElement.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XElement.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XName">
      <topicdata group="api" />
      <apidata name="XName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XName" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Xml.Linq.XName.Equals(System.Object)" />
        <element api="Overload:System.Xml.Linq.XName.Get">
          <element api="M:System.Xml.Linq.XName.Get(System.String)" />
          <element api="M:System.Xml.Linq.XName.Get(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Linq.XName.GetHashCode" />
        <element api="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName" />
        <element api="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Xml.Linq.XName.ToString" />
        <element api="P:System.Xml.Linq.XName.LocalName" />
        <element api="P:System.Xml.Linq.XName.Namespace" />
        <element api="P:System.Xml.Linq.XName.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XName">
      <topicdata name="XName" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XName" />
      <apidata name="XName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Xml.Linq.XName.Equals(System.Object)" />
        <element api="Overload:System.Xml.Linq.XName.Get">
          <element api="M:System.Xml.Linq.XName.Get(System.String)" />
          <element api="M:System.Xml.Linq.XName.Get(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Linq.XName.GetHashCode" />
        <element api="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Xml.Linq.XName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" />
      </containers>
    </api>
    <api id="Operators.T:System.Xml.Linq.XName">
      <topicdata name="XName" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Xml.Linq.XName" />
      <apidata name="XName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName" />
        <element api="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XName">
      <topicdata name="XName" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XName" />
      <apidata name="XName" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Xml.Linq.XName.LocalName" />
        <element api="P:System.Xml.Linq.XName.Namespace" />
        <element api="P:System.Xml.Linq.XName.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XName.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XName.Get(System.String)" />
        <element api="M:System.Xml.Linq.XName.Get(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XName.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expandedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.Get(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Linq.XName.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XName.LocalName">
      <topicdata group="api" />
      <apidata name="LocalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XName.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XName.NamespaceName">
      <topicdata group="api" />
      <apidata name="NamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expandedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)">
      <topicdata group="api" eiiName="IEquatable`1.Equals" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XName" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XName.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XNamespace">
      <topicdata group="api" />
      <apidata name="XNamespace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Xml.Linq.XNamespace.Equals(System.Object)" />
        <element api="M:System.Xml.Linq.XNamespace.Get(System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.GetHashCode" />
        <element api="M:System.Xml.Linq.XNamespace.GetName(System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)" />
        <element api="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace" />
        <element api="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)" />
        <element api="M:System.Xml.Linq.XNamespace.ToString" />
        <element api="P:System.Xml.Linq.XNamespace.NamespaceName" />
        <element api="P:System.Xml.Linq.XNamespace.None" />
        <element api="P:System.Xml.Linq.XNamespace.Xml" />
        <element api="P:System.Xml.Linq.XNamespace.Xmlns" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XNamespace">
      <topicdata name="XNamespace" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XNamespace" />
      <apidata name="XNamespace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Xml.Linq.XNamespace.Equals(System.Object)" />
        <element api="M:System.Xml.Linq.XNamespace.Get(System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.GetHashCode" />
        <element api="M:System.Xml.Linq.XNamespace.GetName(System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" />
      </containers>
    </api>
    <api id="Operators.T:System.Xml.Linq.XNamespace">
      <topicdata name="XNamespace" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Xml.Linq.XNamespace" />
      <apidata name="XNamespace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)" />
        <element api="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)" />
        <element api="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace" />
        <element api="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XNamespace">
      <topicdata name="XNamespace" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XNamespace" />
      <apidata name="XNamespace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XNamespace.NamespaceName" />
        <element api="P:System.Xml.Linq.XNamespace.None" />
        <element api="P:System.Xml.Linq.XNamespace.Xml" />
        <element api="P:System.Xml.Linq.XNamespace.Xmlns" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.GetName(System.String)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNamespace.NamespaceName">
      <topicdata group="api" />
      <apidata name="NamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNamespace.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_None" />
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.op_Addition(System.Xml.Linq.XNamespace,System.String)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ns">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.op_Equality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.op_Implicit(System.String)~System.Xml.Linq.XNamespace">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.op_Inequality(System.Xml.Linq.XNamespace,System.Xml.Linq.XNamespace)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Xml.Linq.XNamespace" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNamespace.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNamespace.Xml">
      <topicdata group="api" />
      <apidata name="Xml" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xml" />
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNamespace.Xmlns">
      <topicdata group="api" />
      <apidata name="Xmlns" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Xmlns" />
      <returns>
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNamespace" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XNode">
      <topicdata group="api" />
      <apidata name="XNode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Linq.XText" ref="true" />
          <type api="T:System.Xml.Linq.XContainer" ref="true" />
          <type api="T:System.Xml.Linq.XComment" ref="true" />
          <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
          <type api="T:System.Xml.Linq.XDocumentType" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XNode.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="Overload:System.Xml.Linq.XNode.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="Overload:System.Xml.Linq.XNode.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XNode.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XNode.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XNode.DocumentOrderComparer" />
        <element api="P:System.Xml.Linq.XNode.EqualityComparer" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XNode">
      <topicdata name="XNode" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XNode" />
      <apidata name="XNode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XNode.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="Overload:System.Xml.Linq.XNode.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="Overload:System.Xml.Linq.XNode.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XNode.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XNode.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNode.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XNode">
      <topicdata name="XNode" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XNode" />
      <apidata name="XNode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XNode.DocumentOrderComparer" />
        <element api="P:System.Xml.Linq.XNode.EqualityComparer" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XNode">
      <topicdata name="XNode" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XNode" />
      <apidata name="XNode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.AddAfterSelf">
      <topicdata name="AddAfterSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAfterSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
        <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.AddBeforeSelf">
      <topicdata name="AddBeforeSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddBeforeSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
        <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.Ancestors">
      <topicdata name="Ancestors" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.Ancestors" />
        <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.CreateReader">
      <topicdata name="CreateReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateReader" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.CreateReader" />
        <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.ElementsAfterSelf">
      <topicdata name="ElementsAfterSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ElementsAfterSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <topicdata name="ElementsBeforeSelf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ElementsBeforeSelf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.ReplaceWith">
      <topicdata name="ReplaceWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReplaceWith" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
        <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNode.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XNode.ToString" />
        <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)">
      <topicdata group="api" />
      <apidata name="AddAfterSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.AddAfterSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddAfterSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.AddAfterSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)">
      <topicdata group="api" />
      <apidata name="AddBeforeSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.AddBeforeSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddBeforeSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.AddBeforeSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.Ancestors">
      <topicdata group="api" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.Ancestors" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="Ancestors" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.Ancestors" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.CompareDocumentOrder(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="CompareDocumentOrder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n1">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
        <parameter name="n2">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.CreateReader">
      <topicdata group="api" />
      <apidata name="CreateReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.CreateReader" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)">
      <topicdata group="api" />
      <apidata name="CreateReader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.CreateReader" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="readerOptions">
          <type api="T:System.Xml.Linq.ReaderOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="DeepEquals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n1">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
        <parameter name="n2">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNode.DocumentOrderComparer">
      <topicdata group="api" />
      <apidata name="DocumentOrderComparer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DocumentOrderComparer" />
      <returns>
        <type api="T:System.Xml.Linq.XNodeDocumentOrderComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ElementsAfterSelf">
      <topicdata group="api" />
      <apidata name="ElementsAfterSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ElementsAfterSelf" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="ElementsAfterSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ElementsAfterSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ElementsBeforeSelf">
      <topicdata group="api" />
      <apidata name="ElementsBeforeSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ElementsBeforeSelf" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name="ElementsBeforeSelf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ElementsBeforeSelf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNode.EqualityComparer">
      <topicdata group="api" />
      <apidata name="EqualityComparer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EqualityComparer" />
      <returns>
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="IsAfter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="IsBefore" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNode.NextNode">
      <topicdata group="api" />
      <apidata name="NextNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NextNode" />
      <returns>
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.NodesAfterSelf">
      <topicdata group="api" />
      <apidata name="NodesAfterSelf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.NodesBeforeSelf">
      <topicdata group="api" />
      <apidata name="NodesBeforeSelf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XNode.PreviousNode">
      <topicdata group="api" />
      <apidata name="PreviousNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousNode" />
      <returns>
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ReadFrom(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.Remove">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)">
      <topicdata group="api" />
      <apidata name="ReplaceWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ReplaceWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])">
      <topicdata group="api" />
      <apidata name="ReplaceWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ReplaceWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNode.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNode" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <topicdata group="api" />
      <apidata name="XNodeDocumentOrderComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IComparer" ref="true" />
        <type api="T:System.Collections.Generic.IComparer`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor" />
        <element api="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XNodeDocumentOrderComparer">
      <topicdata name="XNodeDocumentOrderComparer" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XNodeDocumentOrderComparer" />
      <apidata name="XNodeDocumentOrderComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeDocumentOrderComparer" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeDocumentOrderComparer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeDocumentOrderComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeDocumentOrderComparer.Compare(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XNode" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeDocumentOrderComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <topicdata group="api" eiiName="IComparer.Compare" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
          <type api="T:System.Collections.IComparer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeDocumentOrderComparer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XNodeEqualityComparer">
      <topicdata group="api" />
      <apidata name="XNodeEqualityComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEqualityComparer" ref="true" />
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XNode" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
        <element api="Overload:System.Xml.Linq.XNodeEqualityComparer.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNodeEqualityComparer.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
        </element>
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XNodeEqualityComparer">
      <topicdata name="XNodeEqualityComparer" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XNodeEqualityComparer" />
      <apidata name="XNodeEqualityComparer" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Linq.XNodeEqualityComparer.Equals">
          <element api="M:System.Object.Equals(System.Object)" />
          <element api="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
        </element>
        <element api="Overload:System.Xml.Linq.XNodeEqualityComparer.GetHashCode">
          <element api="M:System.Object.GetHashCode" />
          <element api="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
        </element>
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNodeEqualityComparer.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XNodeEqualityComparer.GetHashCode">
      <topicdata name="GetHashCode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeEqualityComparer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNodeEqualityComparer.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XNode" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XNodeEqualityComparer.GetHashCode" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XNode" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <topicdata group="api" eiiName="IEqualityComparer.Equals" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <topicdata group="api" eiiName="IEqualityComparer.GetHashCode" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XNodeEqualityComparer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XObject">
      <topicdata group="api" />
      <apidata name="XObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XAttribute" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Xml.IXmlLineInfo" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XObject.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XObject.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XObject.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XObject">
      <topicdata name="XObject" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XObject" />
      <apidata name="XObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XObject.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XObject.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XObject.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XObject">
      <topicdata name="XObject" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XObject" />
      <apidata name="XObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.NodeType" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XObject">
      <topicdata name="XObject" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XObject" />
      <apidata name="XObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XObject.Annotation">
      <topicdata name="Annotation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Annotation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XObject.Annotation``1" />
        <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XObject.Annotations">
      <topicdata name="Annotations" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Annotations" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XObject.Annotations``1" />
        <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XObject.RemoveAnnotations">
      <topicdata name="RemoveAnnotations" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAnnotations" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
        <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)">
      <topicdata group="api" />
      <apidata name="AddAnnotation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="annotation">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.Annotation``1">
      <topicdata group="api" />
      <apidata name="Annotation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.Annotation" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.Xml.Linq.XObject.Annotation``1" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.Annotation(System.Type)">
      <topicdata group="api" />
      <apidata name="Annotation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.Annotation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.Annotations``1">
      <topicdata group="api" />
      <apidata name="Annotations" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.Annotations" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Xml.Linq.XObject.Annotations``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.Annotations(System.Type)">
      <topicdata group="api" />
      <apidata name="Annotations" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.Annotations" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.BaseUri">
      <topicdata group="api" />
      <apidata name="BaseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseUri" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Linq.XObject.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Linq.XObject.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.Document">
      <topicdata group="api" />
      <apidata name="Document" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Document" />
      <returns>
        <type api="T:System.Xml.Linq.XDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.RemoveAnnotations``1">
      <topicdata group="api" />
      <apidata name="RemoveAnnotations" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.RemoveAnnotations" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)">
      <topicdata group="api" />
      <apidata name="RemoveAnnotations" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XObject.RemoveAnnotations" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo">
      <topicdata group="api" eiiName="IXmlLineInfo.HasLineInfo" />
      <apidata name="HasLineInfo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Xml.IXmlLineInfo.HasLineInfo">
          <type api="T:System.Xml.IXmlLineInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber">
      <topicdata group="api" eiiName="IXmlLineInfo.LineNumber" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Xml.IXmlLineInfo.LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Xml.IXmlLineInfo.LineNumber">
          <type api="T:System.Xml.IXmlLineInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition">
      <topicdata group="api" eiiName="IXmlLineInfo.LinePosition" />
      <apidata name="LinePosition" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Xml.IXmlLineInfo.LinePosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Xml.IXmlLineInfo.LinePosition">
          <type api="T:System.Xml.IXmlLineInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XObjectChange">
      <topicdata group="api" />
      <apidata name="XObjectChange" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Linq.XObjectChange.Add" />
        <element api="F:System.Xml.Linq.XObjectChange.Remove" />
        <element api="F:System.Xml.Linq.XObjectChange.Name" />
        <element api="F:System.Xml.Linq.XObjectChange.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChange.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChange.Name">
      <topicdata group="api" notopic="" />
      <apidata name="Name" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChange.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChange.Value">
      <topicdata group="api" notopic="" />
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XObjectChangeEventArgs">
      <topicdata group="api" />
      <apidata name="XObjectChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Add" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Name" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Remove" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Value" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)" />
        <element api="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XObjectChangeEventArgs">
      <topicdata name="XObjectChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XObjectChangeEventArgs" />
      <apidata name="XObjectChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XObjectChangeEventArgs">
      <topicdata name="XObjectChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XObjectChangeEventArgs" />
      <apidata name="XObjectChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" />
      </containers>
    </api>
    <api id="Fields.T:System.Xml.Linq.XObjectChangeEventArgs">
      <topicdata name="XObjectChangeEventArgs" group="list" subgroup="Fields" typeTopicId="T:System.Xml.Linq.XObjectChangeEventArgs" />
      <apidata name="XObjectChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Add" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Name" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Remove" />
        <element api="F:System.Xml.Linq.XObjectChangeEventArgs.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XObjectChangeEventArgs.#ctor(System.Xml.Linq.XObjectChange)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="objectChange">
          <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChangeEventArgs.Add">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChangeEventArgs.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XObjectChangeEventArgs.ObjectChange">
      <topicdata group="api" />
      <apidata name="ObjectChange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectChange" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChange" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChangeEventArgs.Remove">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:System.Xml.Linq.XObjectChangeEventArgs.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XObjectChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XProcessingInstruction">
      <topicdata group="api" />
      <apidata name="XProcessingInstruction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.#ctor">
          <element api="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)" />
          <element api="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.Data" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.NodeType" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.Target" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XProcessingInstruction">
      <topicdata name="XProcessingInstruction" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XProcessingInstruction" />
      <apidata name="XProcessingInstruction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XProcessingInstruction.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XProcessingInstruction">
      <topicdata name="XProcessingInstruction" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XProcessingInstruction" />
      <apidata name="XProcessingInstruction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.Data" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.NodeType" />
        <element api="P:System.Xml.Linq.XProcessingInstruction.Target" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XProcessingInstruction">
      <topicdata name="XProcessingInstruction" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XProcessingInstruction" />
      <apidata name="XProcessingInstruction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XProcessingInstruction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)" />
        <element api="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XProcessingInstruction.#ctor" />
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XProcessingInstruction.#ctor(System.Xml.Linq.XProcessingInstruction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XProcessingInstruction.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XProcessingInstruction.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XProcessingInstruction.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XProcessingInstruction.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XProcessingInstruction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XStreamingElement">
      <topicdata group="api" />
      <apidata name="XStreamingElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XStreamingElement.#ctor">
          <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)" />
          <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)" />
          <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XStreamingElement.Add">
          <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XStreamingElement.Save">
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XStreamingElement.ToString">
          <element api="M:System.Xml.Linq.XStreamingElement.ToString" />
          <element api="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)" />
        <element api="P:System.Xml.Linq.XStreamingElement.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XStreamingElement">
      <topicdata name="XStreamingElement" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XStreamingElement" />
      <apidata name="XStreamingElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XStreamingElement.Add">
          <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XStreamingElement.Save">
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
          <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XStreamingElement.ToString">
          <element api="M:System.Xml.Linq.XStreamingElement.ToString" />
          <element api="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XStreamingElement">
      <topicdata name="XStreamingElement" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XStreamingElement" />
      <apidata name="XStreamingElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XStreamingElement.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XStreamingElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)" />
        <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)" />
        <element api="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XStreamingElement.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XStreamingElement.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)" />
        <element api="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XStreamingElement.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Linq.XStreamingElement.ToString" />
        <element api="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XStreamingElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XStreamingElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.#ctor(System.Xml.Linq.XName,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XStreamingElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.Linq.XName" ref="true" />
        </parameter>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Add(System.Object[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XStreamingElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.Xml.Linq.XName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.String)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.String,System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.Save(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.ToString(System.Xml.Linq.SaveOptions)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Linq.XStreamingElement.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Xml.Linq.SaveOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XStreamingElement.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XStreamingElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Linq.XText">
      <topicdata group="api" />
      <apidata name="XText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Linq.XNode" ref="true" />
          <type api="T:System.Xml.Linq.XObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Linq.XCData" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XText.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XText.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XText.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="Overload:System.Xml.Linq.XText.#ctor">
          <element api="M:System.Xml.Linq.XText.#ctor(System.String)" />
          <element api="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)" />
        </element>
        <element api="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)" />
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XText.NodeType" />
        <element api="P:System.Xml.Linq.XText.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Linq.XText">
      <topicdata name="XText" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Linq.XText" />
      <apidata name="XText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode,System.Xml.XmlNameTable)" source="extension" overload="true">
          <apidata name="CreateNavigator" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="nameTable">
              <type api="T:System.Xml.XmlNameTable" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathEvaluate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElement" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Linq.XElement" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode,System.String,System.Xml.IXmlNamespaceResolver)" source="extension" overload="true">
          <apidata name="XPathSelectElements" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="expression">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="resolver">
              <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Linq.XElement" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Xml.XPath" />
            <type api="T:System.Xml.XPath.Extensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Xml.Linq.XText.AddAfterSelf">
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddAfterSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.AddBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.AddBeforeSelf(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.Ancestors">
          <element api="M:System.Xml.Linq.XNode.Ancestors" />
          <element api="M:System.Xml.Linq.XNode.Ancestors(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.CreateReader">
          <element api="M:System.Xml.Linq.XNode.CreateReader" />
          <element api="M:System.Xml.Linq.XNode.CreateReader(System.Xml.Linq.ReaderOptions)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ElementsAfterSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsAfterSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ElementsBeforeSelf">
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf" />
          <element api="M:System.Xml.Linq.XNode.ElementsBeforeSelf(System.Xml.Linq.XName)" />
        </element>
        <element api="M:System.Xml.Linq.XNode.IsAfter(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.IsBefore(System.Xml.Linq.XNode)" />
        <element api="M:System.Xml.Linq.XNode.NodesAfterSelf" />
        <element api="M:System.Xml.Linq.XNode.NodesBeforeSelf" />
        <element api="M:System.Xml.Linq.XNode.Remove" />
        <element api="Overload:System.Xml.Linq.XText.ReplaceWith">
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object)" />
          <element api="M:System.Xml.Linq.XNode.ReplaceWith(System.Object[])" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.ToString">
          <element api="M:System.Xml.Linq.XNode.ToString" />
          <element api="M:System.Xml.Linq.XNode.ToString(System.Xml.Linq.SaveOptions)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.AddAnnotation(System.Object)" />
        <element api="Overload:System.Xml.Linq.XText.Annotation">
          <element api="M:System.Xml.Linq.XObject.Annotation``1" />
          <element api="M:System.Xml.Linq.XObject.Annotation(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.Annotations">
          <element api="M:System.Xml.Linq.XObject.Annotations``1" />
          <element api="M:System.Xml.Linq.XObject.Annotations(System.Type)" />
        </element>
        <element api="Overload:System.Xml.Linq.XText.RemoveAnnotations">
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations``1" />
          <element api="M:System.Xml.Linq.XObject.RemoveAnnotations(System.Type)" />
        </element>
        <element api="M:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#HasLineInfo" />
        <element api="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Linq.XText">
      <topicdata name="XText" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Linq.XText" />
      <apidata name="XText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Linq.XNode.NextNode" />
        <element api="P:System.Xml.Linq.XNode.PreviousNode" />
        <element api="P:System.Xml.Linq.XObject.BaseUri" />
        <element api="P:System.Xml.Linq.XObject.Document" />
        <element api="P:System.Xml.Linq.XObject.Parent" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LineNumber" />
        <element api="P:System.Xml.Linq.XObject.System#Xml#IXmlLineInfo#LinePosition" />
        <element api="P:System.Xml.Linq.XText.NodeType" />
        <element api="P:System.Xml.Linq.XText.Value" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Linq.XText">
      <topicdata name="XText" group="list" subgroup="Events" typeTopicId="T:System.Xml.Linq.XText" />
      <apidata name="XText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Linq.XObject.Changed" />
        <element api="E:System.Xml.Linq.XObject.Changing" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Linq.XText.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Linq.XText.#ctor(System.String)" />
        <element api="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)" />
      </elements>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XText.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XText.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Linq.XText.#ctor" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Xml.Linq.XText" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XText.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Linq.XObject.NodeType">
          <type api="T:System.Xml.Linq.XObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Linq.XText.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Linq.XNode.WriteTo(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Linq.XNode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml.Linq" module="System.Xml.Linq" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Linq" />
        <type api="T:System.Xml.Linq.XText" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>