<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.IdentityModel.Services">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1755dbba-883b-4821-af64-78ed69ca9748</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.IdentityModel.Services">
      <topicdata group="api" />
      <apidata name="System.IdentityModel.Services" group="namespace" />
      <elements>
        <element api="T:System.IdentityModel.Services.ApplicationType" />
        <element api="T:System.IdentityModel.Services.FederationManagement" />
        <element api="T:System.IdentityModel.Services.WSFederationMessage" />
        <element api="T:System.IdentityModel.Services.FederationMessage" />
        <element api="T:System.IdentityModel.Services.AttributeRequestMessage" />
        <element api="T:System.IdentityModel.Services.PseudonymRequestMessage" />
        <element api="T:System.IdentityModel.Services.SignInRequestMessage" />
        <element api="T:System.IdentityModel.Services.SignInResponseMessage" />
        <element api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />
        <element api="T:System.IdentityModel.Services.SignOutRequestMessage" />
        <element api="T:System.IdentityModel.Services.WSFederationMessageException" />
        <element api="T:System.IdentityModel.Services.WSFederationSerializer" />
        <element api="T:System.IdentityModel.Services.HttpModuleBase" />
        <element api="T:System.IdentityModel.Services.MachineKeyTransform" />
        <element api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" />
        <element api="T:System.IdentityModel.Services.ChunkedCookieHandler" />
        <element api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" />
        <element api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
        <element api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
        <element api="T:System.IdentityModel.Services.CookieHandler" />
        <element api="T:System.IdentityModel.Services.ErrorEventArgs" />
        <element api="T:System.IdentityModel.Services.FederatedAuthentication" />
        <element api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
        <element api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
        <element api="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
        <element api="T:System.IdentityModel.Services.FederationException" />
        <element api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
        <element api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
        <element api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" />
        <element api="T:System.IdentityModel.Services.SessionAuthenticationModule" />
        <element api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
        <element api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
        <element api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" />
        <element api="T:System.IdentityModel.Services.SigningOutEventArgs" />
        <element api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />
        <element api="T:System.IdentityModel.Services.CookieHandlerElement" />
        <element api="T:System.IdentityModel.Services.CookieHandlerMode" />
        <element api="T:System.IdentityModel.Services.ServiceCertificateElement" />
        <element api="T:System.IdentityModel.Services.AsynchronousOperationException" />
        <element api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      </elements>
    </api>
    <api id="T:System.IdentityModel.Services.ApplicationType">
      <topicdata group="api" />
      <apidata name="ApplicationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Services.ApplicationType.AspNetWebApplication" />
        <element api="F:System.IdentityModel.Services.ApplicationType.WcfServiceApplication" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.ApplicationType.AspNetWebApplication">
      <topicdata group="api" notopic="" />
      <apidata name="AspNetWebApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Services.ApplicationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ApplicationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.ApplicationType.WcfServiceApplication">
      <topicdata group="api" notopic="" />
      <apidata name="WcfServiceApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Services.ApplicationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ApplicationType" ref="false" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.AsynchronousOperationException">
      <topicdata group="api" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor">
          <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
          <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Exception)" />
          <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.AsynchronousOperationException">
      <topicdata name="AsynchronousOperationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.AsynchronousOperationException" />
      <apidata name="AsynchronousOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
        <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Exception)" />
        <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AsynchronousOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.AsynchronousOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AsynchronousOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.AttributeRequestMessage">
      <topicdata group="api" />
      <apidata name="AttributeRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.AttributeRequestMessage.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Services.AttributeRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.AttributeRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Attribute" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.AttributePtr" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Result" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.AttributeRequestMessage">
      <topicdata name="AttributeRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.AttributeRequestMessage" />
      <apidata name="AttributeRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.AttributeRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.AttributeRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.AttributeRequestMessage">
      <topicdata name="AttributeRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.AttributeRequestMessage" />
      <apidata name="AttributeRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Attribute" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.AttributePtr" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.Result" />
        <element api="P:System.IdentityModel.Services.AttributeRequestMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AttributeRequestMessage.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AttributeRequestMessage.Attribute">
      <topicdata group="api" />
      <apidata name="Attribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Attribute" />
      <setter name="set_Attribute" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AttributeRequestMessage.AttributePtr">
      <topicdata group="api" />
      <apidata name="AttributePtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributePtr" />
      <setter name="set_AttributePtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AttributeRequestMessage.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AttributeRequestMessage.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AttributeRequestMessage.ResultPtr">
      <topicdata group="api" />
      <apidata name="ResultPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResultPtr" />
      <setter name="set_ResultPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AttributeRequestMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AttributeRequestMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.AuthorizationFailedEventArgs">
      <topicdata group="api" />
      <apidata name="AuthorizationFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.AuthorizationFailedEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.AuthorizationFailedEventArgs.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.AuthorizationFailedEventArgs">
      <topicdata name="AuthorizationFailedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      <apidata name="AuthorizationFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.AuthorizationFailedEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.AuthorizationFailedEventArgs">
      <topicdata name="AuthorizationFailedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      <apidata name="AuthorizationFailedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.AuthorizationFailedEventArgs.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.AuthorizationFailedEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider">
      <topicdata group="api" />
      <apidata name="RedirectToIdentityProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RedirectToIdentityProvider" />
      <setter name="set_RedirectToIdentityProvider" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ChunkedCookieHandler">
      <topicdata group="api" />
      <apidata name="ChunkedCookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize" />
        <element api="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.#ctor">
          <element api="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
          <element api="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Delete">
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Read">
          <element api="M:System.IdentityModel.Services.CookieHandler.Read" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
        </element>
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Write">
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ChunkedCookieHandler">
      <topicdata name="ChunkedCookieHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      <apidata name="ChunkedCookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <elements>
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Delete">
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Read">
          <element api="M:System.IdentityModel.Services.CookieHandler.Read" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
        </element>
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandler.Write">
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ChunkedCookieHandler">
      <topicdata name="ChunkedCookieHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      <apidata name="ChunkedCookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Services.ChunkedCookieHandler">
      <topicdata name="ChunkedCookieHandler" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      <apidata name="ChunkedCookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize" />
        <element api="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.ChunkedCookieHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
        <element api="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ChunkedCookieHandler.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.ChunkedCookieHandler.#ctor" />
      <parameters>
        <parameter name="chunkSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ChunkedCookieHandler.ChunkSize">
      <topicdata group="api" />
      <apidata name="ChunkSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChunkSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.ChunkedCookieHandler.DefaultChunkSize">
      <topicdata group="api" />
      <apidata name="DefaultChunkSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2000</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.ChunkedCookieHandler.MinimumChunkSize">
      <topicdata group="api" />
      <apidata name="MinimumChunkSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1000</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ChunkedCookieHandlerElement">
      <topicdata group="api" />
      <apidata name="ChunkedCookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandlerElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.IdentityModel.Services.ChunkedCookieHandlerElement.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandlerElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.ChunkedCookieHandlerElement.ChunkSize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ChunkedCookieHandlerElement">
      <topicdata name="ChunkedCookieHandlerElement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />
      <apidata name="ChunkedCookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandlerElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ChunkedCookieHandlerElement">
      <topicdata name="ChunkedCookieHandlerElement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />
      <apidata name="ChunkedCookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ChunkedCookieHandlerElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.ChunkedCookieHandlerElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.ChunkedCookieHandlerElement.ChunkSize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ChunkedCookieHandlerElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ChunkedCookieHandlerElement.ChunkSize">
      <topicdata group="api" />
      <apidata name="ChunkSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChunkSize" />
      <setter name="set_ChunkSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>chunkSize</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>2000</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>1000</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.IdentityModel.Services.ClaimsAuthorizationModule">
      <topicdata group="api" />
      <apidata name="ClaimsAuthorizationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ClaimsAuthorizationModule.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.#ctor" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Authorize" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Dispose" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.OnAuthorizeRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.ClaimsAuthorizationModule.ClaimsAuthorizationManager" />
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ClaimsAuthorizationModule">
      <topicdata name="ClaimsAuthorizationModule" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ClaimsAuthorizationModule" />
      <apidata name="ClaimsAuthorizationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ClaimsAuthorizationModule.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Authorize" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Dispose" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.ClaimsAuthorizationModule.OnAuthorizeRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ClaimsAuthorizationModule">
      <topicdata name="ClaimsAuthorizationModule" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ClaimsAuthorizationModule" />
      <apidata name="ClaimsAuthorizationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ClaimsAuthorizationModule.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Services.ClaimsAuthorizationModule.ClaimsAuthorizationManager" />
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Authorize">
      <topicdata group="api" />
      <apidata name="Authorize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ClaimsAuthorizationModule.ClaimsAuthorizationManager">
      <topicdata group="api" />
      <apidata name="ClaimsAuthorizationManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClaimsAuthorizationManager" />
      <setter name="set_ClaimsAuthorizationManager" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsAuthorizationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.Dispose">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Web.IHttpModule.Dispose">
          <type api="T:System.Web.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializeModule(System.Web.HttpApplication)">
      <topicdata group="api" />
      <apidata name="InitializeModule" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.InitializePropertiesFromConfiguration">
      <topicdata group="api" />
      <apidata name="InitializePropertiesFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsAuthorizationModule.OnAuthorizeRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnAuthorizeRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ClaimsPrincipalPermission">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipalPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.IPermission" ref="true" />
        <type api="T:System.Security.ISecurityEncodable" ref="true" />
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ClaimsPrincipalPermission">
      <topicdata name="ClaimsPrincipalPermission" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
      <apidata name="ClaimsPrincipalPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CheckAccess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand">
      <topicdata group="api" />
      <apidata name="Demand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Security.IPermission.Demand">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipalPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation" />
        <element api="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute">
      <topicdata name="ClaimsPrincipalPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
      <apidata name="ClaimsPrincipalPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute">
      <topicdata name="ClaimsPrincipalPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
      <apidata name="ClaimsPrincipalPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation" />
        <element api="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Operation">
      <topicdata group="api" />
      <apidata name="Operation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operation" />
      <setter name="set_Operation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource" />
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.CookieHandler">
      <topicdata group="api" />
      <apidata name="CookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.ChunkedCookieHandler" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.CookieHandler.#ctor" />
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Delete">
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Read">
          <element api="M:System.IdentityModel.Services.CookieHandler.Read" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Write">
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.CookieHandler">
      <topicdata name="CookieHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.CookieHandler" />
      <apidata name="CookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Delete">
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)" />
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Read">
          <element api="M:System.IdentityModel.Services.CookieHandler.Read" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)" />
        <element api="Overload:System.IdentityModel.Services.CookieHandler.Write">
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
          <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.CookieHandler">
      <topicdata name="CookieHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.CookieHandler" />
      <apidata name="CookieHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.CookieHandler.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandler.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandler.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.CookieHandler.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.CookieHandler.Delete" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.CookieHandler.Read">
      <topicdata name="Read" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Read" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.CookieHandler.Read" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.CookieHandler.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)" />
        <element api="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Delete" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Delete(System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.String,System.String,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Delete(System.String,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Delete(System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.DeleteCore(System.String,System.String,System.String,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="DeleteCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Domain" />
      <setter name="set_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.HideFromClientScript">
      <topicdata group="api" />
      <apidata name="HideFromClientScript" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_HideFromClientScript" />
      <setter name="set_HideFromClientScript" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.MatchCookiePath(System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="MatchCookiePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="targetUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime">
      <topicdata group="api" />
      <apidata name="PersistentSessionLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistentSessionLifetime" />
      <setter name="set_PersistentSessionLifetime" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Read">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Read" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Read(System.String)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Read(System.String,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Read(System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Read" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.ReadCore(System.String,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="ReadCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandler.RequireSsl">
      <topicdata group="api" />
      <apidata name="RequireSsl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RequireSsl" />
      <setter name="set_RequireSsl" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.Boolean,System.DateTime)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="isPersistent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="tokenExpirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.DateTime,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.Write(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.CookieHandler.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="requiresSsl">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="hideFromClientScript">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandler.WriteCore(System.Byte[],System.String,System.String,System.String,System.DateTime,System.Boolean,System.Boolean,System.Web.HttpContext)">
      <topicdata group="api" />
      <apidata name="WriteCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="secure">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="httpOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Web.HttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.CookieHandlerElement">
      <topicdata group="api" />
      <apidata name="CookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
        <element api="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.CookieHandlerElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Mode" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.CookieHandlerElement">
      <topicdata name="CookieHandlerElement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.CookieHandlerElement" />
      <apidata name="CookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.CookieHandlerElement">
      <topicdata name="CookieHandlerElement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.CookieHandlerElement" />
      <apidata name="CookieHandlerElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.CookieHandlerElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.CookieHandlerElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Domain" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Mode" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Name" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.Path" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime" />
        <element api="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandlerElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.ChunkedCookieHandler">
      <topicdata group="api" />
      <apidata name="ChunkedCookieHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChunkedCookieHandler" />
      <setter name="set_ChunkedCookieHandler" />
      <returns>
        <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>chunkedCookieHandler</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.CustomCookieHandler">
      <topicdata group="api" />
      <apidata name="CustomCookieHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomCookieHandler" />
      <setter name="set_CustomCookieHandler" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.CustomTypeElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>customCookieHandler</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Domain" />
      <setter name="set_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>domain</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IdentityModel.Services.CookieHandlerElement.GetConfiguredCookieHandler">
      <topicdata group="api" />
      <apidata name="GetConfiguredCookieHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.HideFromScript">
      <topicdata group="api" />
      <apidata name="HideFromScript" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HideFromScript" />
      <setter name="set_HideFromScript" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>hideFromScript</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mode</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>path</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.PersistentSessionLifetime">
      <topicdata group="api" />
      <apidata name="PersistentSessionLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistentSessionLifetime" />
      <setter name="set_PersistentSessionLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>persistentSessionLifetime</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>0:0:0</value>
          </assignment>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
          <assignment name="MinValueString">
            <type api="T:System.String" ref="true" />
            <value>0:0:0</value>
          </assignment>
          <assignment name="MaxValueString">
            <type api="T:System.String" ref="true" />
            <value>365.0:0:0</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.CookieHandlerElement.RequireSsl">
      <topicdata group="api" />
      <apidata name="RequireSsl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequireSsl" />
      <setter name="set_RequireSsl" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>requireSsl</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.IdentityModel.Services.CookieHandlerMode">
      <topicdata group="api" />
      <apidata name="CookieHandlerMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Services.CookieHandlerMode.Default" />
        <element api="F:System.IdentityModel.Services.CookieHandlerMode.Chunked" />
        <element api="F:System.IdentityModel.Services.CookieHandlerMode.Custom" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.CookieHandlerMode.Chunked">
      <topicdata group="api" notopic="" />
      <apidata name="Chunked" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.CookieHandlerMode.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Services.CookieHandlerMode.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.CookieHandlerMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ErrorEventArgs">
      <topicdata group="api" />
      <apidata name="ErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Services.ErrorEventArgs.#ctor">
          <element api="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Exception)" />
          <element api="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Boolean,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.ErrorEventArgs.Exception" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ErrorEventArgs">
      <topicdata name="ErrorEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ErrorEventArgs" />
      <apidata name="ErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ErrorEventArgs">
      <topicdata name="ErrorEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ErrorEventArgs" />
      <apidata name="ErrorEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.ErrorEventArgs.Exception" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.ErrorEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Exception)" />
        <element api="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Boolean,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Boolean,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.ErrorEventArgs.#ctor" />
      <parameters>
        <parameter name="cancel">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ErrorEventArgs.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.ErrorEventArgs.#ctor" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ErrorEventArgs.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederatedAuthentication">
      <topicdata group="api" />
      <apidata name="FederatedAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated" />
        <element api="M:System.IdentityModel.Services.FederatedAuthentication.GetHttpModule``1" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.ClaimsAuthorizationModule" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.WSFederationAuthenticationModule" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederatedAuthentication">
      <topicdata name="FederatedAuthentication" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederatedAuthentication" />
      <apidata name="FederatedAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederatedAuthentication.GetHttpModule``1" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.FederatedAuthentication">
      <topicdata name="FederatedAuthentication" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.FederatedAuthentication" />
      <apidata name="FederatedAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.ClaimsAuthorizationModule" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule" />
        <element api="P:System.IdentityModel.Services.FederatedAuthentication.WSFederationAuthenticationModule" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.FederatedAuthentication">
      <topicdata name="FederatedAuthentication" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.FederatedAuthentication" />
      <apidata name="FederatedAuthentication" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedAuthentication.ClaimsAuthorizationModule">
      <topicdata group="api" />
      <apidata name="ClaimsAuthorizationModule" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimsAuthorizationModule" />
      <returns>
        <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration">
      <topicdata group="api" />
      <apidata name="FederationConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FederationConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Services.Configuration.FederationConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated">
      <topicdata group="api" />
      <apidata name="FederationConfigurationCreated" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_FederationConfigurationCreated" />
      <remover name="remove_FederationConfigurationCreated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.Configuration.FederationConfigurationCreatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedAuthentication.GetHttpModule``1">
      <topicdata group="api" />
      <apidata name="GetHttpModule" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true">
            <implements>
              <type api="T:System.Web.IHttpModule" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Services.FederatedAuthentication.GetHttpModule``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule">
      <topicdata group="api" />
      <apidata name="SessionAuthenticationModule" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionAuthenticationModule" />
      <returns>
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedAuthentication.WSFederationAuthenticationModule">
      <topicdata group="api" />
      <apidata name="WSFederationAuthenticationModule" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WSFederationAuthenticationModule" />
      <returns>
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthentication" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException">
      <topicdata group="api" />
      <apidata name="FederatedAuthenticationSessionEndingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor">
          <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
          <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException">
      <topicdata name="FederatedAuthenticationSessionEndingException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      <apidata name="FederatedAuthenticationSessionEndingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException">
      <topicdata name="FederatedAuthenticationSessionEndingException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      <apidata name="FederatedAuthenticationSessionEndingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException">
      <topicdata name="FederatedAuthenticationSessionEndingException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      <apidata name="FederatedAuthenticationSessionEndingException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
        <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations">
      <topicdata group="api" />
      <apidata name="FederatedPassiveSecurityTokenServiceOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest">
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse)" />
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest">
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService)" />
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInResponse(System.IdentityModel.Services.SignInResponseMessage,System.Web.HttpResponse)" />
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignOutRequest(System.IdentityModel.Services.FederationMessage,System.Security.Claims.ClaimsPrincipal,System.String,System.Web.HttpResponse)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations">
      <topicdata name="FederatedPassiveSecurityTokenServiceOperations" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
      <apidata name="FederatedPassiveSecurityTokenServiceOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest">
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse)" />
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest">
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService)" />
          <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInResponse(System.IdentityModel.Services.SignInResponseMessage,System.Web.HttpResponse)" />
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignOutRequest(System.IdentityModel.Services.FederationMessage,System.Security.Claims.ClaimsPrincipal,System.String,System.Web.HttpResponse)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest">
      <topicdata name="ProcessRequest" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse)" />
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse,System.IdentityModel.Services.WSFederationSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest">
      <topicdata name="ProcessSignInRequest" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ProcessSignInRequest" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService)" />
        <element api="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.IdentityModel.Services.WSFederationSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse)">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequest" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="sts">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:System.Web.HttpResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest(System.Web.HttpRequest,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.Web.HttpResponse,System.IdentityModel.Services.WSFederationSerializer)">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequest" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="sts">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:System.Web.HttpResponse" ref="true" />
        </parameter>
        <parameter name="federationSerializer">
          <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService)">
      <topicdata group="api" />
      <apidata name="ProcessSignInRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="sts">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest(System.IdentityModel.Services.SignInRequestMessage,System.Security.Claims.ClaimsPrincipal,System.IdentityModel.SecurityTokenService,System.IdentityModel.Services.WSFederationSerializer)">
      <topicdata group="api" />
      <apidata name="ProcessSignInRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="sts">
          <type api="T:System.IdentityModel.SecurityTokenService" ref="true" />
        </parameter>
        <parameter name="federationSerializer">
          <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignInResponse(System.IdentityModel.Services.SignInResponseMessage,System.Web.HttpResponse)">
      <topicdata group="api" />
      <apidata name="ProcessSignInResponse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signInResponseMessage">
          <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
        </parameter>
        <parameter name="httpResponse">
          <type api="T:System.Web.HttpResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessSignOutRequest(System.IdentityModel.Services.FederationMessage,System.Security.Claims.ClaimsPrincipal,System.String,System.Web.HttpResponse)">
      <topicdata group="api" />
      <apidata name="ProcessSignOutRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestMessage">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </parameter>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="reply">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="httpResponse">
          <type api="T:System.Web.HttpResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederatedSessionExpiredException">
      <topicdata group="api" />
      <apidata name="FederatedSessionExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.FederatedAuthenticationSessionEndingException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor">
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime)" />
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String,System.Exception)" />
          <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime,System.Exception)" />
        </element>
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.IdentityModel.Services.FederatedSessionExpiredException.Expired" />
        <element api="P:System.IdentityModel.Services.FederatedSessionExpiredException.Tested" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederatedSessionExpiredException">
      <topicdata name="FederatedSessionExpiredException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      <apidata name="FederatedSessionExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.FederatedSessionExpiredException">
      <topicdata name="FederatedSessionExpiredException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      <apidata name="FederatedSessionExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.IdentityModel.Services.FederatedSessionExpiredException.Expired" />
        <element api="P:System.IdentityModel.Services.FederatedSessionExpiredException.Tested" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.FederatedSessionExpiredException">
      <topicdata name="FederatedSessionExpiredException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      <apidata name="FederatedSessionExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime)" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String,System.Exception)" />
        <element api="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <parameters>
        <parameter name="tested">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expired">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.DateTime,System.DateTime,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <parameters>
        <parameter name="tested">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expired">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederatedSessionExpiredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedSessionExpiredException.Expired">
      <topicdata group="api" />
      <apidata name="Expired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expired" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederatedSessionExpiredException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Services.FederatedSessionExpiredException.Tested">
      <topicdata group="api" />
      <apidata name="Tested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Tested" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederatedSessionExpiredException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederationException">
      <topicdata group="api" />
      <apidata name="FederationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.FederationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Services.FederationException.#ctor">
          <element api="M:System.IdentityModel.Services.FederationException.#ctor" />
          <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederationException">
      <topicdata name="FederationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederationException" />
      <apidata name="FederationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.FederationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.FederationException">
      <topicdata name="FederationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.FederationException" />
      <apidata name="FederationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.FederationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.FederationException">
      <topicdata name="FederationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.FederationException" />
      <apidata name="FederationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.FederationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationException.#ctor" />
        <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Services.FederationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Services.FederationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.FederationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederationManagement">
      <topicdata group="api" />
      <apidata name="FederationManagement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
        <element api="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo">
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederationManagement">
      <topicdata name="FederationManagement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederationManagement" />
      <apidata name="FederationManagement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
        <element api="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo">
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
          <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo">
      <topicdata name="UpdateIdentityProviderTrustInfo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpdateIdentityProviderTrustInfo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
        <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
        <element api="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})">
      <topicdata group="api" />
      <apidata name="CreateApplicationFederationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="claimsRequired">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Metadata.DisplayClaim" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="applicationType">
          <type api="T:System.IdentityModel.Services.ApplicationType" ref="false" />
        </parameter>
        <parameter name="audienceUris">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)">
      <topicdata group="api" />
      <apidata name="UpdateIdentityProviderTrustInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="inputConfiguration">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="claimsOfferedUpdate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)">
      <topicdata group="api" />
      <apidata name="UpdateIdentityProviderTrustInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="inputConfiguration">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="claimsOfferedUpdate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="metadataSerializer">
          <type api="T:System.IdentityModel.Metadata.MetadataSerializer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)">
      <topicdata group="api" />
      <apidata name="UpdateIdentityProviderTrustInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="inputConfiguration">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="newIssuerNameRegistry" out="true">
          <referenceTo>
            <type api="T:System.Xml.XmlNodeReader" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="claimTypesOffered" out="true">
          <referenceTo>
            <type api="T:System.Xml.XmlNodeReader" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)">
      <topicdata group="api" />
      <apidata name="UpdateIdentityProviderTrustInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadataReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="inputConfiguration">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="newIssuerNameRegistry" out="true">
          <referenceTo>
            <type api="T:System.Xml.XmlNodeReader" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="claimTypesOffered" out="true">
          <referenceTo>
            <type api="T:System.Xml.XmlNodeReader" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="metadataSerializer">
          <type api="T:System.IdentityModel.Metadata.MetadataSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationManagement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.FederationMessage">
      <topicdata group="api" />
      <apidata name="FederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.GetBaseUrl(System.Uri)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.ParseQueryString(System.Uri)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Validate" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.FederationMessage">
      <topicdata name="FederationMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.FederationMessage" />
      <apidata name="FederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetBaseUrl(System.Uri)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.ParseQueryString(System.Uri)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Validate" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.FederationMessage">
      <topicdata name="FederationMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.FederationMessage" />
      <apidata name="FederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederationMessage.BaseUri">
      <topicdata group="api" />
      <apidata name="BaseUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseUri" />
      <setter name="set_BaseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.GetBaseUrl(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetBaseUrl" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)">
      <topicdata group="api" />
      <apidata name="GetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.FederationMessage.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.ParseQueryString(System.Uri)">
      <topicdata group="api" />
      <apidata name="ParseQueryString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetUriParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.WriteFormPost">
      <topicdata group="api" />
      <apidata name="WriteFormPost" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.FederationMessage.WriteQueryString">
      <topicdata group="api" />
      <apidata name="WriteQueryString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.HttpModuleBase">
      <topicdata group="api" />
      <apidata name="HttpModuleBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.ClaimsAuthorizationModule" ref="true" />
          <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
          <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Web.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Services.HttpModuleBase.#ctor" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.HttpModuleBase">
      <topicdata name="HttpModuleBase" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.HttpModuleBase" />
      <apidata name="HttpModuleBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.HttpModuleBase">
      <topicdata name="HttpModuleBase" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.HttpModuleBase" />
      <apidata name="HttpModuleBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.HttpModuleBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.HttpModuleBase.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Web.IHttpModule.Dispose">
          <type api="T:System.Web.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration">
      <topicdata group="api" />
      <apidata name="FederationConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FederationConfiguration" />
      <setter name="set_FederationConfiguration" />
      <returns>
        <type api="T:System.IdentityModel.Services.Configuration.FederationConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.IHttpModule.Init(System.Web.HttpApplication)">
          <type api="T:System.Web.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)">
      <topicdata group="api" />
      <apidata name="InitializeModule" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration">
      <topicdata group="api" />
      <apidata name="InitializePropertiesFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.MachineKeyTransform">
      <topicdata group="api" />
      <apidata name="MachineKeyTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.MachineKeyTransform.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.MachineKeyTransform.#ctor" />
        <element api="M:System.IdentityModel.Services.MachineKeyTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.Services.MachineKeyTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.MachineKeyTransform">
      <topicdata name="MachineKeyTransform" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.MachineKeyTransform" />
      <apidata name="MachineKeyTransform" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.MachineKeyTransform.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Services.MachineKeyTransform.Decode(System.Byte[])" />
        <element api="M:System.IdentityModel.Services.MachineKeyTransform.Encode(System.Byte[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.MachineKeyTransform" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.MachineKeyTransform.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.MachineKeyTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.MachineKeyTransform.Decode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Decode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encoded">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.MachineKeyTransform" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.MachineKeyTransform.Encode(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.CookieTransform.Encode(System.Byte[])">
          <type api="T:System.IdentityModel.CookieTransform" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.MachineKeyTransform" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.PseudonymRequestMessage">
      <topicdata group="api" />
      <apidata name="PseudonymRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.PseudonymRequestMessage.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Services.PseudonymRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.PseudonymRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Pseudonym" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.PseudonymPtr" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Result" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.PseudonymRequestMessage">
      <topicdata name="PseudonymRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.PseudonymRequestMessage" />
      <apidata name="PseudonymRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.PseudonymRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.PseudonymRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.PseudonymRequestMessage">
      <topicdata name="PseudonymRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.PseudonymRequestMessage" />
      <apidata name="PseudonymRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Pseudonym" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.PseudonymPtr" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.Result" />
        <element api="P:System.IdentityModel.Services.PseudonymRequestMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.PseudonymRequestMessage.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.PseudonymRequestMessage.Pseudonym">
      <topicdata group="api" />
      <apidata name="Pseudonym" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Pseudonym" />
      <setter name="set_Pseudonym" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.PseudonymRequestMessage.PseudonymPtr">
      <topicdata group="api" />
      <apidata name="PseudonymPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PseudonymPtr" />
      <setter name="set_PseudonymPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.PseudonymRequestMessage.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.PseudonymRequestMessage.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.PseudonymRequestMessage.ResultPtr">
      <topicdata group="api" />
      <apidata name="ResultPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResultPtr" />
      <setter name="set_ResultPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.PseudonymRequestMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.PseudonymRequestMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs">
      <topicdata group="api" />
      <apidata name="RedirectingToIdentityProviderEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.#ctor(System.IdentityModel.Services.SignInRequestMessage)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs">
      <topicdata name="RedirectingToIdentityProviderEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      <apidata name="RedirectingToIdentityProviderEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs">
      <topicdata name="RedirectingToIdentityProviderEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      <apidata name="RedirectingToIdentityProviderEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.#ctor(System.IdentityModel.Services.SignInRequestMessage)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="signInRequestMessage">
          <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage">
      <topicdata group="api" />
      <apidata name="SignInRequestMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SignInRequestMessage" />
      <setter name="set_SignInRequestMessage" />
      <returns>
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs">
      <topicdata group="api" />
      <apidata name="SecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor">
          <element api="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken" />
        <element api="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SignInContext" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs">
      <topicdata name="SecurityTokenReceivedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      <apidata name="SecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs">
      <topicdata name="SecurityTokenReceivedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      <apidata name="SecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken" />
        <element api="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SignInContext" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SecurityToken,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.#ctor" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="signInContext">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken">
      <topicdata group="api" />
      <apidata name="SecurityToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityToken" />
      <setter name="set_SecurityToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SignInContext">
      <topicdata group="api" />
      <apidata name="SignInContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SignInContext" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs">
      <topicdata group="api" />
      <apidata name="SecurityTokenValidatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.#ctor(System.Security.Claims.ClaimsPrincipal)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs">
      <topicdata name="SecurityTokenValidatedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" />
      <apidata name="SecurityTokenValidatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs">
      <topicdata name="SecurityTokenValidatedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" />
      <apidata name="SecurityTokenValidatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.#ctor(System.Security.Claims.ClaimsPrincipal)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClaimsPrincipal" />
      <setter name="set_ClaimsPrincipal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.ServiceCertificateElement">
      <topicdata group="api" />
      <apidata name="ServiceCertificateElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ServiceCertificateElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.IdentityModel.Services.ServiceCertificateElement.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.ServiceCertificateElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.ServiceCertificateElement.CertificateReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.ServiceCertificateElement">
      <topicdata name="ServiceCertificateElement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.ServiceCertificateElement" />
      <apidata name="ServiceCertificateElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ServiceCertificateElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ServiceCertificateElement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.ServiceCertificateElement">
      <topicdata name="ServiceCertificateElement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.ServiceCertificateElement" />
      <apidata name="ServiceCertificateElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.ServiceCertificateElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.IdentityModel.Services.ServiceCertificateElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.IdentityModel.Services.ServiceCertificateElement.CertificateReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ServiceCertificateElement" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.ServiceCertificateElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ServiceCertificateElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.ServiceCertificateElement.CertificateReference">
      <topicdata group="api" />
      <apidata name="CertificateReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateReference" />
      <setter name="set_CertificateReference" />
      <returns>
        <type api="T:System.ServiceModel.Configuration.CertificateReferenceElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.ServiceCertificateElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>certificateReference</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.IdentityModel.Services.SessionAuthenticationModule">
      <topicdata group="api" />
      <apidata name="SessionAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SessionAuthenticationModule">
      <topicdata name="SessionAuthenticationModule" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      <apidata name="SessionAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SessionAuthenticationModule">
      <topicdata name="SessionAuthenticationModule" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      <apidata name="SessionAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler" />
        <element api="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.SessionAuthenticationModule">
      <topicdata name="SessionAuthenticationModule" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      <apidata name="SessionAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor" />
      <elements>
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut" />
        <element api="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AuthenticateSessionSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
        <parameter name="writeCookie">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.ContainsSessionTokenCookie(System.Web.HttpCookieCollection)">
      <topicdata group="api" />
      <apidata name="ContainsSessionTokenCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="httpCookieCollection">
          <type api="T:System.Web.HttpCookieCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionAuthenticationModule.ContextSessionSecurityToken">
      <topicdata group="api" />
      <apidata name="ContextSessionSecurityToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContextSessionSecurityToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionAuthenticationModule.CookieHandler">
      <topicdata group="api" />
      <apidata name="CookieHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CookieHandler" />
      <setter name="set_CookieHandler" />
      <returns>
        <type api="T:System.IdentityModel.Services.CookieHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.DateTime,System.DateTime,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateSessionSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="validTo">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="isPersistent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie">
      <topicdata group="api" />
      <apidata name="DeleteSessionTokenCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
      <topicdata group="api" />
      <apidata name="InitializeModule" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.InitializePropertiesFromConfiguration">
      <topicdata group="api" />
      <apidata name="InitializePropertiesFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode">
      <topicdata group="api" />
      <apidata name="IsReferenceMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReferenceMode" />
      <setter name="set_IsReferenceMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnAuthenticateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="eventArgs">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnPostAuthenticateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSessionSecurityTokenCreated" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSessionSecurityTokenReceived(System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSessionSecurityTokenReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignedOut(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignedOut" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSigningOut" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignOutError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.ReadSessionTokenFromCookie(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ReadSessionTokenFromCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionCookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SessionSecurityTokenCreated" />
      <remover name="remove_SessionSecurityTokenCreated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SessionSecurityTokenReceived" />
      <remover name="remove_SessionSecurityTokenReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.SetPrincipalFromSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name="SetPrincipalFromSessionToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sessionSecurityToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.SessionAuthenticationModule.SignedOut">
      <topicdata group="api" />
      <apidata name="SignedOut" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignedOut" />
      <remover name="remove_SignedOut" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.SessionAuthenticationModule.SigningOut">
      <topicdata group="api" />
      <apidata name="SigningOut" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SigningOut" />
      <remover name="remove_SigningOut" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.SignOut">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.SessionAuthenticationModule.SignOutError">
      <topicdata group="api" />
      <apidata name="SignOutError" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignOutError" />
      <remover name="remove_SignOutError" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.TryReadSessionTokenFromCookie(System.IdentityModel.Tokens.SessionSecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryReadSessionTokenFromCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionToken" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.ValidateSessionToken(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateSessionToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionSecurityToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionAuthenticationModule.WriteSessionTokenToCookie(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteSessionTokenToCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenCreatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs">
      <topicdata name="SessionSecurityTokenCreatedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      <apidata name="SessionSecurityTokenCreatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs">
      <topicdata name="SessionSecurityTokenCreatedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      <apidata name="SessionSecurityTokenCreatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken">
      <topicdata group="api" />
      <apidata name="SessionToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionToken" />
      <setter name="set_SessionToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie">
      <topicdata group="api" />
      <apidata name="WriteSessionCookie" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteSessionCookie" />
      <setter name="set_WriteSessionCookie" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs">
      <topicdata name="SessionSecurityTokenReceivedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      <apidata name="SessionSecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs">
      <topicdata name="SessionSecurityTokenReceivedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      <apidata name="SessionSecurityTokenReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie" />
        <element api="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.ReissueCookie">
      <topicdata group="api" />
      <apidata name="ReissueCookie" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReissueCookie" />
      <setter name="set_ReissueCookie" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs.SessionToken">
      <topicdata group="api" />
      <apidata name="SessionToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionToken" />
      <setter name="set_SessionToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SessionSecurityTokenResolver">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)" />
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SessionSecurityTokenResolver">
      <topicdata name="SessionSecurityTokenResolver" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SessionSecurityTokenResolver" />
      <apidata name="SessionSecurityTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore">
      <topicdata name="TryResolveTokenCore" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenResolver.#ctor(System.IdentityModel.Tokens.SessionSecurityTokenCache,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="tokenCache">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <topicdata group="api" />
      <apidata name="TryResolveSecurityKeyCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="key" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Services.SessionSecurityTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SigningOutEventArgs">
      <topicdata group="api" />
      <apidata name="SigningOutEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.SigningOutEventArgs.#ctor(System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.IPInitiated" />
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated" />
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.RPInitiated" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SigningOutEventArgs">
      <topicdata name="SigningOutEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SigningOutEventArgs" />
      <apidata name="SigningOutEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SigningOutEventArgs">
      <topicdata name="SigningOutEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SigningOutEventArgs" />
      <apidata name="SigningOutEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.IPInitiated" />
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated" />
        <element api="P:System.IdentityModel.Services.SigningOutEventArgs.RPInitiated" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SigningOutEventArgs.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="isIPInitiated">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SigningOutEventArgs.IPInitiated">
      <topicdata group="api" />
      <apidata name="IPInitiated" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IPInitiated" />
      <returns>
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated">
      <topicdata group="api" />
      <apidata name="IsIPInitiated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsIPInitiated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SigningOutEventArgs.RPInitiated">
      <topicdata group="api" />
      <apidata name="RPInitiated" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RPInitiated" />
      <returns>
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SignInRequestMessage">
      <topicdata group="api" />
      <apidata name="SignInRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="Overload:System.IdentityModel.Services.SignInRequestMessage.#ctor">
          <element api="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String)" />
          <element api="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.AuthenticationType" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.CurrentTime" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Federation" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Freshness" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.HomeRealm" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Policy" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Realm" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Request" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.RequestPtr" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.RequestUrl" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Resource" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SignInRequestMessage">
      <topicdata name="SignInRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SignInRequestMessage" />
      <apidata name="SignInRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SignInRequestMessage">
      <topicdata name="SignInRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SignInRequestMessage" />
      <apidata name="SignInRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.AuthenticationType" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.CurrentTime" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Federation" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Freshness" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.HomeRealm" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Policy" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Realm" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Request" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.RequestPtr" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.RequestUrl" />
        <element api="P:System.IdentityModel.Services.SignInRequestMessage.Resource" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SignInRequestMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String)" />
        <element api="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignInRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="realm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInRequestMessage.#ctor(System.Uri,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignInRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="realm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reply">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationType" />
      <setter name="set_AuthenticationType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.CurrentTime">
      <topicdata group="api" />
      <apidata name="CurrentTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentTime" />
      <setter name="set_CurrentTime" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Federation">
      <topicdata group="api" />
      <apidata name="Federation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Federation" />
      <setter name="set_Federation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Freshness">
      <topicdata group="api" />
      <apidata name="Freshness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Freshness" />
      <setter name="set_Freshness" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.HomeRealm">
      <topicdata group="api" />
      <apidata name="HomeRealm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HomeRealm" />
      <setter name="set_HomeRealm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Policy">
      <topicdata group="api" />
      <apidata name="Policy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Policy" />
      <setter name="set_Policy" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Realm">
      <topicdata group="api" />
      <apidata name="Realm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Realm" />
      <setter name="set_Realm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.RequestPtr">
      <topicdata group="api" />
      <apidata name="RequestPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestPtr" />
      <setter name="set_RequestPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.RequestUrl">
      <topicdata group="api" />
      <apidata name="RequestUrl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestUrl" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInRequestMessage.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource" />
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInRequestMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInRequestMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SignInResponseMessage">
      <topicdata group="api" />
      <apidata name="SignInResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="Overload:System.IdentityModel.Services.SignInResponseMessage.#ctor">
          <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.String)" />
          <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.Uri)" />
          <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Services.WSFederationSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        </element>
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignInResponseMessage.Result" />
        <element api="P:System.IdentityModel.Services.SignInResponseMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SignInResponseMessage">
      <topicdata name="SignInResponseMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SignInResponseMessage" />
      <apidata name="SignInResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SignInResponseMessage">
      <topicdata name="SignInResponseMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SignInResponseMessage" />
      <apidata name="SignInResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignInResponseMessage.Result" />
        <element api="P:System.IdentityModel.Services.SignInResponseMessage.ResultPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SignInResponseMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.String)" />
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.Uri)" />
        <element api="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Services.WSFederationSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Services.WSFederationSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignInResponseMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
        <parameter name="federationSerializer">
          <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignInResponseMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="result">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInResponseMessage.#ctor(System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignInResponseMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="resultPtr">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInResponseMessage.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignInResponseMessage.ResultPtr">
      <topicdata group="api" />
      <apidata name="ResultPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResultPtr" />
      <setter name="set_ResultPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInResponseMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignInResponseMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SignOutCleanupRequestMessage">
      <topicdata group="api" />
      <apidata name="SignOutCleanupRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="Overload:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor">
          <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri)" />
          <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SignOutCleanupRequestMessage">
      <topicdata name="SignOutCleanupRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      <apidata name="SignOutCleanupRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SignOutCleanupRequestMessage">
      <topicdata name="SignOutCleanupRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      <apidata name="SignOutCleanupRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignOutCleanupRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="reply">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutCleanupRequestMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.SignOutRequestMessage">
      <topicdata group="api" />
      <apidata name="SignOutRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="Overload:System.IdentityModel.Services.SignOutRequestMessage.#ctor">
          <element api="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri)" />
          <element api="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignOutRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.SignOutRequestMessage">
      <topicdata name="SignOutRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.SignOutRequestMessage" />
      <apidata name="SignOutRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.Validate" />
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.SignOutRequestMessage">
      <topicdata name="SignOutRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.SignOutRequestMessage" />
      <apidata name="SignOutRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.SignOutRequestMessage.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.SignOutRequestMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignOutRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutRequestMessage.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.SignOutRequestMessage.#ctor" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="reply">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.SignOutRequestMessage.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutRequestMessage.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Validate">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.SignOutRequestMessage.Write(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.WSFederationAuthenticationModule">
      <topicdata group="api" />
      <apidata name="WSFederationAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.WSFederationAuthenticationModule">
      <topicdata name="WSFederationAuthenticationModule" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      <apidata name="WSFederationAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Dispose" />
        <element api="M:System.IdentityModel.Services.HttpModuleBase.Init(System.Web.HttpApplication)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
        <element api="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut">
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
          <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.WSFederationAuthenticationModule">
      <topicdata name="WSFederationAuthenticationModule" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      <apidata name="WSFederationAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
        <element api="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.WSFederationAuthenticationModule">
      <topicdata name="WSFederationAuthenticationModule" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      <apidata name="WSFederationAuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <elements>
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
        <element api="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse">
      <topicdata name="CanReadSignInResponse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadSignInResponse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken">
      <topicdata name="GetSecurityToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetSecurityToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage">
      <topicdata name="GetXmlTokenFromMessage" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetXmlTokenFromMessage" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut">
      <topicdata name="SignOut" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationType" />
      <setter name="set_AuthenticationType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed">
      <topicdata group="api" />
      <apidata name="AuthorizationFailed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AuthorizationFailed" />
      <remover name="remove_AuthorizationFailed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="CanReadSignInResponse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CanReadSignInResponse" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
        <parameter name="onPage">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateSignInRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uniqueId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rememberMeSet">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name="FederatedSignOut" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="signOutUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="replyUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness">
      <topicdata group="api" />
      <apidata name="Freshness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Freshness" />
      <setter name="set_Freshness" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetFederationPassiveSignOutUrl" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signOutReply">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signOutQueryString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)">
      <topicdata group="api" />
      <apidata name="GetReferencedResult" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="resultPtr">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="GetReturnUrlFromResponse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)">
      <topicdata group="api" />
      <apidata name="GetSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="GetSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext">
      <topicdata group="api" />
      <apidata name="GetSessionTokenContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="GetSignInResponseMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)">
      <topicdata group="api" />
      <apidata name="GetSignOutRedirectUrl" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="signOutMessage">
          <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)">
      <topicdata group="api" />
      <apidata name="GetXmlTokenFromMessage" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)">
      <topicdata group="api" />
      <apidata name="GetXmlTokenFromMessage" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
        </parameter>
        <parameter name="federationSerializer">
          <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm">
      <topicdata group="api" />
      <apidata name="HomeRealm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HomeRealm" />
      <setter name="set_HomeRealm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)">
      <topicdata group="api" />
      <apidata name="InitializeModule" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializeModule(System.Web.HttpApplication)">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration">
      <topicdata group="api" />
      <apidata name="InitializePropertiesFromConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Services.HttpModuleBase.InitializePropertiesFromConfiguration">
          <type api="T:System.IdentityModel.Services.HttpModuleBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="IsSignInResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer">
      <topicdata group="api" />
      <apidata name="Issuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Issuer" />
      <setter name="set_Issuer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnAuthenticateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnAuthorizationFailed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.IdentityModel.Services.AuthorizationFailedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnEndRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnPostAuthenticateRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)">
      <topicdata group="api" />
      <apidata name="OnRedirectingToIdentityProvider" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSessionSecurityTokenCreated" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignedIn" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignedOut" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignInError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSigningOut" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSignOutError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled">
      <topicdata group="api" />
      <apidata name="PassiveRedirectEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PassiveRedirectEnabled" />
      <setter name="set_PassiveRedirectEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects">
      <topicdata group="api" />
      <apidata name="PersistentCookiesOnPassiveRedirects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistentCookiesOnPassiveRedirects" />
      <setter name="set_PersistentCookiesOnPassiveRedirects" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy">
      <topicdata group="api" />
      <apidata name="Policy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Policy" />
      <setter name="set_Policy" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm">
      <topicdata group="api" />
      <apidata name="Realm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Realm" />
      <setter name="set_Realm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider">
      <topicdata group="api" />
      <apidata name="RedirectingToIdentityProvider" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RedirectingToIdentityProvider" />
      <remover name="remove_RedirectingToIdentityProvider" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="RedirectToIdentityProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="uniqueId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="persist">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply">
      <topicdata group="api" />
      <apidata name="Reply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reply" />
      <setter name="set_Reply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request">
      <topicdata group="api" />
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr">
      <topicdata group="api" />
      <apidata name="RequestPtr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestPtr" />
      <setter name="set_RequestPtr" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps">
      <topicdata group="api" />
      <apidata name="RequireHttps" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequireHttps" />
      <setter name="set_RequireHttps" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource" />
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived">
      <topicdata group="api" />
      <apidata name="SecurityTokenReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SecurityTokenReceived" />
      <remover name="remove_SecurityTokenReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated">
      <topicdata group="api" />
      <apidata name="SecurityTokenValidated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SecurityTokenValidated" />
      <remover name="remove_SecurityTokenValidated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SecurityTokenValidatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenCreated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SessionSecurityTokenCreated" />
      <remover name="remove_SessionSecurityTokenCreated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetPrincipalAndWriteSessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
        <parameter name="isSession">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn">
      <topicdata group="api" />
      <apidata name="SignedIn" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignedIn" />
      <remover name="remove_SignedIn" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut">
      <topicdata group="api" />
      <apidata name="SignedOut" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignedOut" />
      <remover name="remove_SignedOut" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)">
      <topicdata group="api" />
      <apidata name="SignIn" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ControlId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext">
      <topicdata group="api" />
      <apidata name="SignInContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SignInContext" />
      <setter name="set_SignInContext" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError">
      <topicdata group="api" />
      <apidata name="SignInError" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignInError" />
      <remover name="remove_SignInError" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut">
      <topicdata group="api" />
      <apidata name="SigningOut" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SigningOut" />
      <remover name="remove_SigningOut" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.SigningOutEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString">
      <topicdata group="api" />
      <apidata name="SignInQueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SignInQueryString" />
      <setter name="set_SignInQueryString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="isIPRequest">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="redirectUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SignOut" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="redirectUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="initiateSignoutCleanup">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError">
      <topicdata group="api" />
      <apidata name="SignOutError" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SignOutError" />
      <remover name="remove_SignOutError" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.IdentityModel.Services.ErrorEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString">
      <topicdata group="api" />
      <apidata name="SignOutQueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SignOutQueryString" />
      <setter name="set_SignOutQueryString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply">
      <topicdata group="api" />
      <apidata name="SignOutReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SignOutReply" />
      <setter name="set_SignOutReply" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties">
      <topicdata group="api" />
      <apidata name="VerifyProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas">
      <topicdata group="api" />
      <apidata name="XmlDictionaryReaderQuotas" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlDictionaryReaderQuotas" />
      <setter name="set_XmlDictionaryReaderQuotas" />
      <returns>
        <type api="T:System.Xml.XmlDictionaryReaderQuotas" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.WSFederationMessage">
      <topicdata group="api" />
      <apidata name="WSFederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.AttributeRequestMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.PseudonymRequestMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.SignInRequestMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.SignInResponseMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.SignOutCleanupRequestMessage" ref="true" />
          <type api="T:System.IdentityModel.Services.SignOutRequestMessage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Validate" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.WSFederationMessage">
      <topicdata name="WSFederationMessage" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.WSFederationMessage" />
      <apidata name="WSFederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Services.FederationMessage.GetParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.RemoveParameter(System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.SetUriParameter(System.String,System.String)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Validate" />
        <element api="M:System.IdentityModel.Services.FederationMessage.Write(System.IO.TextWriter)" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteFormPost" />
        <element api="M:System.IdentityModel.Services.FederationMessage.WriteQueryString" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.WSFederationMessage">
      <topicdata name="WSFederationMessage" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.WSFederationMessage" />
      <apidata name="WSFederationMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Services.FederationMessage.BaseUri" />
        <element api="P:System.IdentityModel.Services.FederationMessage.Parameters" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Action" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Context" />
        <element api="P:System.IdentityModel.Services.WSFederationMessage.Encoding" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessage.#ctor(System.Uri,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationMessage.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationMessage.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Context" />
      <setter name="set_Context" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessage.CreateFromFormPost(System.Web.HttpRequestBase)">
      <topicdata group="api" />
      <apidata name="CreateFromFormPost" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Web.HttpRequestBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessage.CreateFromNameValueCollection(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="CreateFromNameValueCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseUrl">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessage.CreateFromUri(System.Uri)">
      <topicdata group="api" />
      <apidata name="CreateFromUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Services.WSFederationMessage.Encoding">
      <topicdata group="api" />
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Encoding" />
      <setter name="set_Encoding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessage.TryCreateFromUri(System.Uri,System.IdentityModel.Services.WSFederationMessage@)">
      <topicdata group="api" />
      <apidata name="TryCreateFromUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="fedMsg" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessage" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.WSFederationMessageException">
      <topicdata group="api" />
      <apidata name="WSFederationMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor">
          <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
          <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.WSFederationMessageException">
      <topicdata name="WSFederationMessageException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.WSFederationMessageException" />
      <apidata name="WSFederationMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Services.WSFederationMessageException">
      <topicdata name="WSFederationMessageException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Services.WSFederationMessageException" />
      <apidata name="WSFederationMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Services.WSFederationMessageException">
      <topicdata name="WSFederationMessageException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Services.WSFederationMessageException" />
      <apidata name="WSFederationMessageException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
        <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessageException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationMessageException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationMessageException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationMessageException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Services.WSFederationSerializer">
      <topicdata group="api" />
      <apidata name="WSFederationSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Services.WSFederationSerializer.#ctor">
          <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
          <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)" />
          <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
        </element>
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Services.WSFederationSerializer">
      <topicdata name="WSFederationSerializer" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Services.WSFederationSerializer" />
      <apidata name="WSFederationSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Services.WSFederationSerializer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)" />
        <element api="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <parameters>
        <parameter name="requestSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" ref="true" />
        </parameter>
        <parameter name="responseSerializer">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.#ctor(System.Xml.XmlDictionaryReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Services.WSFederationSerializer.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.CanReadRequest(System.String)">
      <topicdata group="api" />
      <apidata name="CanReadRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="trustMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.CanReadResponse(System.String)">
      <topicdata group="api" />
      <apidata name="CanReadResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="trustMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.CreateRequest(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name="CreateRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.CreateResponse(System.IdentityModel.Services.FederationMessage,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name="CreateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.IdentityModel.Services.FederationMessage" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedRequest(System.String)">
      <topicdata group="api" />
      <apidata name="GetReferencedRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="wreqptr">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.GetReferencedResult(System.String)">
      <topicdata group="api" />
      <apidata name="GetReferencedResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="wresultptr">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.GetRequestAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name="GetRequestAsString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Services.WSFederationSerializer.GetResponseAsString(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)">
      <topicdata group="api" />
      <apidata name="GetResponseAsString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel.Services" module="System.IdentityModel.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.IdentityModel.Services" />
        <type api="T:System.IdentityModel.Services.WSFederationSerializer" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>