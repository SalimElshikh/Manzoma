<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="mscorlib">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BED7F4EA-1A96-11d2-8F08-00A0C9A6186D</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Configuration.Install">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.Install.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.Install.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.Install.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WindowsBase">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Diagnostics">
      <topicdata group="api" />
      <apidata name="System.Diagnostics" group="namespace" />
      <elements>
        <element api="T:System.Diagnostics.ConditionalAttribute" />
        <element api="T:System.Diagnostics.Debugger" />
        <element api="T:System.Diagnostics.DebuggerStepThroughAttribute" />
        <element api="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
        <element api="T:System.Diagnostics.DebuggerHiddenAttribute" />
        <element api="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
        <element api="T:System.Diagnostics.DebuggableAttribute" />
        <element api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" />
        <element api="T:System.Diagnostics.DebuggerBrowsableState" />
        <element api="T:System.Diagnostics.DebuggerBrowsableAttribute" />
        <element api="T:System.Diagnostics.DebuggerTypeProxyAttribute" />
        <element api="T:System.Diagnostics.DebuggerDisplayAttribute" />
        <element api="T:System.Diagnostics.DebuggerVisualizerAttribute" />
        <element api="T:System.Diagnostics.StackTrace" />
        <element api="T:System.Diagnostics.StackFrame" />
        <element api="T:System.Diagnostics.BooleanSwitch" />
        <element api="T:System.Diagnostics.ConsoleTraceListener" />
        <element api="T:System.Diagnostics.CorrelationManager" />
        <element api="T:System.Diagnostics.Debug" />
        <element api="T:System.Diagnostics.DefaultTraceListener" />
        <element api="T:System.Diagnostics.DelimitedListTraceListener" />
        <element api="T:System.Diagnostics.EventTypeFilter" />
        <element api="T:System.Diagnostics.SourceFilter" />
        <element api="T:System.Diagnostics.SourceLevels" />
        <element api="T:System.Diagnostics.SourceSwitch" />
        <element api="T:System.Diagnostics.Switch" />
        <element api="T:System.Diagnostics.SwitchAttribute" />
        <element api="T:System.Diagnostics.SwitchLevelAttribute" />
        <element api="T:System.Diagnostics.TextWriterTraceListener" />
        <element api="T:System.Diagnostics.Trace" />
        <element api="T:System.Diagnostics.TraceEventCache" />
        <element api="T:System.Diagnostics.TraceEventType" />
        <element api="T:System.Diagnostics.TraceFilter" />
        <element api="T:System.Diagnostics.TraceLevel" />
        <element api="T:System.Diagnostics.TraceListener" />
        <element api="T:System.Diagnostics.TraceListenerCollection" />
        <element api="T:System.Diagnostics.TraceOptions" />
        <element api="T:System.Diagnostics.TraceSource" />
        <element api="T:System.Diagnostics.TraceSwitch" />
        <element api="T:System.Diagnostics.XmlWriterTraceListener" />
        <element api="T:System.Diagnostics.CounterCreationData" />
        <element api="T:System.Diagnostics.CounterCreationDataCollection" />
        <element api="T:System.Diagnostics.CounterSample" />
        <element api="T:System.Diagnostics.CounterSampleCalculator" />
        <element api="T:System.Diagnostics.DataReceivedEventHandler" />
        <element api="T:System.Diagnostics.DataReceivedEventArgs" />
        <element api="T:System.Diagnostics.DiagnosticsConfigurationHandler" />
        <element api="T:System.Diagnostics.EntryWrittenEventArgs" />
        <element api="T:System.Diagnostics.EntryWrittenEventHandler" />
        <element api="T:System.Diagnostics.EventInstance" />
        <element api="T:System.Diagnostics.EventLog" />
        <element api="T:System.Diagnostics.EventLogEntry" />
        <element api="T:System.Diagnostics.EventLogEntryCollection" />
        <element api="T:System.Diagnostics.EventLogEntryType" />
        <element api="T:System.Diagnostics.EventLogPermission" />
        <element api="T:System.Diagnostics.EventLogPermissionAccess" />
        <element api="T:System.Diagnostics.EventLogPermissionAttribute" />
        <element api="T:System.Diagnostics.EventLogPermissionEntry" />
        <element api="T:System.Diagnostics.EventLogPermissionEntryCollection" />
        <element api="T:System.Diagnostics.EventLogTraceListener" />
        <element api="T:System.Diagnostics.EventSourceCreationData" />
        <element api="T:System.Diagnostics.FileVersionInfo" />
        <element api="T:System.Diagnostics.ICollectData" />
        <element api="T:System.Diagnostics.InstanceData" />
        <element api="T:System.Diagnostics.InstanceDataCollection" />
        <element api="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <element api="T:System.Diagnostics.MonitoringDescriptionAttribute" />
        <element api="T:System.Diagnostics.OverflowAction" />
        <element api="T:System.Diagnostics.PerformanceCounter" />
        <element api="T:System.Diagnostics.PerformanceCounterCategory" />
        <element api="T:System.Diagnostics.PerformanceCounterCategoryType" />
        <element api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" />
        <element api="T:System.Diagnostics.PerformanceCounterManager" />
        <element api="T:System.Diagnostics.PerformanceCounterPermission" />
        <element api="T:System.Diagnostics.PerformanceCounterPermissionAccess" />
        <element api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />
        <element api="T:System.Diagnostics.PerformanceCounterPermissionEntry" />
        <element api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />
        <element api="T:System.Diagnostics.PerformanceCounterType" />
        <element api="T:System.Diagnostics.Process" />
        <element api="T:System.Diagnostics.ProcessModule" />
        <element api="T:System.Diagnostics.ProcessModuleCollection" />
        <element api="T:System.Diagnostics.ProcessPriorityClass" />
        <element api="T:System.Diagnostics.ProcessStartInfo" />
        <element api="T:System.Diagnostics.ProcessThread" />
        <element api="T:System.Diagnostics.ProcessThreadCollection" />
        <element api="T:System.Diagnostics.ProcessWindowStyle" />
        <element api="T:System.Diagnostics.Stopwatch" />
        <element api="T:System.Diagnostics.ThreadPriorityLevel" />
        <element api="T:System.Diagnostics.ThreadState" />
        <element api="T:System.Diagnostics.ThreadWaitReason" />
        <element api="T:System.Diagnostics.EventLogInstaller" />
        <element api="T:System.Diagnostics.PerformanceCounterInstaller" />
        <element api="T:System.Diagnostics.EventSchemaTraceListener" />
        <element api="T:System.Diagnostics.TraceLogRetentionOption" />
        <element api="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
        <element api="T:System.Diagnostics.PresentationTraceLevel" />
        <element api="T:System.Diagnostics.PresentationTraceSources" />
      </elements>
    </api>
    <api id="T:System.Diagnostics.BooleanSwitch">
      <topicdata group="api" />
      <apidata name="BooleanSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Switch" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.BooleanSwitch.#ctor">
          <element api="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.BooleanSwitch.Enabled" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.BooleanSwitch">
      <topicdata name="BooleanSwitch" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.BooleanSwitch" />
      <apidata name="BooleanSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.BooleanSwitch">
      <topicdata name="BooleanSwitch" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.BooleanSwitch" />
      <apidata name="BooleanSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.BooleanSwitch.Enabled" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.BooleanSwitch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.BooleanSwitch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.BooleanSwitch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultSwitchValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.BooleanSwitch.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.BooleanSwitch.OnValueChanged">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Switch.OnValueChanged">
          <type api="T:System.Diagnostics.Switch" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ConditionalAttribute">
      <topicdata group="api" />
      <apidata name="ConditionalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.ConditionalAttribute">
      <topicdata name="ConditionalAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ConditionalAttribute" />
      <apidata name="ConditionalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConditionalAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ConditionalAttribute">
      <topicdata name="ConditionalAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ConditionalAttribute" />
      <apidata name="ConditionalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConditionalAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="conditionString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ConditionalAttribute.ConditionString">
      <topicdata group="api" />
      <apidata name="ConditionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConditionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ConsoleTraceListener">
      <topicdata group="api" />
      <apidata name="ConsoleTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.#ctor">
          <element api="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
          <element api="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.ConsoleTraceListener.Close" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.ConsoleTraceListener">
      <topicdata name="ConsoleTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ConsoleTraceListener" />
      <apidata name="ConsoleTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.ConsoleTraceListener.Close" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ConsoleTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ConsoleTraceListener">
      <topicdata name="ConsoleTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ConsoleTraceListener" />
      <apidata name="ConsoleTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.ConsoleTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
        <element api="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ConsoleTraceListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <parameters>
        <parameter name="useErrorStream">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ConsoleTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Close">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ConsoleTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.CorrelationManager">
      <topicdata group="api" />
      <apidata name="CorrelationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation">
          <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
          <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.CorrelationManager.StopLogicalOperation" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.CorrelationManager.ActivityId" />
        <element api="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.CorrelationManager">
      <topicdata name="CorrelationManager" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.CorrelationManager" />
      <apidata name="CorrelationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation">
          <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
          <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.CorrelationManager.StopLogicalOperation" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.CorrelationManager">
      <topicdata name="CorrelationManager" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.CorrelationManager" />
      <apidata name="CorrelationManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.CorrelationManager.ActivityId" />
        <element api="P:System.Diagnostics.CorrelationManager.LogicalOperationStack" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation">
      <topicdata name="StartLogicalOperation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="StartLogicalOperation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
        <element api="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CorrelationManager.ActivityId">
      <topicdata group="api" />
      <apidata name="ActivityId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ActivityId" />
      <setter name="set_ActivityId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CorrelationManager.LogicalOperationStack">
      <topicdata group="api" />
      <apidata name="LogicalOperationStack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogicalOperationStack" />
      <returns>
        <type api="T:System.Collections.Stack" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CorrelationManager.StartLogicalOperation">
      <topicdata group="api" />
      <apidata name="StartLogicalOperation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)">
      <topicdata group="api" />
      <apidata name="StartLogicalOperation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operationId">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CorrelationManager.StopLogicalOperation">
      <topicdata group="api" />
      <apidata name="StopLogicalOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.CounterCreationData">
      <topicdata group="api" />
      <apidata name="CounterCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationData.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.CounterCreationData.#ctor">
          <element api="M:System.Diagnostics.CounterCreationData.#ctor" />
          <element api="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.CounterCreationData.CounterHelp" />
        <element api="P:System.Diagnostics.CounterCreationData.CounterName" />
        <element api="P:System.Diagnostics.CounterCreationData.CounterType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.CounterCreationDataConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.CounterCreationData">
      <topicdata name="CounterCreationData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.CounterCreationData" />
      <apidata name="CounterCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationData.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.CounterCreationData">
      <topicdata name="CounterCreationData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.CounterCreationData" />
      <apidata name="CounterCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationData.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.CounterCreationData.CounterHelp" />
        <element api="P:System.Diagnostics.CounterCreationData.CounterName" />
        <element api="P:System.Diagnostics.CounterCreationData.CounterType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterCreationData.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.CounterCreationData.#ctor" />
        <element api="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationData.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterCreationData.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationData.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterCreationData.#ctor" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterType">
          <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterCreationData.CounterHelp">
      <topicdata group="api" />
      <apidata name="CounterHelp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CounterHelp" />
      <setter name="set_CounterHelp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.CounterCreationData.CounterName">
      <topicdata group="api" />
      <apidata name="CounterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CounterName" />
      <setter name="set_CounterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.CounterCreationData.CounterType">
      <topicdata group="api" />
      <apidata name="CounterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CounterType" />
      <setter name="set_CounterType" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
            <enumValue>
              <field name="NumberOfItems32" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.CounterCreationDataCollection">
      <topicdata group="api" />
      <apidata name="CounterCreationDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.Diagnostics.CounterCreationDataCollection.#ctor">
          <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor" />
          <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])" />
          <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)" />
        </element>
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)" />
        <element api="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange">
          <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])" />
          <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)" />
        </element>
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.CounterCreationDataCollection">
      <topicdata name="CounterCreationDataCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.CounterCreationDataCollection" />
      <apidata name="CounterCreationDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)" />
        <element api="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange">
          <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])" />
          <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)" />
        </element>
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.CounterCreationDataCollection">
      <topicdata name="CounterCreationDataCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.CounterCreationDataCollection" />
      <apidata name="CounterCreationDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])" />
        <element api="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterCreationDataCollection.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterCreationDataCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.CounterCreationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.CounterSample">
      <topicdata group="api" />
      <apidata name="CounterSample" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.CounterSample.Empty" />
        <element api="Overload:System.Diagnostics.CounterSample.#ctor">
          <element api="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)" />
          <element api="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)" />
        </element>
        <element api="Overload:System.Diagnostics.CounterSample.Calculate">
          <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        </element>
        <element api="Overload:System.Diagnostics.CounterSample.Equals">
          <element api="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSample.Equals(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.CounterSample.GetHashCode" />
        <element api="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        <element api="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Diagnostics.CounterSample.BaseValue" />
        <element api="P:System.Diagnostics.CounterSample.CounterFrequency" />
        <element api="P:System.Diagnostics.CounterSample.CounterTimeStamp" />
        <element api="P:System.Diagnostics.CounterSample.CounterType" />
        <element api="P:System.Diagnostics.CounterSample.RawValue" />
        <element api="P:System.Diagnostics.CounterSample.SystemFrequency" />
        <element api="P:System.Diagnostics.CounterSample.TimeStamp" />
        <element api="P:System.Diagnostics.CounterSample.TimeStamp100nSec" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.CounterSample">
      <topicdata name="CounterSample" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.CounterSample" />
      <apidata name="CounterSample" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="Overload:System.Diagnostics.CounterSample.Calculate">
          <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        </element>
        <element api="Overload:System.Diagnostics.CounterSample.Equals">
          <element api="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSample.Equals(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.CounterSample.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" />
      </containers>
    </api>
    <api id="Operators.T:System.Diagnostics.CounterSample">
      <topicdata name="CounterSample" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Diagnostics.CounterSample" />
      <apidata name="CounterSample" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        <element api="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.CounterSample">
      <topicdata name="CounterSample" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.CounterSample" />
      <apidata name="CounterSample" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Diagnostics.CounterSample.BaseValue" />
        <element api="P:System.Diagnostics.CounterSample.CounterFrequency" />
        <element api="P:System.Diagnostics.CounterSample.CounterTimeStamp" />
        <element api="P:System.Diagnostics.CounterSample.CounterType" />
        <element api="P:System.Diagnostics.CounterSample.RawValue" />
        <element api="P:System.Diagnostics.CounterSample.SystemFrequency" />
        <element api="P:System.Diagnostics.CounterSample.TimeStamp" />
        <element api="P:System.Diagnostics.CounterSample.TimeStamp100nSec" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.CounterSample">
      <topicdata name="CounterSample" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.CounterSample" />
      <apidata name="CounterSample" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="F:System.Diagnostics.CounterSample.Empty" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterSample.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)" />
        <element api="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterSample.Calculate">
      <topicdata name="Calculate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Calculate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)" />
        <element api="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterSample.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)" />
        <element api="M:System.Diagnostics.CounterSample.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterSample.#ctor" />
      <parameters>
        <parameter name="rawValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="baseValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="counterFrequency">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="systemFrequency">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="timeStamp">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="timeStamp100nSec">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="counterType">
          <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Diagnostics.PerformanceCounterType,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.CounterSample.#ctor" />
      <parameters>
        <parameter name="rawValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="baseValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="counterFrequency">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="systemFrequency">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="timeStamp">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="timeStamp100nSec">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="counterType">
          <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
        </parameter>
        <parameter name="counterTimeStamp">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.BaseValue">
      <topicdata group="api" />
      <apidata name="BaseValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="Calculate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.CounterSample.Calculate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.Calculate(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="Calculate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.CounterSample.Calculate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
        <parameter name="nextCounterSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.CounterFrequency">
      <topicdata group="api" />
      <apidata name="CounterFrequency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterFrequency" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.CounterTimeStamp">
      <topicdata group="api" />
      <apidata name="CounterTimeStamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterTimeStamp" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.CounterType">
      <topicdata group="api" />
      <apidata name="CounterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterType" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.CounterSample.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.Equals(System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CounterSample.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.CounterSample.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.op_Equality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSample.op_Inequality(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
        <parameter name="b">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.RawValue">
      <topicdata group="api" />
      <apidata name="RawValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RawValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.SystemFrequency">
      <topicdata group="api" />
      <apidata name="SystemFrequency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SystemFrequency" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.TimeStamp">
      <topicdata group="api" />
      <apidata name="TimeStamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeStamp" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.CounterSample.TimeStamp100nSec">
      <topicdata group="api" />
      <apidata name="TimeStamp100nSec" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeStamp100nSec" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.CounterSampleCalculator">
      <topicdata group="api" />
      <apidata name="CounterSampleCalculator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue">
          <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.CounterSampleCalculator">
      <topicdata name="CounterSampleCalculator" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.CounterSampleCalculator" />
      <apidata name="CounterSampleCalculator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue">
          <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)" />
          <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSampleCalculator" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue">
      <topicdata name="ComputeCounterValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ComputeCounterValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)" />
        <element api="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSampleCalculator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="ComputeCounterValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSampleCalculator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name="ComputeCounterValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="oldSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
        <parameter name="newSample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.CounterSampleCalculator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DataReceivedEventArgs">
      <topicdata group="api" />
      <apidata name="DataReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.DataReceivedEventArgs">
      <topicdata name="DataReceivedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DataReceivedEventArgs" />
      <apidata name="DataReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DataReceivedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DataReceivedEventArgs">
      <topicdata name="DataReceivedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DataReceivedEventArgs" />
      <apidata name="DataReceivedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DataReceivedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DataReceivedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DataReceivedEventHandler">
      <topicdata group="api" />
      <apidata name="DataReceivedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Diagnostics.DataReceivedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Debug">
      <topicdata group="api" />
      <apidata name="Debug" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.Debug.Assert">
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Debug.Close" />
        <element api="Overload:System.Diagnostics.Debug.Fail">
          <element api="M:System.Diagnostics.Debug.Fail(System.String)" />
          <element api="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Debug.Flush" />
        <element api="M:System.Diagnostics.Debug.Indent" />
        <element api="Overload:System.Diagnostics.Debug.Print">
          <element api="M:System.Diagnostics.Debug.Print(System.String)" />
          <element api="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Debug.Unindent" />
        <element api="Overload:System.Diagnostics.Debug.Write">
          <element api="M:System.Diagnostics.Debug.Write(System.Object)" />
          <element api="M:System.Diagnostics.Debug.Write(System.String)" />
          <element api="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteIf">
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteLine">
          <element api="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteLineIf">
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="P:System.Diagnostics.Debug.AutoFlush" />
        <element api="P:System.Diagnostics.Debug.IndentLevel" />
        <element api="P:System.Diagnostics.Debug.IndentSize" />
        <element api="P:System.Diagnostics.Debug.Listeners" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.Debug">
      <topicdata name="Debug" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Debug" />
      <apidata name="Debug" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Debug.Assert">
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
          <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Debug.Close" />
        <element api="Overload:System.Diagnostics.Debug.Fail">
          <element api="M:System.Diagnostics.Debug.Fail(System.String)" />
          <element api="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Debug.Flush" />
        <element api="M:System.Diagnostics.Debug.Indent" />
        <element api="Overload:System.Diagnostics.Debug.Print">
          <element api="M:System.Diagnostics.Debug.Print(System.String)" />
          <element api="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Debug.Unindent" />
        <element api="Overload:System.Diagnostics.Debug.Write">
          <element api="M:System.Diagnostics.Debug.Write(System.Object)" />
          <element api="M:System.Diagnostics.Debug.Write(System.String)" />
          <element api="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteIf">
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteLine">
          <element api="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
          <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Debug.WriteLineIf">
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Debug">
      <topicdata name="Debug" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Debug" />
      <apidata name="Debug" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Debug.AutoFlush" />
        <element api="P:System.Diagnostics.Debug.IndentLevel" />
        <element api="P:System.Diagnostics.Debug.IndentSize" />
        <element api="P:System.Diagnostics.Debug.Listeners" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.Assert">
      <topicdata name="Assert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Assert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
        <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
        <element api="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.Fail(System.String)" />
        <element api="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.Print">
      <topicdata name="Print" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Print" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.Print(System.String)" />
        <element api="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.Write(System.Object)" />
        <element api="M:System.Diagnostics.Debug.Write(System.String)" />
        <element api="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.WriteIf">
      <topicdata name="WriteIf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
        <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.Debug.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
        <element api="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Debug.WriteLineIf">
      <topicdata name="WriteLineIf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
        <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
        <element api="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debug.Assert(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessageFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Debug.AutoFlush">
      <topicdata group="api" />
      <apidata name="AutoFlush" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoFlush" />
      <setter name="set_AutoFlush" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debug.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Fail(System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Fail" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Fail" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Indent">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Debug.IndentLevel">
      <topicdata group="api" />
      <apidata name="IndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentLevel" />
      <setter name="set_IndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Debug.IndentSize">
      <topicdata group="api" />
      <apidata name="IndentSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentSize" />
      <setter name="set_IndentSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Debug.Listeners">
      <topicdata group="api" />
      <apidata name="Listeners" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Listeners">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="SharedState">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debug.Print(System.String)">
      <topicdata group="api" />
      <apidata name="Print" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Print" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Print" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Print" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Unindent">
      <topicdata group="api" />
      <apidata name="Unindent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Write(System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.Write(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLine(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Debug.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debug" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DEBUG</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.DebuggableAttribute">
      <topicdata group="api" />
      <apidata name="DebuggableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Diagnostics.DebuggableAttribute.#ctor">
          <element api="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)" />
          <element api="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags" />
        <element api="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled" />
        <element api="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Module" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggableAttribute">
      <topicdata name="DebuggableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggableAttribute" />
      <apidata name="DebuggableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggableAttribute">
      <topicdata name="DebuggableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggableAttribute" />
      <apidata name="DebuggableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags" />
        <element api="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled" />
        <element api="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DebuggableAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)" />
        <element api="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggableAttribute.#ctor" />
      <parameters>
        <parameter name="isJITTrackingEnabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isJITOptimizerDisabled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggableAttribute.#ctor(System.Diagnostics.DebuggableAttribute.DebuggingModes)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggableAttribute.#ctor" />
      <parameters>
        <parameter name="modes">
          <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
            <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggableAttribute.DebuggingFlags">
      <topicdata group="api" />
      <apidata name="DebuggingFlags" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DebuggingFlags" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled">
      <topicdata group="api" />
      <apidata name="IsJITOptimizerDisabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsJITOptimizerDisabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled">
      <topicdata group="api" />
      <apidata name="IsJITTrackingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsJITTrackingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggableAttribute.DebuggingModes">
      <topicdata group="api" />
      <apidata name="DebuggingModes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None" />
        <element api="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default" />
        <element api="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations" />
        <element api="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints" />
        <element api="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations">
      <topicdata group="api" notopic="" />
      <apidata name="DisableOptimizations" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <value>256</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.EnableEditAndContinue">
      <topicdata group="api" notopic="" />
      <apidata name="EnableEditAndContinue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.IgnoreSymbolStoreSequencePoints">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreSymbolStoreSequencePoints" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggableAttribute.DebuggingModes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggableAttribute.DebuggingModes" ref="false">
          <type api="T:System.Diagnostics.DebuggableAttribute" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Diagnostics.Debugger">
      <topicdata group="api" />
      <apidata name="Debugger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.Debugger.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.Debugger.DefaultCategory" />
        <element api="M:System.Diagnostics.Debugger.#ctor" />
        <element api="M:System.Diagnostics.Debugger.Break" />
        <element api="M:System.Diagnostics.Debugger.IsLogging" />
        <element api="M:System.Diagnostics.Debugger.Launch" />
        <element api="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />
        <element api="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Debugger.IsAttached" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Debugger">
      <topicdata name="Debugger" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Debugger" />
      <apidata name="Debugger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.Debugger.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Debugger.Break" />
        <element api="M:System.Diagnostics.Debugger.IsLogging" />
        <element api="M:System.Diagnostics.Debugger.Launch" />
        <element api="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />
        <element api="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Debugger">
      <topicdata name="Debugger" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Debugger" />
      <apidata name="Debugger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.Debugger.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Debugger.IsAttached" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.Debugger">
      <topicdata name="Debugger" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.Debugger" />
      <apidata name="Debugger" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.Debugger.#ctor" />
      <elements>
        <element api="F:System.Diagnostics.Debugger.DefaultCategory" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debugger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Do not create instances of the Debugger class.  Call the static methods directly on this type instead</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Debugger.Break">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Debugger.DefaultCategory">
      <topicdata group="api" />
      <apidata name="DefaultCategory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Debugger.IsAttached">
      <topicdata group="api" />
      <apidata name="IsAttached" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAttached" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debugger.IsLogging">
      <topicdata group="api" />
      <apidata name="IsLogging" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debugger.Launch">
      <topicdata group="api" />
      <apidata name="Launch" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="level">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency">
      <topicdata group="api" />
      <apidata name="NotifyOfCrossThreadDependency" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Debugger" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.DebuggerBrowsableAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerBrowsableAttribute.State" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerBrowsableAttribute">
      <topicdata name="DebuggerBrowsableAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerBrowsableAttribute" />
      <apidata name="DebuggerBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerBrowsableAttribute">
      <topicdata name="DebuggerBrowsableAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerBrowsableAttribute" />
      <apidata name="DebuggerBrowsableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerBrowsableAttribute.State" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerBrowsableAttribute.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerBrowsableState">
      <topicdata group="api" />
      <apidata name="DebuggerBrowsableState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.DebuggerBrowsableState.Never" />
        <element api="F:System.Diagnostics.DebuggerBrowsableState.Collapsed" />
        <element api="F:System.Diagnostics.DebuggerBrowsableState.RootHidden" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.DebuggerBrowsableState.Collapsed">
      <topicdata group="api" notopic="" />
      <apidata name="Collapsed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggerBrowsableState.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.DebuggerBrowsableState.RootHidden">
      <topicdata group="api" notopic="" />
      <apidata name="RootHidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerBrowsableState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerDisplayAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Name" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Type" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Value" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Property" />
              <field name="Field" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerDisplayAttribute">
      <topicdata name="DebuggerDisplayAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerDisplayAttribute" />
      <apidata name="DebuggerDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerDisplayAttribute">
      <topicdata name="DebuggerDisplayAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerDisplayAttribute" />
      <apidata name="DebuggerDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Name" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Type" />
        <element api="P:System.Diagnostics.DebuggerDisplayAttribute.Value" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerDisplayAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerDisplayAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerDisplayAttribute.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerDisplayAttribute.TargetTypeName">
      <topicdata group="api" />
      <apidata name="TargetTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetTypeName" />
      <setter name="set_TargetTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerDisplayAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerDisplayAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerDisplayAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerHiddenAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerHiddenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerHiddenAttribute">
      <topicdata name="DebuggerHiddenAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerHiddenAttribute" />
      <apidata name="DebuggerHiddenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerHiddenAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerHiddenAttribute">
      <topicdata name="DebuggerHiddenAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerHiddenAttribute" />
      <apidata name="DebuggerHiddenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerHiddenAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerHiddenAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerHiddenAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerNonUserCodeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <topicdata name="DebuggerNonUserCodeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
      <apidata name="DebuggerNonUserCodeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerNonUserCodeAttribute">
      <topicdata name="DebuggerNonUserCodeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
      <apidata name="DebuggerNonUserCodeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerNonUserCodeAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerNonUserCodeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerNonUserCodeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerStepperBoundaryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <topicdata name="DebuggerStepperBoundaryAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
      <apidata name="DebuggerStepperBoundaryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerStepperBoundaryAttribute">
      <topicdata name="DebuggerStepperBoundaryAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
      <apidata name="DebuggerStepperBoundaryAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerStepperBoundaryAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepperBoundaryAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerStepThroughAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerStepThroughAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerStepThroughAttribute">
      <topicdata name="DebuggerStepThroughAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerStepThroughAttribute" />
      <apidata name="DebuggerStepThroughAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepThroughAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerStepThroughAttribute">
      <topicdata name="DebuggerStepThroughAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerStepThroughAttribute" />
      <apidata name="DebuggerStepThroughAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepThroughAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerStepThroughAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerStepThroughAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerTypeProxyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor">
          <element api="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)" />
          <element api="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <topicdata name="DebuggerTypeProxyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerTypeProxyAttribute" />
      <apidata name="DebuggerTypeProxyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerTypeProxyAttribute">
      <topicdata name="DebuggerTypeProxyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerTypeProxyAttribute" />
      <apidata name="DebuggerTypeProxyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)" />
        <element api="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerTypeProxyAttribute.ProxyTypeName">
      <topicdata group="api" />
      <apidata name="ProxyTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProxyTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerTypeProxyAttribute.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerTypeProxyAttribute.TargetTypeName">
      <topicdata group="api" />
      <apidata name="TargetTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetTypeName" />
      <setter name="set_TargetTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerTypeProxyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DebuggerVisualizerAttribute">
      <topicdata group="api" />
      <apidata name="DebuggerVisualizerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor">
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)" />
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)" />
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)" />
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)" />
          <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.Description" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DebuggerVisualizerAttribute">
      <topicdata name="DebuggerVisualizerAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DebuggerVisualizerAttribute" />
      <apidata name="DebuggerVisualizerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DebuggerVisualizerAttribute">
      <topicdata name="DebuggerVisualizerAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DebuggerVisualizerAttribute" />
      <apidata name="DebuggerVisualizerAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.Description" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.Target" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName" />
        <element api="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)" />
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)" />
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)" />
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)" />
        <element api="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="visualizerObjectSourceTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="visualizerObjectSource">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizer">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizer">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="visualizerObjectSourceTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DebuggerVisualizerAttribute.#ctor(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DebuggerVisualizerAttribute.#ctor" />
      <parameters>
        <parameter name="visualizer">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="visualizerObjectSource">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerVisualizerAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerVisualizerAttribute.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerVisualizerAttribute.TargetTypeName">
      <topicdata group="api" />
      <apidata name="TargetTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetTypeName" />
      <setter name="set_TargetTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerObjectSourceTypeName">
      <topicdata group="api" />
      <apidata name="VisualizerObjectSourceTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VisualizerObjectSourceTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DebuggerVisualizerAttribute.VisualizerTypeName">
      <topicdata group="api" />
      <apidata name="VisualizerTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VisualizerTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DebuggerVisualizerAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DefaultTraceListener">
      <topicdata group="api" />
      <apidata name="DefaultTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.DefaultTraceListener.#ctor" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Fail">
          <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Close" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
        <element api="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DefaultTraceListener">
      <topicdata name="DefaultTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DefaultTraceListener" />
      <apidata name="DefaultTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <elements>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Fail">
          <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Close" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.DefaultTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.DefaultTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DefaultTraceListener">
      <topicdata name="DefaultTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DefaultTraceListener" />
      <apidata name="DefaultTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
        <element api="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DefaultTraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DefaultTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DefaultTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DefaultTraceListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled">
      <topicdata group="api" />
      <apidata name="AssertUiEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssertUiEnabled" />
      <setter name="set_AssertUiEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DefaultTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DefaultTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DefaultTraceListener.LogFileName">
      <topicdata group="api" />
      <apidata name="LogFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogFileName" />
      <setter name="set_LogFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DefaultTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DefaultTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DelimitedListTraceListener">
      <topicdata group="api" />
      <apidata name="DelimitedListTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor">
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
        </element>
        <element api="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData">
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DelimitedListTraceListener">
      <topicdata name="DelimitedListTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DelimitedListTraceListener" />
      <apidata name="DelimitedListTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData">
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.DelimitedListTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.DelimitedListTraceListener">
      <topicdata name="DelimitedListTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.DelimitedListTraceListener" />
      <apidata name="DelimitedListTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.DelimitedListTraceListener.Delimiter" />
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.DelimitedListTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.DelimitedListTraceListener.Delimiter">
      <topicdata group="api" />
      <apidata name="Delimiter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Delimiter" />
      <setter name="set_Delimiter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.DiagnosticsConfigurationHandler">
      <topicdata group="api" />
      <apidata name="DiagnosticsConfigurationHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.DiagnosticsConfigurationHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Diagnostics.DiagnosticsConfigurationHandler.#ctor" />
        <element api="M:System.Diagnostics.DiagnosticsConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.DiagnosticsConfigurationHandler">
      <topicdata name="DiagnosticsConfigurationHandler" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.DiagnosticsConfigurationHandler" />
      <apidata name="DiagnosticsConfigurationHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.DiagnosticsConfigurationHandler.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.DiagnosticsConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DiagnosticsConfigurationHandler" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DiagnosticsConfigurationHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DiagnosticsConfigurationHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.DiagnosticsConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.DiagnosticsConfigurationHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EntryWrittenEventArgs">
      <topicdata group="api" />
      <apidata name="EntryWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.EntryWrittenEventArgs.#ctor">
          <element api="M:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
          <element api="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EntryWrittenEventArgs.Entry" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EntryWrittenEventArgs">
      <topicdata name="EntryWrittenEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EntryWrittenEventArgs" />
      <apidata name="EntryWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EntryWrittenEventArgs">
      <topicdata name="EntryWrittenEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EntryWrittenEventArgs" />
      <apidata name="EntryWrittenEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.EntryWrittenEventArgs.Entry" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
        <element api="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EntryWrittenEventArgs.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EntryWrittenEventArgs.#ctor(System.Diagnostics.EventLogEntry)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EntryWrittenEventArgs.#ctor" />
      <parameters>
        <parameter name="entry">
          <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EntryWrittenEventArgs.Entry">
      <topicdata group="api" />
      <apidata name="Entry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entry" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EntryWrittenEventHandler">
      <topicdata group="api" />
      <apidata name="EntryWrittenEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventInstance">
      <topicdata group="api" />
      <apidata name="EventInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.EventInstance.#ctor">
          <element api="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
          <element api="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventInstance.CategoryId" />
        <element api="P:System.Diagnostics.EventInstance.EntryType" />
        <element api="P:System.Diagnostics.EventInstance.InstanceId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventInstance">
      <topicdata name="EventInstance" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventInstance" />
      <apidata name="EventInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventInstance">
      <topicdata name="EventInstance" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventInstance" />
      <apidata name="EventInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.EventInstance.CategoryId" />
        <element api="P:System.Diagnostics.EventInstance.EntryType" />
        <element api="P:System.Diagnostics.EventInstance.InstanceId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventInstance.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
        <element api="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventInstance.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="categoryId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventInstance.#ctor" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="categoryId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="entryType">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventInstance.CategoryId">
      <topicdata group="api" />
      <apidata name="CategoryId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryId" />
      <setter name="set_CategoryId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventInstance.EntryType">
      <topicdata group="api" />
      <apidata name="EntryType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntryType" />
      <setter name="set_EntryType" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventInstance.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceId" />
      <setter name="set_InstanceId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLog">
      <topicdata group="api" />
      <apidata name="EventLog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLog.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Diagnostics.EventLog.EntryWritten" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.Diagnostics.EventLog.#ctor">
          <element api="M:System.Diagnostics.EventLog.#ctor" />
          <element api="M:System.Diagnostics.EventLog.#ctor(System.String)" />
          <element api="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventLog.BeginInit" />
        <element api="M:System.Diagnostics.EventLog.Clear" />
        <element api="M:System.Diagnostics.EventLog.Close" />
        <element api="Overload:System.Diagnostics.EventLog.CreateEventSource">
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.Delete">
          <element api="M:System.Diagnostics.EventLog.Delete(System.String)" />
          <element api="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.DeleteEventSource">
          <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
          <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.EventLog.EndInit" />
        <element api="Overload:System.Diagnostics.EventLog.Exists">
          <element api="M:System.Diagnostics.EventLog.Exists(System.String)" />
          <element api="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.GetEventLogs">
          <element api="M:System.Diagnostics.EventLog.GetEventLogs" />
          <element api="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <element api="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
        <element api="Overload:System.Diagnostics.EventLog.SourceExists">
          <element api="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
          <element api="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.WriteEntry">
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.WriteEvent">
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventLog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
        <element api="P:System.Diagnostics.EventLog.Entries" />
        <element api="P:System.Diagnostics.EventLog.Log" />
        <element api="P:System.Diagnostics.EventLog.LogDisplayName" />
        <element api="P:System.Diagnostics.EventLog.MachineName" />
        <element api="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <element api="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
        <element api="P:System.Diagnostics.EventLog.OverflowAction" />
        <element api="P:System.Diagnostics.EventLog.Source" />
        <element api="P:System.Diagnostics.EventLog.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>EntryWritten</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLog">
      <topicdata name="EventLog" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLog" />
      <apidata name="EventLog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLog.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Diagnostics.EventLog.BeginInit" />
        <element api="M:System.Diagnostics.EventLog.Clear" />
        <element api="M:System.Diagnostics.EventLog.Close" />
        <element api="Overload:System.Diagnostics.EventLog.CreateEventSource">
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.Delete">
          <element api="M:System.Diagnostics.EventLog.Delete(System.String)" />
          <element api="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.DeleteEventSource">
          <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
          <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.EventLog.EndInit" />
        <element api="Overload:System.Diagnostics.EventLog.Exists">
          <element api="M:System.Diagnostics.EventLog.Exists(System.String)" />
          <element api="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.GetEventLogs">
          <element api="M:System.Diagnostics.EventLog.GetEventLogs" />
          <element api="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)" />
        <element api="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)" />
        <element api="Overload:System.Diagnostics.EventLog.SourceExists">
          <element api="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
          <element api="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.WriteEntry">
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
          <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLog.WriteEvent">
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
          <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventLog.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLog">
      <topicdata name="EventLog" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLog" />
      <apidata name="EventLog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLog.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.EventLog.EnableRaisingEvents" />
        <element api="P:System.Diagnostics.EventLog.Entries" />
        <element api="P:System.Diagnostics.EventLog.Log" />
        <element api="P:System.Diagnostics.EventLog.LogDisplayName" />
        <element api="P:System.Diagnostics.EventLog.MachineName" />
        <element api="P:System.Diagnostics.EventLog.MaximumKilobytes" />
        <element api="P:System.Diagnostics.EventLog.MinimumRetentionDays" />
        <element api="P:System.Diagnostics.EventLog.OverflowAction" />
        <element api="P:System.Diagnostics.EventLog.Source" />
        <element api="P:System.Diagnostics.EventLog.SynchronizingObject" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.EventLog">
      <topicdata name="EventLog" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.EventLog" />
      <apidata name="EventLog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLog.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Diagnostics.EventLog.EntryWritten" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.#ctor" />
        <element api="M:System.Diagnostics.EventLog.#ctor(System.String)" />
        <element api="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.CreateEventSource">
      <topicdata name="CreateEventSource" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateEventSource" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)" />
        <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.Delete(System.String)" />
        <element api="M:System.Diagnostics.EventLog.Delete(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.DeleteEventSource">
      <topicdata name="DeleteEventSource" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DeleteEventSource" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)" />
        <element api="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.Diagnostics.EventLog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.Exists">
      <topicdata name="Exists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Exists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.Exists(System.String)" />
        <element api="M:System.Diagnostics.EventLog.Exists(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.GetEventLogs">
      <topicdata name="GetEventLogs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEventLogs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.GetEventLogs" />
        <element api="M:System.Diagnostics.EventLog.GetEventLogs(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.SourceExists">
      <topicdata name="SourceExists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SourceExists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.SourceExists(System.String)" />
        <element api="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.WriteEntry">
      <topicdata name="WriteEntry" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)" />
        <element api="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLog.WriteEvent">
      <topicdata name="WriteEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])" />
        <element api="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
        <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])" />
        <element api="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLog.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLog.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLog.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLog.#ctor" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
      <topicdata group="api" />
      <apidata name="CreateEventSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.CreateEventSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceData">
          <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateEventSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.CreateEventSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.CreateEventSource(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateEventSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.CreateEventSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated.  Please use System.Diagnostics.EventLog.CreateEventSource(EventSourceCreationData sourceData) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.Delete(System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.Delete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteEventSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.DeleteEventSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteEventSource" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.DeleteEventSource" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.EventLog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLog.EnableRaisingEvents">
      <topicdata group="api" />
      <apidata name="EnableRaisingEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableRaisingEvents" />
      <setter name="set_EnableRaisingEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLog.Entries">
      <topicdata group="api" />
      <apidata name="Entries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entries" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Diagnostics.EventLog.EntryWritten">
      <topicdata group="api" />
      <apidata name="EntryWritten" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EntryWritten" />
      <remover name="remove_EntryWritten" />
      <eventhandler>
        <type api="T:System.Diagnostics.EntryWrittenEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Diagnostics.EntryWrittenEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.GetEventLogs">
      <topicdata group="api" />
      <apidata name="GetEventLogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.GetEventLogs" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.EventLog" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
      <topicdata group="api" />
      <apidata name="GetEventLogs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.GetEventLogs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.EventLog" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLog.Log">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Log" />
      <setter name="set_Log" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.LogConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLog.LogDisplayName">
      <topicdata group="api" />
      <apidata name="LogDisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogDisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LogNameFromSourceName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLog.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLog.MaximumKilobytes">
      <topicdata group="api" />
      <apidata name="MaximumKilobytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumKilobytes" />
      <setter name="set_MaximumKilobytes" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLog.MinimumRetentionDays">
      <topicdata group="api" />
      <apidata name="MinimumRetentionDays" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinimumRetentionDays" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.ModifyOverflowPolicy(System.Diagnostics.OverflowAction,System.Int32)">
      <topicdata group="api" />
      <apidata name="ModifyOverflowPolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Diagnostics.OverflowAction" ref="false" />
        </parameter>
        <parameter name="retentionDays">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLog.OverflowAction">
      <topicdata group="api" />
      <apidata name="OverflowAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OverflowAction" />
      <returns>
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
      <topicdata group="api" />
      <apidata name="RegisterDisplayName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="resourceFile">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="resourceId">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLog.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.SourceExists(System.String)">
      <topicdata group="api" />
      <apidata name="SourceExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.SourceExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SourceExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.SourceExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLog.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizingObject">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Synchronization">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SynchronizingObject" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="category">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="category">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="rawData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16)">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="category">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEntry(System.String,System.String,System.Diagnostics.EventLogEntryType,System.Int32,System.Int16,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteEntry" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEntry" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
        </parameter>
        <parameter name="eventID">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="category">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="rawData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Diagnostics.EventInstance" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLog.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Diagnostics.EventInstance" ref="true" />
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Diagnostics.EventInstance" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
      <topicdata group="api" />
      <apidata name="WriteEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.EventLog.WriteEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Diagnostics.EventInstance" ref="true" />
        </parameter>
        <parameter name="values" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogEntry">
      <topicdata group="api" />
      <apidata name="EventLogEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.Diagnostics.EventLogEntry.Equals">
          <element api="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.EventLogEntry.Category" />
        <element api="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <element api="P:System.Diagnostics.EventLogEntry.Data" />
        <element api="P:System.Diagnostics.EventLogEntry.EntryType" />
        <element api="P:System.Diagnostics.EventLogEntry.EventID" />
        <element api="P:System.Diagnostics.EventLogEntry.Index" />
        <element api="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <element api="P:System.Diagnostics.EventLogEntry.MachineName" />
        <element api="P:System.Diagnostics.EventLogEntry.Message" />
        <element api="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
        <element api="P:System.Diagnostics.EventLogEntry.Source" />
        <element api="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
        <element api="P:System.Diagnostics.EventLogEntry.TimeWritten" />
        <element api="P:System.Diagnostics.EventLogEntry.UserName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogEntry">
      <topicdata name="EventLogEntry" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogEntry" />
      <apidata name="EventLogEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.Diagnostics.EventLogEntry.Equals">
          <element api="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogEntry">
      <topicdata name="EventLogEntry" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogEntry" />
      <apidata name="EventLogEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.EventLogEntry.Category" />
        <element api="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <element api="P:System.Diagnostics.EventLogEntry.Data" />
        <element api="P:System.Diagnostics.EventLogEntry.EntryType" />
        <element api="P:System.Diagnostics.EventLogEntry.EventID" />
        <element api="P:System.Diagnostics.EventLogEntry.Index" />
        <element api="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <element api="P:System.Diagnostics.EventLogEntry.MachineName" />
        <element api="P:System.Diagnostics.EventLogEntry.Message" />
        <element api="P:System.Diagnostics.EventLogEntry.ReplacementStrings" />
        <element api="P:System.Diagnostics.EventLogEntry.Source" />
        <element api="P:System.Diagnostics.EventLogEntry.TimeGenerated" />
        <element api="P:System.Diagnostics.EventLogEntry.TimeWritten" />
        <element api="P:System.Diagnostics.EventLogEntry.UserName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.EventLogEntry">
      <topicdata name="EventLogEntry" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.EventLogEntry" />
      <apidata name="EventLogEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogEntry.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.Category">
      <topicdata group="api" />
      <apidata name="Category" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Category" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.CategoryNumber">
      <topicdata group="api" />
      <apidata name="CategoryNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CategoryNumber" />
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.EntryType">
      <topicdata group="api" />
      <apidata name="EntryType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryType" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogEntry.Equals(System.Diagnostics.EventLogEntry)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogEntry.Equals" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="otherEntry">
          <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.EventID">
      <topicdata group="api" />
      <apidata name="EventID" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EventID" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.EventLogEntry.InstanceId instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Design.BinaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
      <topicdata group="api" />
      <apidata name="ReplacementStrings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplacementStrings" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.TimeGenerated">
      <topicdata group="api" />
      <apidata name="TimeGenerated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeGenerated" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.TimeWritten">
      <topicdata group="api" />
      <apidata name="TimeWritten" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeWritten" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntry.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogEntryCollection">
      <topicdata group="api" />
      <apidata name="EventLogEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator" />
        <element api="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.Count" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogEntryCollection">
      <topicdata name="EventLogEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogEntryCollection" />
      <apidata name="EventLogEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator" />
        <element api="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogEntryCollection">
      <topicdata name="EventLogEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogEntryCollection" />
      <apidata name="EventLogEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.EventLogEntryCollection.Count" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entries">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntryCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.EventLogEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogEntryType">
      <topicdata group="api" />
      <apidata name="EventLogEntryType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.EventLogEntryType.Error" />
        <element api="F:System.Diagnostics.EventLogEntryType.Warning" />
        <element api="F:System.Diagnostics.EventLogEntryType.Information" />
        <element api="F:System.Diagnostics.EventLogEntryType.SuccessAudit" />
        <element api="F:System.Diagnostics.EventLogEntryType.FailureAudit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogEntryType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogEntryType.FailureAudit">
      <topicdata group="api" notopic="" />
      <apidata name="FailureAudit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogEntryType.Information">
      <topicdata group="api" notopic="" />
      <apidata name="Information" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogEntryType.SuccessAudit">
      <topicdata group="api" notopic="" />
      <apidata name="SuccessAudit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogEntryType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogEntryType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogInstaller">
      <topicdata group="api" />
      <apidata name="EventLogInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.Diagnostics.EventLogInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.#ctor" />
        <element api="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventLogInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <element api="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.Log" />
        <element api="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.Source" />
        <element api="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogInstaller">
      <topicdata name="EventLogInstaller" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogInstaller" />
      <apidata name="EventLogInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <elements>
        <element api="Overload:System.Diagnostics.EventLogInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventLogInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogInstaller">
      <topicdata name="EventLogInstaller" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogInstaller" />
      <apidata name="EventLogInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <element api="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.Log" />
        <element api="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
        <element api="P:System.Diagnostics.EventLogInstaller.Source" />
        <element api="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.EventLogInstaller">
      <topicdata name="EventLogInstaller" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.EventLogInstaller" />
      <apidata name="EventLogInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.CategoryCount">
      <topicdata group="api" />
      <apidata name="CategoryCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryCount" />
      <setter name="set_CategoryCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile">
      <topicdata group="api" />
      <apidata name="CategoryResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryResourceFile" />
      <setter name="set_CategoryResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="CopyFromComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Install" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stateSaver">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <topicdata group="api" />
      <apidata name="IsEquivalentInstaller" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="otherInstaller">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.Log">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Log" />
      <setter name="set_Log" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.MessageResourceFile">
      <topicdata group="api" />
      <apidata name="MessageResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageResourceFile" />
      <setter name="set_MessageResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile">
      <topicdata group="api" />
      <apidata name="ParameterResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterResourceFile" />
      <setter name="set_ParameterResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Uninstall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogInstaller.UninstallAction">
      <topicdata group="api" />
      <apidata name="UninstallAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UninstallAction" />
      <setter name="set_UninstallAction" />
      <returns>
        <type api="T:System.Configuration.Install.UninstallAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Configuration.Install.UninstallAction" ref="false" />
            <enumValue>
              <field name="Remove" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.EventLogPermission">
      <topicdata group="api" />
      <apidata name="EventLogPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.EventLogPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.EventLogPermission.#ctor">
          <element api="M:System.Diagnostics.EventLogPermission.#ctor" />
          <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])" />
          <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
        <element api="P:System.Diagnostics.EventLogPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogPermission">
      <topicdata name="EventLogPermission" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogPermission" />
      <apidata name="EventLogPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.EventLogPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogPermission">
      <topicdata name="EventLogPermission" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogPermission" />
      <apidata name="EventLogPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.EventLogPermission.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.EventLogPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventLogPermission.#ctor" />
        <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])" />
        <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogPermission.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionEntries" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogPermissionAccess">
      <topicdata group="api" />
      <apidata name="EventLogPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.EventLogPermissionAccess.None" />
        <element api="F:System.Diagnostics.EventLogPermissionAccess.Write" />
        <element api="F:System.Diagnostics.EventLogPermissionAccess.Administer" />
        <element api="F:System.Diagnostics.EventLogPermissionAccess.Browse" />
        <element api="F:System.Diagnostics.EventLogPermissionAccess.Instrument" />
        <element api="F:System.Diagnostics.EventLogPermissionAccess.Audit" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <topicdata group="api" notopic="" />
      <apidata name="Administer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>48</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <topicdata group="api" notopic="" />
      <apidata name="Audit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This member has been deprecated.  Please use System.Diagnostics.EventLogPermissionAccess.Administer instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This member has been deprecated.  Please use System.Diagnostics.EventLogPermissionAccess.Administer instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <topicdata group="api" notopic="" />
      <apidata name="Instrument" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This member has been deprecated.  Please use System.Diagnostics.EventLogPermissionAccess.Write instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogPermissionAttribute">
      <topicdata group="api" />
      <apidata name="EventLogPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" />
        <element api="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogPermissionAttribute">
      <topicdata name="EventLogPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogPermissionAttribute" />
      <apidata name="EventLogPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogPermissionAttribute">
      <topicdata name="EventLogPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogPermissionAttribute" />
      <apidata name="EventLogPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" />
        <element api="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PermissionAccess" />
      <setter name="set_PermissionAccess" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogPermissionEntry">
      <topicdata group="api" />
      <apidata name="EventLogPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventLogPermissionEntry.MachineName" />
        <element api="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogPermissionEntry">
      <topicdata name="EventLogPermissionEntry" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogPermissionEntry" />
      <apidata name="EventLogPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogPermissionEntry">
      <topicdata name="EventLogPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogPermissionEntry" />
      <apidata name="EventLogPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Diagnostics.EventLogPermissionEntry.MachineName" />
        <element api="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntry" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionAccess" />
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <topicdata group="api" />
      <apidata name="EventLogPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange">
          <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])" />
          <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)" />
        </element>
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogPermissionEntryCollection">
      <topicdata name="EventLogPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogPermissionEntryCollection" />
      <apidata name="EventLogPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange">
          <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])" />
          <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)" />
        </element>
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogPermissionEntryCollection">
      <topicdata name="EventLogPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogPermissionEntryCollection" />
      <apidata name="EventLogPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])" />
        <element api="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.EventLogPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventLogTraceListener">
      <topicdata group="api" />
      <apidata name="EventLogTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogTraceListener.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.#ctor">
          <element api="M:System.Diagnostics.EventLogTraceListener.#ctor" />
          <element api="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventLogTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventLogTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="Overload:System.Diagnostics.EventLogTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventLogTraceListener.EventLog" />
        <element api="P:System.Diagnostics.EventLogTraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.EventLogTraceListener">
      <topicdata name="EventLogTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventLogTraceListener" />
      <apidata name="EventLogTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogTraceListener.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.EventLogTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventLogTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventLogTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="Overload:System.Diagnostics.EventLogTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventLogTraceListener">
      <topicdata name="EventLogTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventLogTraceListener" />
      <apidata name="EventLogTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.EventLogTraceListener.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.EventLogTraceListener.EventLog" />
        <element api="P:System.Diagnostics.EventLogTraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventLogTraceListener.#ctor" />
        <element api="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventLogTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogTraceListener.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogTraceListener.#ctor" />
      <parameters>
        <parameter name="eventLog">
          <type api="T:System.Diagnostics.EventLog" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventLogTraceListener.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Close">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogTraceListener.EventLog">
      <topicdata group="api" />
      <apidata name="EventLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EventLog" />
      <setter name="set_EventLog" />
      <returns>
        <type api="T:System.Diagnostics.EventLog" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventLogTraceListener.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.TraceListener.Name">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="severity">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="severity">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="severity">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="severity">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventLogTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata group="api" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata name="EventSchemaTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Close" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Flush" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.EventSchemaTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventSchemaTraceListener">
      <topicdata name="EventSchemaTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventSchemaTraceListener" />
      <apidata name="EventSchemaTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.EventSchemaTraceListener.BufferSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption" />
        <element api="P:System.Diagnostics.EventSchemaTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
        <parameter name="maximumFileSize">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.#ctor(System.String,System.String,System.Int32,System.Diagnostics.TraceLogRetentionOption,System.Int64,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.EventSchemaTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="logRetentionOption">
          <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
        </parameter>
        <parameter name="maximumFileSize">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="maximumNumberOfFiles">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.BufferSize">
      <topicdata group="api" />
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Close">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Flush">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.IsThreadSafe">
      <topicdata group="api" />
      <apidata name="IsThreadSafe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Diagnostics.TraceListener.IsThreadSafe">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsThreadSafe" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize">
      <topicdata group="api" />
      <apidata name="MaximumFileSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumFileSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles">
      <topicdata group="api" />
      <apidata name="MaximumNumberOfFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumNumberOfFiles" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption">
      <topicdata group="api" />
      <apidata name="TraceLogRetentionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceLogRetentionOption" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSchemaTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.EventSchemaTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSchemaTraceListener.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Writer">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Writer" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventSourceCreationData">
      <topicdata group="api" />
      <apidata name="EventSourceCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <element api="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.LogName" />
        <element api="P:System.Diagnostics.EventSourceCreationData.MachineName" />
        <element api="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.Source" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventSourceCreationData">
      <topicdata name="EventSourceCreationData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventSourceCreationData" />
      <apidata name="EventSourceCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventSourceCreationData">
      <topicdata name="EventSourceCreationData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventSourceCreationData" />
      <apidata name="EventSourceCreationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <element api="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.LogName" />
        <element api="P:System.Diagnostics.EventSourceCreationData.MachineName" />
        <element api="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
        <element api="P:System.Diagnostics.EventSourceCreationData.Source" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventSourceCreationData.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.CategoryCount">
      <topicdata group="api" />
      <apidata name="CategoryCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryCount" />
      <setter name="set_CategoryCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile">
      <topicdata group="api" />
      <apidata name="CategoryResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryResourceFile" />
      <setter name="set_CategoryResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.LogName">
      <topicdata group="api" />
      <apidata name="LogName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogName" />
      <setter name="set_LogName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile">
      <topicdata group="api" />
      <apidata name="MessageResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageResourceFile" />
      <setter name="set_MessageResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile">
      <topicdata group="api" />
      <apidata name="ParameterResourceFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterResourceFile" />
      <setter name="set_ParameterResourceFile" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventSourceCreationData.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventSourceCreationData" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.EventTypeFilter">
      <topicdata group="api" />
      <apidata name="EventTypeFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)" />
        <element api="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.EventTypeFilter.EventType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.EventTypeFilter">
      <topicdata name="EventTypeFilter" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.EventTypeFilter" />
      <apidata name="EventTypeFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventTypeFilter" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.EventTypeFilter">
      <topicdata name="EventTypeFilter" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.EventTypeFilter" />
      <apidata name="EventTypeFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.EventTypeFilter.EventType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventTypeFilter" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="level">
          <type api="T:System.Diagnostics.SourceLevels" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventTypeFilter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.EventTypeFilter.EventType">
      <topicdata group="api" />
      <apidata name="EventType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EventType" />
      <setter name="set_EventType" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventTypeFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="ShouldTrace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
          <type api="T:System.Diagnostics.TraceFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="cache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="formatOrMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="data1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.EventTypeFilter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.FileVersionInfo">
      <topicdata group="api" />
      <apidata name="FileVersionInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
        <element api="M:System.Diagnostics.FileVersionInfo.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Diagnostics.FileVersionInfo.Comments" />
        <element api="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileName" />
        <element api="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <element api="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.Language" />
        <element api="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <element api="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <element api="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <element api="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <element api="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.FileVersionInfo">
      <topicdata name="FileVersionInfo" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.FileVersionInfo" />
      <apidata name="FileVersionInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)" />
        <element api="M:System.Diagnostics.FileVersionInfo.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.FileVersionInfo">
      <topicdata name="FileVersionInfo" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.FileVersionInfo" />
      <apidata name="FileVersionInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.FileVersionInfo.Comments" />
        <element api="P:System.Diagnostics.FileVersionInfo.CompanyName" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileBuildPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileDescription" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileMajorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileMinorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileName" />
        <element api="P:System.Diagnostics.FileVersionInfo.FilePrivatePart" />
        <element api="P:System.Diagnostics.FileVersionInfo.FileVersion" />
        <element api="P:System.Diagnostics.FileVersionInfo.InternalName" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsDebug" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPatched" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPreRelease" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.Language" />
        <element api="P:System.Diagnostics.FileVersionInfo.LegalCopyright" />
        <element api="P:System.Diagnostics.FileVersionInfo.LegalTrademarks" />
        <element api="P:System.Diagnostics.FileVersionInfo.OriginalFilename" />
        <element api="P:System.Diagnostics.FileVersionInfo.PrivateBuild" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductBuildPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductMajorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductMinorPart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductName" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart" />
        <element api="P:System.Diagnostics.FileVersionInfo.ProductVersion" />
        <element api="P:System.Diagnostics.FileVersionInfo.SpecialBuild" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.Comments">
      <topicdata group="api" />
      <apidata name="Comments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Comments" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.CompanyName">
      <topicdata group="api" />
      <apidata name="CompanyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompanyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileBuildPart">
      <topicdata group="api" />
      <apidata name="FileBuildPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileBuildPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileDescription">
      <topicdata group="api" />
      <apidata name="FileDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileMajorPart">
      <topicdata group="api" />
      <apidata name="FileMajorPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileMajorPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileMinorPart">
      <topicdata group="api" />
      <apidata name="FileMinorPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileMinorPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FilePrivatePart">
      <topicdata group="api" />
      <apidata name="FilePrivatePart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilePrivatePart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.FileVersion">
      <topicdata group="api" />
      <apidata name="FileVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)">
      <topicdata group="api" />
      <apidata name="GetVersionInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.InternalName">
      <topicdata group="api" />
      <apidata name="InternalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.IsDebug">
      <topicdata group="api" />
      <apidata name="IsDebug" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDebug" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.IsPatched">
      <topicdata group="api" />
      <apidata name="IsPatched" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPatched" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.IsPreRelease">
      <topicdata group="api" />
      <apidata name="IsPreRelease" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPreRelease" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.IsPrivateBuild">
      <topicdata group="api" />
      <apidata name="IsPrivateBuild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPrivateBuild" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.IsSpecialBuild">
      <topicdata group="api" />
      <apidata name="IsSpecialBuild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSpecialBuild" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.Language">
      <topicdata group="api" />
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.LegalCopyright">
      <topicdata group="api" />
      <apidata name="LegalCopyright" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LegalCopyright" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.LegalTrademarks">
      <topicdata group="api" />
      <apidata name="LegalTrademarks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LegalTrademarks" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.OriginalFilename">
      <topicdata group="api" />
      <apidata name="OriginalFilename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalFilename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.PrivateBuild">
      <topicdata group="api" />
      <apidata name="PrivateBuild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivateBuild" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductBuildPart">
      <topicdata group="api" />
      <apidata name="ProductBuildPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductBuildPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductMajorPart">
      <topicdata group="api" />
      <apidata name="ProductMajorPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductMajorPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductMinorPart">
      <topicdata group="api" />
      <apidata name="ProductMinorPart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductMinorPart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductName">
      <topicdata group="api" />
      <apidata name="ProductName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductPrivatePart">
      <topicdata group="api" />
      <apidata name="ProductPrivatePart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductPrivatePart" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.ProductVersion">
      <topicdata group="api" />
      <apidata name="ProductVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProductVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.FileVersionInfo.SpecialBuild">
      <topicdata group="api" />
      <apidata name="SpecialBuild" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpecialBuild" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.FileVersionInfo.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ICollectData">
      <topicdata group="api" />
      <apidata name="ICollectData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <implementors>
        <type api="T:System.Diagnostics.PerformanceCounterManager" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Diagnostics.ICollectData.CloseData" />
        <element api="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>73386977-D6FD-11D2-BED5-00C04F79E3AE</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.InterfaceTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ComInterfaceType" ref="false" />
            <enumValue>
              <field name="InterfaceIsIUnknown" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.ICollectData">
      <topicdata name="ICollectData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ICollectData" />
      <apidata name="ICollectData" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" comimport="true" />
      <elements>
        <element api="M:System.Diagnostics.ICollectData.CloseData" />
        <element api="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ICollectData" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ICollectData.CloseData">
      <topicdata group="api" />
      <apidata name="CloseData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ICollectData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <topicdata group="api" />
      <apidata name="CollectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id" in="true">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="valueName" in="true">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="data" in="true">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="totalBytes" in="true">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="res" out="true">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ICollectData" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.InstanceData">
      <topicdata group="api" />
      <apidata name="InstanceData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.InstanceData.InstanceName" />
        <element api="P:System.Diagnostics.InstanceData.RawValue" />
        <element api="P:System.Diagnostics.InstanceData.Sample" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.InstanceData">
      <topicdata name="InstanceData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.InstanceData" />
      <apidata name="InstanceData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.InstanceData">
      <topicdata name="InstanceData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.InstanceData" />
      <apidata name="InstanceData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.InstanceData.InstanceName" />
        <element api="P:System.Diagnostics.InstanceData.RawValue" />
        <element api="P:System.Diagnostics.InstanceData.Sample" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.InstanceData.#ctor(System.String,System.Diagnostics.CounterSample)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sample">
          <type api="T:System.Diagnostics.CounterSample" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceData.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceData.RawValue">
      <topicdata group="api" />
      <apidata name="RawValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RawValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceData.Sample">
      <topicdata group="api" />
      <apidata name="Sample" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sample" />
      <returns>
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceData" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.InstanceDataCollection">
      <topicdata group="api" />
      <apidata name="InstanceDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)" />
        <element api="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
        <element api="Overload:System.Diagnostics.InstanceDataCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.Diagnostics.InstanceDataCollection.CounterName" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Keys" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.InstanceDataCollection">
      <topicdata name="InstanceDataCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.InstanceDataCollection" />
      <apidata name="InstanceDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
        <element api="Overload:System.Diagnostics.InstanceDataCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.InstanceDataCollection">
      <topicdata name="InstanceDataCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.InstanceDataCollection" />
      <apidata name="InstanceDataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.Diagnostics.InstanceDataCollection.CounterName" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Keys" />
        <element api="P:System.Diagnostics.InstanceDataCollection.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.InstanceDataCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This constructor has been deprecated.  Please use System.Diagnostics.InstanceDataCollectionCollection.get_Item to get an instance of this collection instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.InstanceDataCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instances">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.InstanceData" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollection.CounterName">
      <topicdata group="api" />
      <apidata name="CounterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.InstanceData" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollection.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.InstanceDataCollectionCollection">
      <topicdata group="api" />
      <apidata name="InstanceDataCollectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor" />
        <element api="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)" />
        <element api="Overload:System.Diagnostics.InstanceDataCollectionCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Keys" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.InstanceDataCollectionCollection">
      <topicdata name="InstanceDataCollectionCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.InstanceDataCollectionCollection" />
      <apidata name="InstanceDataCollectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)" />
        <element api="Overload:System.Diagnostics.InstanceDataCollectionCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.InstanceDataCollectionCollection">
      <topicdata name="InstanceDataCollectionCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.InstanceDataCollectionCollection" />
      <apidata name="InstanceDataCollectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Keys" />
        <element api="P:System.Diagnostics.InstanceDataCollectionCollection.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.InstanceDataCollectionCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollectionCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This constructor has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.ReadCategory() to get an instance of this collection instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.InstanceDataCollectionCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counters">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.InstanceDataCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="MonitoringDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.Diagnostics.MonitoringDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.MonitoringDescriptionAttribute">
      <topicdata name="MonitoringDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.MonitoringDescriptionAttribute" />
      <apidata name="MonitoringDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.MonitoringDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.MonitoringDescriptionAttribute">
      <topicdata name="MonitoringDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.MonitoringDescriptionAttribute" />
      <apidata name="MonitoringDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.Diagnostics.MonitoringDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.MonitoringDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.MonitoringDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.MonitoringDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.OverflowAction">
      <topicdata group="api" />
      <apidata name="OverflowAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.OverflowAction.DoNotOverwrite" />
        <element api="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded" />
        <element api="F:System.Diagnostics.OverflowAction.OverwriteOlder" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.OverflowAction.DoNotOverwrite">
      <topicdata group="api" notopic="" />
      <apidata name="DoNotOverwrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.OverflowAction.OverwriteAsNeeded">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteAsNeeded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.OverflowAction.OverwriteOlder">
      <topicdata group="api" notopic="" />
      <apidata name="OverwriteOlder" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.OverflowAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounter">
      <topicdata group="api" />
      <apidata name="PerformanceCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.Diagnostics.PerformanceCounter.#ctor">
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor" />
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
          <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounter.BeginInit" />
        <element api="M:System.Diagnostics.PerformanceCounter.Close" />
        <element api="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
        <element api="M:System.Diagnostics.PerformanceCounter.Decrement" />
        <element api="M:System.Diagnostics.PerformanceCounter.EndInit" />
        <element api="M:System.Diagnostics.PerformanceCounter.Increment" />
        <element api="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
        <element api="M:System.Diagnostics.PerformanceCounter.NextSample" />
        <element api="M:System.Diagnostics.PerformanceCounter.NextValue" />
        <element api="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.PerformanceCounter.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterName" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterType" />
        <element api="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
        <element api="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <element api="P:System.Diagnostics.PerformanceCounter.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounter.RawValue" />
        <element api="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounter">
      <topicdata name="PerformanceCounter" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounter" />
      <apidata name="PerformanceCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Diagnostics.PerformanceCounter.BeginInit" />
        <element api="M:System.Diagnostics.PerformanceCounter.Close" />
        <element api="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
        <element api="M:System.Diagnostics.PerformanceCounter.Decrement" />
        <element api="M:System.Diagnostics.PerformanceCounter.EndInit" />
        <element api="M:System.Diagnostics.PerformanceCounter.Increment" />
        <element api="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
        <element api="M:System.Diagnostics.PerformanceCounter.NextSample" />
        <element api="M:System.Diagnostics.PerformanceCounter.NextValue" />
        <element api="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounter">
      <topicdata name="PerformanceCounter" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounter" />
      <apidata name="PerformanceCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.PerformanceCounter.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterName" />
        <element api="P:System.Diagnostics.PerformanceCounter.CounterType" />
        <element api="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
        <element api="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <element api="P:System.Diagnostics.PerformanceCounter.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounter.RawValue" />
        <element api="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.PerformanceCounter">
      <topicdata name="PerformanceCounter" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.PerformanceCounter" />
      <apidata name="PerformanceCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.PerformanceCounter">
      <topicdata name="PerformanceCounter" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.PerformanceCounter" />
      <apidata name="PerformanceCounter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor" />
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="readOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="readOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounter.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.CategoryName">
      <topicdata group="api" />
      <apidata name="CategoryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryName" />
      <setter name="set_CategoryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.CloseSharedResources">
      <topicdata group="api" />
      <apidata name="CloseSharedResources" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.CounterHelp">
      <topicdata group="api" />
      <apidata name="CounterHelp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterHelp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.CounterName">
      <topicdata group="api" />
      <apidata name="CounterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CounterName" />
      <setter name="set_CounterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.CounterType">
      <topicdata group="api" />
      <apidata name="CounterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CounterType" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.Decrement">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize">
      <topicdata group="api" />
      <apidata name="DefaultFileMappingSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.Increment">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)">
      <topicdata group="api" />
      <apidata name="IncrementBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.InstanceLifetime">
      <topicdata group="api" />
      <apidata name="InstanceLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceLifetime" />
      <setter name="set_InstanceLifetime" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
            <enumValue>
              <field name="Global" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.InstanceName">
      <topicdata group="api" />
      <apidata name="InstanceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceName" />
      <setter name="set_InstanceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.NextSample">
      <topicdata group="api" />
      <apidata name="NextSample" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.CounterSample" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.NextValue">
      <topicdata group="api" />
      <apidata name="NextValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.RawValue">
      <topicdata group="api" />
      <apidata name="RawValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RawValue" />
      <setter name="set_RawValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounter.ReadOnly">
      <topicdata group="api" />
      <apidata name="ReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadOnly" />
      <setter name="set_ReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounter.RemoveInstance">
      <topicdata group="api" />
      <apidata name="RemoveInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterCategory">
      <topicdata group="api" />
      <apidata name="PerformanceCounterCategory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.#ctor">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.Create">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.Exists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterCategory">
      <topicdata name="PerformanceCounterCategory" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterCategory" />
      <apidata name="PerformanceCounterCategory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <elements>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.Create">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.Exists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
        <element api="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists">
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
          <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterCategory">
      <topicdata name="PerformanceCounterCategory" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterCategory" />
      <apidata name="PerformanceCounterCategory" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
        <element api="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists">
      <topicdata name="CounterExists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CounterExists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.Exists">
      <topicdata name="Exists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Exists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <topicdata name="GetCategories" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCategories" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <topicdata name="GetCounters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCounters" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists">
      <topicdata name="InstanceExists" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InstanceExists" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
        <element api="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
      <topicdata group="api" />
      <apidata name="CategoryHelp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CategoryHelp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterCategory.CategoryName">
      <topicdata group="api" />
      <apidata name="CategoryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryName" />
      <setter name="set_CategoryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterCategory.CategoryType">
      <topicdata group="api" />
      <apidata name="CategoryType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CategoryType" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
      <topicdata group="api" />
      <apidata name="CounterExists" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CounterExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CounterExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterData">
          <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryType">
          <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
        </parameter>
        <parameter name="counterData">
          <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryType">
          <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counterHelp">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.Exists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <topicdata group="api" />
      <apidata name="GetCategories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
      <topicdata group="api" />
      <apidata name="GetCategories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <topicdata group="api" />
      <apidata name="GetCounters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
      <topicdata group="api" />
      <apidata name="GetCounters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.PerformanceCounter" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
      <topicdata group="api" />
      <apidata name="GetInstanceNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
      <topicdata group="api" />
      <apidata name="InstanceExists" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="InstanceExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="InstanceExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterCategory.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
      <topicdata group="api" />
      <apidata name="ReadCategory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.InstanceDataCollectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterCategoryType">
      <topicdata group="api" />
      <apidata name="PerformanceCounterCategoryType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />
        <element api="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" />
        <element api="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance">
      <topicdata group="api" notopic="" />
      <apidata name="MultiInstance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance">
      <topicdata group="api" notopic="" />
      <apidata name="SingleInstance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterInstaller">
      <topicdata group="api" />
      <apidata name="PerformanceCounterInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.Diagnostics.PerformanceCounterInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.#ctor" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.PerformanceCounterInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryHelp" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryType" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.Counters" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.UninstallAction" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterInstaller">
      <topicdata name="PerformanceCounterInstaller" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterInstaller" />
      <apidata name="PerformanceCounterInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterInstaller.#ctor" />
      <elements>
        <element api="Overload:System.Diagnostics.PerformanceCounterInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Diagnostics.PerformanceCounterInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.PerformanceCounterInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterInstaller">
      <topicdata name="PerformanceCounterInstaller" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterInstaller" />
      <apidata name="PerformanceCounterInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryHelp" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.CategoryType" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.Counters" />
        <element api="P:System.Diagnostics.PerformanceCounterInstaller.UninstallAction" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.PerformanceCounterInstaller">
      <topicdata name="PerformanceCounterInstaller" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.PerformanceCounterInstaller" />
      <apidata name="PerformanceCounterInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterInstaller.CategoryHelp">
      <topicdata group="api" />
      <apidata name="CategoryHelp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryHelp" />
      <setter name="set_CategoryHelp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterInstaller.CategoryName">
      <topicdata group="api" />
      <apidata name="CategoryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryName" />
      <setter name="set_CategoryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterInstaller.CategoryType">
      <topicdata group="api" />
      <apidata name="CategoryType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryType" />
      <setter name="set_CategoryType" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.PerformanceCounterCategoryType" ref="false" />
            <enumValue>
              <field name="Unknown" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name="CopyFromComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
          <type api="T:System.Configuration.Install.ComponentInstaller" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="component">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterInstaller.Counters">
      <topicdata group="api" />
      <apidata name="Counters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Counters" />
      <returns>
        <type api="T:System.Diagnostics.CounterCreationDataCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterInstaller.Install(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Install" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stateSaver">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterInstaller.Rollback(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterInstaller.Uninstall(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Uninstall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterInstaller.UninstallAction">
      <topicdata group="api" />
      <apidata name="UninstallAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UninstallAction" />
      <setter name="set_UninstallAction" />
      <returns>
        <type api="T:System.Configuration.Install.UninstallAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration.Install" module="System.Configuration.Install" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstaller" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Configuration.Install.UninstallAction" ref="false" />
            <enumValue>
              <field name="Remove" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterInstanceLifetime">
      <topicdata group="api" />
      <apidata name="PerformanceCounterInstanceLifetime" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />
        <element api="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global">
      <topicdata group="api" notopic="" />
      <apidata name="Global" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process">
      <topicdata group="api" notopic="" />
      <apidata name="Process" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterInstanceLifetime" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterManager">
      <topicdata group="api" />
      <apidata name="PerformanceCounterManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterManager.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Diagnostics.ICollectData" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterManager.#ctor" />
        <element api="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData" />
        <element api="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>82840BE1-D273-11D2-B94A-00600893B17A</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated.  Use the PerformanceCounters through the System.Diagnostics.PerformanceCounter class instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterManager">
      <topicdata name="PerformanceCounterManager" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterManager" />
      <apidata name="PerformanceCounterManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.PerformanceCounterManager.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData" />
        <element api="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterManager" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterManager.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated.  Use the PerformanceCounters through the System.Diagnostics.PerformanceCounter class instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CloseData">
      <topicdata group="api" eiiName="ICollectData.CloseData" />
      <apidata name="CloseData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Diagnostics.ICollectData.CloseData">
          <type api="T:System.Diagnostics.ICollectData" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated.  Use the PerformanceCounters through the System.Diagnostics.PerformanceCounter class instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterManager.System#Diagnostics#ICollectData#CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
      <topicdata group="api" eiiName="ICollectData.CollectData" />
      <apidata name="CollectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="callIdx">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="valueNamePtr">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="dataPtr">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="totalBytes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="res" out="true">
          <referenceTo>
            <type api="T:System.IntPtr" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Diagnostics.ICollectData.CollectData(System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr@)">
          <type api="T:System.Diagnostics.ICollectData" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterManager" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class has been deprecated.  Use the PerformanceCounters through the System.Diagnostics.PerformanceCounter class instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterPermission">
      <topicdata group="api" />
      <apidata name="PerformanceCounterPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor">
          <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
          <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
          <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
        <element api="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterPermission">
      <topicdata name="PerformanceCounterPermission" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterPermission" />
      <apidata name="PerformanceCounterPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterPermission">
      <topicdata name="PerformanceCounterPermission" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterPermission" />
      <apidata name="PerformanceCounterPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor" />
        <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
        <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.PerformanceCounterPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionEntries" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <topicdata group="api" />
      <apidata name="PerformanceCounterPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse" />
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument" />
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.None" />
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />
        <element api="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <topicdata group="api" notopic="" />
      <apidata name="Administer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This member has been deprecated.  Use System.Diagnostics.PerformanceCounter.PerformanceCounterPermissionAccess.Read instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <topicdata group="api" notopic="" />
      <apidata name="Instrument" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This member has been deprecated.  Use System.Diagnostics.PerformanceCounter.PerformanceCounterPermissionAccess.Write instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <topicdata group="api" />
      <apidata name="PerformanceCounterPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <topicdata name="PerformanceCounterPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />
      <apidata name="PerformanceCounterPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <topicdata name="PerformanceCounterPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />
      <apidata name="PerformanceCounterPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <topicdata group="api" />
      <apidata name="CategoryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CategoryName" />
      <setter name="set_CategoryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineName" />
      <setter name="set_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PermissionAccess" />
      <setter name="set_PermissionAccess" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <topicdata group="api" />
      <apidata name="PerformanceCounterPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <topicdata name="PerformanceCounterPermissionEntry" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionEntry" />
      <apidata name="PerformanceCounterPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <topicdata name="PerformanceCounterPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionEntry" />
      <apidata name="PerformanceCounterPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="categoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <topicdata group="api" />
      <apidata name="CategoryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CategoryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionAccess" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <topicdata group="api" />
      <apidata name="PerformanceCounterPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange">
          <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
          <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <topicdata name="PerformanceCounterPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />
      <apidata name="PerformanceCounterPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange">
          <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
          <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)" />
        </element>
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <topicdata name="PerformanceCounterPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />
      <apidata name="PerformanceCounterPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])" />
        <element api="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.PerformanceCounterPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PerformanceCounterType">
      <topicdata group="api" />
      <apidata name="PerformanceCounterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
        <element api="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
        <element api="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
        <element api="F:System.Diagnostics.PerformanceCounterType.RawFraction" />
        <element api="F:System.Diagnostics.PerformanceCounterType.RawBase" />
        <element api="F:System.Diagnostics.PerformanceCounterType.AverageTimer32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.AverageBase" />
        <element api="F:System.Diagnostics.PerformanceCounterType.AverageCount64" />
        <element api="F:System.Diagnostics.PerformanceCounterType.SampleFraction" />
        <element api="F:System.Diagnostics.PerformanceCounterType.SampleCounter" />
        <element api="F:System.Diagnostics.PerformanceCounterType.SampleBase" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterTimer" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
        <element api="F:System.Diagnostics.PerformanceCounterType.Timer100Ns" />
        <element api="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
        <element api="F:System.Diagnostics.PerformanceCounterType.ElapsedTime" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterDelta32" />
        <element api="F:System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.AverageBase">
      <topicdata group="api" notopic="" />
      <apidata name="AverageBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>1073939458</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.AverageCount64">
      <topicdata group="api" notopic="" />
      <apidata name="AverageCount64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>1073874176</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.AverageTimer32">
      <topicdata group="api" notopic="" />
      <apidata name="AverageTimer32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>805438464</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterDelta32">
      <topicdata group="api" notopic="" />
      <apidata name="CounterDelta32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>4195328</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterDelta64">
      <topicdata group="api" notopic="" />
      <apidata name="CounterDelta64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>4195584</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase">
      <topicdata group="api" notopic="" />
      <apidata name="CounterMultiBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>1107494144</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer">
      <topicdata group="api" notopic="" />
      <apidata name="CounterMultiTimer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>574686464</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="CounterMultiTimer100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>575735040</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse">
      <topicdata group="api" notopic="" />
      <apidata name="CounterMultiTimer100NsInverse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>592512256</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse">
      <topicdata group="api" notopic="" />
      <apidata name="CounterMultiTimerInverse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>591463680</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterTimer">
      <topicdata group="api" notopic="" />
      <apidata name="CounterTimer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>541132032</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse">
      <topicdata group="api" notopic="" />
      <apidata name="CounterTimerInverse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>557909248</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32">
      <topicdata group="api" notopic="" />
      <apidata name="CountPerTimeInterval32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>4523008</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64">
      <topicdata group="api" notopic="" />
      <apidata name="CountPerTimeInterval64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>4523264</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.ElapsedTime">
      <topicdata group="api" notopic="" />
      <apidata name="ElapsedTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>807666944</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOfItems32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOfItems64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>65792</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOfItemsHEX32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64">
      <topicdata group="api" notopic="" />
      <apidata name="NumberOfItemsHEX64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32">
      <topicdata group="api" notopic="" />
      <apidata name="RateOfCountsPerSecond32" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>272696320</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64">
      <topicdata group="api" notopic="" />
      <apidata name="RateOfCountsPerSecond64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>272696576</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.RawBase">
      <topicdata group="api" notopic="" />
      <apidata name="RawBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>1073939459</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.RawFraction">
      <topicdata group="api" notopic="" />
      <apidata name="RawFraction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>537003008</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.SampleBase">
      <topicdata group="api" notopic="" />
      <apidata name="SampleBase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>1073939457</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.SampleCounter">
      <topicdata group="api" notopic="" />
      <apidata name="SampleCounter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>4260864</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.SampleFraction">
      <topicdata group="api" notopic="" />
      <apidata name="SampleFraction" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>549585920</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.Timer100Ns">
      <topicdata group="api" notopic="" />
      <apidata name="Timer100Ns" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>542180608</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse">
      <topicdata group="api" notopic="" />
      <apidata name="Timer100NsInverse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </returns>
      <value>558957824</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PerformanceCounterType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PresentationTraceLevel">
      <topicdata group="api" />
      <apidata name="PresentationTraceLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PresentationTraceLevel.None" />
        <element api="F:System.Diagnostics.PresentationTraceLevel.Low" />
        <element api="F:System.Diagnostics.PresentationTraceLevel.Medium" />
        <element api="F:System.Diagnostics.PresentationTraceLevel.High" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PresentationTraceLevel.High">
      <topicdata group="api" notopic="" />
      <apidata name="High" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PresentationTraceLevel.Low">
      <topicdata group="api" notopic="" />
      <apidata name="Low" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PresentationTraceLevel.Medium">
      <topicdata group="api" notopic="" />
      <apidata name="Medium" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.PresentationTraceLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.PresentationTraceSources">
      <topicdata group="api" />
      <apidata name="PresentationTraceSources" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" />
        <element api="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)" />
        <element api="M:System.Diagnostics.PresentationTraceSources.Refresh" />
        <element api="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)" />
        <element api="P:System.Diagnostics.PresentationTraceSources.AnimationSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DataBindingSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DocumentsSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.FreezableSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.HwndHostSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.MarkupSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.NameScopeSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.ShellSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.PresentationTraceSources">
      <topicdata name="PresentationTraceSources" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.PresentationTraceSources" />
      <apidata name="PresentationTraceSources" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)" />
        <element api="M:System.Diagnostics.PresentationTraceSources.Refresh" />
        <element api="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.PresentationTraceSources">
      <topicdata name="PresentationTraceSources" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.PresentationTraceSources" />
      <apidata name="PresentationTraceSources" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.PresentationTraceSources.AnimationSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DataBindingSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.DocumentsSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.FreezableSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.HwndHostSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.MarkupSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.NameScopeSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource" />
        <element api="P:System.Diagnostics.PresentationTraceSources.ShellSource" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.PresentationTraceSources">
      <topicdata name="PresentationTraceSources" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.PresentationTraceSources" />
      <apidata name="PresentationTraceSources" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" />
      </containers>
    </api>
    <api id="AttachedProperties.T:System.Diagnostics.PresentationTraceSources">
      <topicdata name="PresentationTraceSources" group="list" subgroup="AttachedProperties" subsubgroup="AttachedProperties" typeTopicId="T:System.Diagnostics.PresentationTraceSources" />
      <apidata name="PresentationTraceSources" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.PresentationTraceSources.TraceLevel" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.AnimationSource">
      <topicdata group="api" />
      <apidata name="AnimationSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AnimationSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.DataBindingSource">
      <topicdata group="api" />
      <apidata name="DataBindingSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataBindingSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.DependencyPropertySource">
      <topicdata group="api" />
      <apidata name="DependencyPropertySource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DependencyPropertySource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.DocumentsSource">
      <topicdata group="api" />
      <apidata name="DocumentsSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DocumentsSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.FreezableSource">
      <topicdata group="api" />
      <apidata name="FreezableSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FreezableSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
      <topicdata group="api" />
      <apidata name="GetTraceLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.HwndHostSource">
      <topicdata group="api" />
      <apidata name="HwndHostSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HwndHostSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.MarkupSource">
      <topicdata group="api" />
      <apidata name="MarkupSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MarkupSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.NameScopeSource">
      <topicdata group="api" />
      <apidata name="NameScopeSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameScopeSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PresentationTraceSources.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.ResourceDictionarySource">
      <topicdata group="api" />
      <apidata name="ResourceDictionarySource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResourceDictionarySource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.RoutedEventSource">
      <topicdata group="api" />
      <apidata name="RoutedEventSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RoutedEventSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
      <topicdata group="api" />
      <apidata name="SetTraceLevel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="traceLevel">
          <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.ShellSource">
      <topicdata group="api" />
      <apidata name="ShellSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShellSource" />
      <returns>
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.PresentationTraceSources.TraceLevel">
      <topicdata group="api" />
      <apidata name="TraceLevel" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TraceLevel" />
      <setter name="set_TraceLevel" />
      <returns>
        <type api="T:System.Diagnostics.PresentationTraceLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
            <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:System.Diagnostics.PresentationTraceSources.GetTraceLevel(System.Object)">
            <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:System.Diagnostics.PresentationTraceSources.SetTraceLevel(System.Object,System.Diagnostics.PresentationTraceLevel)">
            <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:System.Diagnostics.PresentationTraceSources.TraceLevelProperty">
      <topicdata group="api" />
      <apidata name="TraceLevelProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.PresentationTraceSources" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Process">
      <topicdata group="api" />
      <apidata name="Process" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Process.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Diagnostics.Process.ErrorDataReceived" />
        <element api="E:System.Diagnostics.Process.Exited" />
        <element api="E:System.Diagnostics.Process.OutputDataReceived" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Diagnostics.Process.#ctor" />
        <element api="M:System.Diagnostics.Process.BeginErrorReadLine" />
        <element api="M:System.Diagnostics.Process.BeginOutputReadLine" />
        <element api="M:System.Diagnostics.Process.CancelErrorRead" />
        <element api="M:System.Diagnostics.Process.CancelOutputRead" />
        <element api="M:System.Diagnostics.Process.Close" />
        <element api="M:System.Diagnostics.Process.CloseMainWindow" />
        <element api="Overload:System.Diagnostics.Process.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Diagnostics.Process.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Process.EnterDebugMode" />
        <element api="M:System.Diagnostics.Process.GetCurrentProcess" />
        <element api="Overload:System.Diagnostics.Process.GetProcessById">
          <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32)" />
          <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.GetProcesses">
          <element api="M:System.Diagnostics.Process.GetProcesses" />
          <element api="M:System.Diagnostics.Process.GetProcesses(System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.GetProcessesByName">
          <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
          <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Process.Kill" />
        <element api="M:System.Diagnostics.Process.LeaveDebugMode" />
        <element api="M:System.Diagnostics.Process.OnExited" />
        <element api="M:System.Diagnostics.Process.Refresh" />
        <element api="Overload:System.Diagnostics.Process.Start">
          <element api="M:System.Diagnostics.Process.Start" />
          <element api="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)" />
          <element api="M:System.Diagnostics.Process.Start(System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Process.ToString" />
        <element api="Overload:System.Diagnostics.Process.WaitForExit">
          <element api="M:System.Diagnostics.Process.WaitForExit" />
          <element api="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.WaitForInputIdle">
          <element api="M:System.Diagnostics.Process.WaitForInputIdle" />
          <element api="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.Process.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.Process.BasePriority" />
        <element api="P:System.Diagnostics.Process.EnableRaisingEvents" />
        <element api="P:System.Diagnostics.Process.ExitCode" />
        <element api="P:System.Diagnostics.Process.ExitTime" />
        <element api="P:System.Diagnostics.Process.Handle" />
        <element api="P:System.Diagnostics.Process.HandleCount" />
        <element api="P:System.Diagnostics.Process.HasExited" />
        <element api="P:System.Diagnostics.Process.Id" />
        <element api="P:System.Diagnostics.Process.MachineName" />
        <element api="P:System.Diagnostics.Process.MainModule" />
        <element api="P:System.Diagnostics.Process.MainWindowHandle" />
        <element api="P:System.Diagnostics.Process.MainWindowTitle" />
        <element api="P:System.Diagnostics.Process.MaxWorkingSet" />
        <element api="P:System.Diagnostics.Process.MinWorkingSet" />
        <element api="P:System.Diagnostics.Process.Modules" />
        <element api="P:System.Diagnostics.Process.NonpagedSystemMemorySize" />
        <element api="P:System.Diagnostics.Process.NonpagedSystemMemorySize64" />
        <element api="P:System.Diagnostics.Process.PagedMemorySize" />
        <element api="P:System.Diagnostics.Process.PagedMemorySize64" />
        <element api="P:System.Diagnostics.Process.PagedSystemMemorySize" />
        <element api="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakPagedMemorySize" />
        <element api="P:System.Diagnostics.Process.PeakPagedMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakVirtualMemorySize" />
        <element api="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakWorkingSet" />
        <element api="P:System.Diagnostics.Process.PeakWorkingSet64" />
        <element api="P:System.Diagnostics.Process.PriorityBoostEnabled" />
        <element api="P:System.Diagnostics.Process.PriorityClass" />
        <element api="P:System.Diagnostics.Process.PrivateMemorySize" />
        <element api="P:System.Diagnostics.Process.PrivateMemorySize64" />
        <element api="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
        <element api="P:System.Diagnostics.Process.ProcessName" />
        <element api="P:System.Diagnostics.Process.ProcessorAffinity" />
        <element api="P:System.Diagnostics.Process.Responding" />
        <element api="P:System.Diagnostics.Process.SafeHandle" />
        <element api="P:System.Diagnostics.Process.SessionId" />
        <element api="P:System.Diagnostics.Process.StandardError" />
        <element api="P:System.Diagnostics.Process.StandardInput" />
        <element api="P:System.Diagnostics.Process.StandardOutput" />
        <element api="P:System.Diagnostics.Process.StartInfo" />
        <element api="P:System.Diagnostics.Process.StartTime" />
        <element api="P:System.Diagnostics.Process.SynchronizingObject" />
        <element api="P:System.Diagnostics.Process.Threads" />
        <element api="P:System.Diagnostics.Process.TotalProcessorTime" />
        <element api="P:System.Diagnostics.Process.UserProcessorTime" />
        <element api="P:System.Diagnostics.Process.VirtualMemorySize" />
        <element api="P:System.Diagnostics.Process.VirtualMemorySize64" />
        <element api="P:System.Diagnostics.Process.WorkingSet" />
        <element api="P:System.Diagnostics.Process.WorkingSet64" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultEventAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Exited</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StartInfo</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalProcessMgmt">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SelfAffectingProcessMgmt">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.Process">
      <topicdata name="Process" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Process" />
      <apidata name="Process" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Process.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Diagnostics.Process.BeginErrorReadLine" />
        <element api="M:System.Diagnostics.Process.BeginOutputReadLine" />
        <element api="M:System.Diagnostics.Process.CancelErrorRead" />
        <element api="M:System.Diagnostics.Process.CancelOutputRead" />
        <element api="M:System.Diagnostics.Process.Close" />
        <element api="M:System.Diagnostics.Process.CloseMainWindow" />
        <element api="Overload:System.Diagnostics.Process.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.Diagnostics.Process.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.Process.EnterDebugMode" />
        <element api="M:System.Diagnostics.Process.GetCurrentProcess" />
        <element api="Overload:System.Diagnostics.Process.GetProcessById">
          <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32)" />
          <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.GetProcesses">
          <element api="M:System.Diagnostics.Process.GetProcesses" />
          <element api="M:System.Diagnostics.Process.GetProcesses(System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.GetProcessesByName">
          <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
          <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Process.Kill" />
        <element api="M:System.Diagnostics.Process.LeaveDebugMode" />
        <element api="M:System.Diagnostics.Process.OnExited" />
        <element api="M:System.Diagnostics.Process.Refresh" />
        <element api="Overload:System.Diagnostics.Process.Start">
          <element api="M:System.Diagnostics.Process.Start" />
          <element api="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)" />
          <element api="M:System.Diagnostics.Process.Start(System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)" />
          <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Process.ToString" />
        <element api="Overload:System.Diagnostics.Process.WaitForExit">
          <element api="M:System.Diagnostics.Process.WaitForExit" />
          <element api="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
        </element>
        <element api="Overload:System.Diagnostics.Process.WaitForInputIdle">
          <element api="M:System.Diagnostics.Process.WaitForInputIdle" />
          <element api="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.Process.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Process">
      <topicdata name="Process" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Process" />
      <apidata name="Process" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Process.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.Process.BasePriority" />
        <element api="P:System.Diagnostics.Process.EnableRaisingEvents" />
        <element api="P:System.Diagnostics.Process.ExitCode" />
        <element api="P:System.Diagnostics.Process.ExitTime" />
        <element api="P:System.Diagnostics.Process.Handle" />
        <element api="P:System.Diagnostics.Process.HandleCount" />
        <element api="P:System.Diagnostics.Process.HasExited" />
        <element api="P:System.Diagnostics.Process.Id" />
        <element api="P:System.Diagnostics.Process.MachineName" />
        <element api="P:System.Diagnostics.Process.MainModule" />
        <element api="P:System.Diagnostics.Process.MainWindowHandle" />
        <element api="P:System.Diagnostics.Process.MainWindowTitle" />
        <element api="P:System.Diagnostics.Process.MaxWorkingSet" />
        <element api="P:System.Diagnostics.Process.MinWorkingSet" />
        <element api="P:System.Diagnostics.Process.Modules" />
        <element api="P:System.Diagnostics.Process.NonpagedSystemMemorySize" />
        <element api="P:System.Diagnostics.Process.NonpagedSystemMemorySize64" />
        <element api="P:System.Diagnostics.Process.PagedMemorySize" />
        <element api="P:System.Diagnostics.Process.PagedMemorySize64" />
        <element api="P:System.Diagnostics.Process.PagedSystemMemorySize" />
        <element api="P:System.Diagnostics.Process.PagedSystemMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakPagedMemorySize" />
        <element api="P:System.Diagnostics.Process.PeakPagedMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakVirtualMemorySize" />
        <element api="P:System.Diagnostics.Process.PeakVirtualMemorySize64" />
        <element api="P:System.Diagnostics.Process.PeakWorkingSet" />
        <element api="P:System.Diagnostics.Process.PeakWorkingSet64" />
        <element api="P:System.Diagnostics.Process.PriorityBoostEnabled" />
        <element api="P:System.Diagnostics.Process.PriorityClass" />
        <element api="P:System.Diagnostics.Process.PrivateMemorySize" />
        <element api="P:System.Diagnostics.Process.PrivateMemorySize64" />
        <element api="P:System.Diagnostics.Process.PrivilegedProcessorTime" />
        <element api="P:System.Diagnostics.Process.ProcessName" />
        <element api="P:System.Diagnostics.Process.ProcessorAffinity" />
        <element api="P:System.Diagnostics.Process.Responding" />
        <element api="P:System.Diagnostics.Process.SafeHandle" />
        <element api="P:System.Diagnostics.Process.SessionId" />
        <element api="P:System.Diagnostics.Process.StandardError" />
        <element api="P:System.Diagnostics.Process.StandardInput" />
        <element api="P:System.Diagnostics.Process.StandardOutput" />
        <element api="P:System.Diagnostics.Process.StartInfo" />
        <element api="P:System.Diagnostics.Process.StartTime" />
        <element api="P:System.Diagnostics.Process.SynchronizingObject" />
        <element api="P:System.Diagnostics.Process.Threads" />
        <element api="P:System.Diagnostics.Process.TotalProcessorTime" />
        <element api="P:System.Diagnostics.Process.UserProcessorTime" />
        <element api="P:System.Diagnostics.Process.VirtualMemorySize" />
        <element api="P:System.Diagnostics.Process.VirtualMemorySize64" />
        <element api="P:System.Diagnostics.Process.WorkingSet" />
        <element api="P:System.Diagnostics.Process.WorkingSet64" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.Process">
      <topicdata name="Process" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.Process" />
      <apidata name="Process" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Process.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Diagnostics.Process.ErrorDataReceived" />
        <element api="E:System.Diagnostics.Process.Exited" />
        <element api="E:System.Diagnostics.Process.OutputDataReceived" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.Diagnostics.Process.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.GetProcessById">
      <topicdata name="GetProcessById" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProcessById" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32)" />
        <element api="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.GetProcesses">
      <topicdata name="GetProcesses" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProcesses" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.GetProcesses" />
        <element api="M:System.Diagnostics.Process.GetProcesses(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.GetProcessesByName">
      <topicdata name="GetProcessesByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProcessesByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String)" />
        <element api="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.Start" />
        <element api="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)" />
        <element api="M:System.Diagnostics.Process.Start(System.String)" />
        <element api="M:System.Diagnostics.Process.Start(System.String,System.String)" />
        <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)" />
        <element api="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.WaitForExit">
      <topicdata name="WaitForExit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitForExit" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.WaitForExit" />
        <element api="M:System.Diagnostics.Process.WaitForExit(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Process.WaitForInputIdle">
      <topicdata name="WaitForInputIdle" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitForInputIdle" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Process.WaitForInputIdle" />
        <element api="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.BasePriority">
      <topicdata group="api" />
      <apidata name="BasePriority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BasePriority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.BeginErrorReadLine">
      <topicdata group="api" />
      <apidata name="BeginErrorReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.BeginOutputReadLine">
      <topicdata group="api" />
      <apidata name="BeginOutputReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.CancelErrorRead">
      <topicdata group="api" />
      <apidata name="CancelErrorRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.CancelOutputRead">
      <topicdata group="api" />
      <apidata name="CancelOutputRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.CloseMainWindow">
      <topicdata group="api" />
      <apidata name="CloseMainWindow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.Process.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.EnableRaisingEvents">
      <topicdata group="api" />
      <apidata name="EnableRaisingEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableRaisingEvents" />
      <setter name="set_EnableRaisingEvents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.EnterDebugMode">
      <topicdata group="api" />
      <apidata name="EnterDebugMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="E:System.Diagnostics.Process.ErrorDataReceived">
      <topicdata group="api" />
      <apidata name="ErrorDataReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorDataReceived" />
      <remover name="remove_ErrorDataReceived" />
      <eventhandler>
        <type api="T:System.Diagnostics.DataReceivedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Diagnostics.DataReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.ExitCode">
      <topicdata group="api" />
      <apidata name="ExitCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExitCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Diagnostics.Process.Exited">
      <topicdata group="api" />
      <apidata name="Exited" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Exited" />
      <remover name="remove_Exited" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.ExitTime">
      <topicdata group="api" />
      <apidata name="ExitTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExitTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.GetCurrentProcess">
      <topicdata group="api" />
      <apidata name="GetCurrentProcess" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetProcessById" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcessById" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="processId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="GetProcessById" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcessById" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="processId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcesses">
      <topicdata group="api" />
      <apidata name="GetProcesses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcesses" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.Process" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <topicdata group="api" />
      <apidata name="GetProcesses" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcesses" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.Process" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetProcessesByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcessesByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="processName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.Process" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetProcessesByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.GetProcessesByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="processName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="machineName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.Process" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.HandleCount">
      <topicdata group="api" />
      <apidata name="HandleCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HandleCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.HasExited">
      <topicdata group="api" />
      <apidata name="HasExited" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasExited" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.Kill">
      <topicdata group="api" />
      <apidata name="Kill" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.LeaveDebugMode">
      <topicdata group="api" />
      <apidata name="LeaveDebugMode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.MachineName">
      <topicdata group="api" />
      <apidata name="MachineName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MachineName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.MainModule">
      <topicdata group="api" />
      <apidata name="MainModule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MainModule" />
      <returns>
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.MainWindowHandle">
      <topicdata group="api" />
      <apidata name="MainWindowHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MainWindowHandle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.MainWindowTitle">
      <topicdata group="api" />
      <apidata name="MainWindowTitle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MainWindowTitle" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.MaxWorkingSet">
      <topicdata group="api" />
      <apidata name="MaxWorkingSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxWorkingSet" />
      <setter name="set_MaxWorkingSet" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.MinWorkingSet">
      <topicdata group="api" />
      <apidata name="MinWorkingSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinWorkingSet" />
      <setter name="set_MinWorkingSet" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.Modules">
      <topicdata group="api" />
      <apidata name="Modules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Modules" />
      <returns>
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <topicdata group="api" />
      <apidata name="NonpagedSystemMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NonpagedSystemMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.NonpagedSystemMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <topicdata group="api" />
      <apidata name="NonpagedSystemMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NonpagedSystemMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.OnExited">
      <topicdata group="api" />
      <apidata name="OnExited" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="E:System.Diagnostics.Process.OutputDataReceived">
      <topicdata group="api" />
      <apidata name="OutputDataReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_OutputDataReceived" />
      <remover name="remove_OutputDataReceived" />
      <eventhandler>
        <type api="T:System.Diagnostics.DataReceivedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Diagnostics.DataReceivedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PagedMemorySize">
      <topicdata group="api" />
      <apidata name="PagedMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PagedMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PagedMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PagedMemorySize64">
      <topicdata group="api" />
      <apidata name="PagedMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PagedMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <topicdata group="api" />
      <apidata name="PagedSystemMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PagedSystemMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PagedSystemMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <topicdata group="api" />
      <apidata name="PagedSystemMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PagedSystemMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <topicdata group="api" />
      <apidata name="PeakPagedMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakPagedMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PeakPagedMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <topicdata group="api" />
      <apidata name="PeakPagedMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakPagedMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <topicdata group="api" />
      <apidata name="PeakVirtualMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakVirtualMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PeakVirtualMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <topicdata group="api" />
      <apidata name="PeakVirtualMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakVirtualMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakWorkingSet">
      <topicdata group="api" />
      <apidata name="PeakWorkingSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakWorkingSet" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PeakWorkingSet64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PeakWorkingSet64">
      <topicdata group="api" />
      <apidata name="PeakWorkingSet64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeakWorkingSet64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <topicdata group="api" />
      <apidata name="PriorityBoostEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PriorityBoostEnabled" />
      <setter name="set_PriorityBoostEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PriorityClass">
      <topicdata group="api" />
      <apidata name="PriorityClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PriorityClass" />
      <setter name="set_PriorityClass" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PrivateMemorySize">
      <topicdata group="api" />
      <apidata name="PrivateMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivateMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.PrivateMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PrivateMemorySize64">
      <topicdata group="api" />
      <apidata name="PrivateMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivateMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <topicdata group="api" />
      <apidata name="PrivilegedProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivilegedProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.ProcessName">
      <topicdata group="api" />
      <apidata name="ProcessName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProcessName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.ProcessorAffinity">
      <topicdata group="api" />
      <apidata name="ProcessorAffinity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProcessorAffinity" />
      <setter name="set_ProcessorAffinity" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.Responding">
      <topicdata group="api" />
      <apidata name="Responding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Responding" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.SafeHandle">
      <topicdata group="api" />
      <apidata name="SafeHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SafeHandle" />
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.SessionId">
      <topicdata group="api" />
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.StandardError">
      <topicdata group="api" />
      <apidata name="StandardError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StandardError" />
      <returns>
        <type api="T:System.IO.StreamReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.StandardInput">
      <topicdata group="api" />
      <apidata name="StandardInput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StandardInput" />
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.StandardOutput">
      <topicdata group="api" />
      <apidata name="StandardOutput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StandardOutput" />
      <returns>
        <type api="T:System.IO.StreamReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="startInfo">
          <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Start(System.String)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Process.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.Security.SecureString" ref="true" />
        </parameter>
        <parameter name="domain">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.Process" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.StartInfo">
      <topicdata group="api" />
      <apidata name="StartInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StartInfo" />
      <setter name="set_StartInfo" />
      <returns>
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.StartTime">
      <topicdata group="api" />
      <apidata name="StartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.SynchronizingObject">
      <topicdata group="api" />
      <apidata name="SynchronizingObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizingObject" />
      <setter name="set_SynchronizingObject" />
      <returns>
        <type api="T:System.ComponentModel.ISynchronizeInvoke" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.Threads">
      <topicdata group="api" />
      <apidata name="Threads" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Threads" />
      <returns>
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.ToString">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.TotalProcessorTime">
      <topicdata group="api" />
      <apidata name="TotalProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.UserProcessorTime">
      <topicdata group="api" />
      <apidata name="UserProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.VirtualMemorySize">
      <topicdata group="api" />
      <apidata name="VirtualMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VirtualMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.VirtualMemorySize64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.VirtualMemorySize64">
      <topicdata group="api" />
      <apidata name="VirtualMemorySize64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VirtualMemorySize64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Process.WaitForExit">
      <topicdata group="api" />
      <apidata name="WaitForExit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Process.WaitForExit" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForExit" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Process.WaitForExit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.WaitForInputIdle">
      <topicdata group="api" />
      <apidata name="WaitForInputIdle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Process.WaitForInputIdle" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitForInputIdle" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.Process.WaitForInputIdle" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="milliseconds">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Process.WorkingSet">
      <topicdata group="api" />
      <apidata name="WorkingSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkingSet" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This property has been deprecated.  Please use System.Diagnostics.Process.WorkingSet64 instead.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Process.WorkingSet64">
      <topicdata group="api" />
      <apidata name="WorkingSet64" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkingSet64" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Process" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.ProcessModule">
      <topicdata group="api" />
      <apidata name="ProcessModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="Overload:System.Diagnostics.ProcessModule.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Diagnostics.ProcessModule.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ProcessModule.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.ProcessModule.BaseAddress" />
        <element api="P:System.Diagnostics.ProcessModule.EntryPointAddress" />
        <element api="P:System.Diagnostics.ProcessModule.FileName" />
        <element api="P:System.Diagnostics.ProcessModule.FileVersionInfo" />
        <element api="P:System.Diagnostics.ProcessModule.ModuleMemorySize" />
        <element api="P:System.Diagnostics.ProcessModule.ModuleName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.ProcessModule">
      <topicdata name="ProcessModule" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ProcessModule" />
      <apidata name="ProcessModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.ProcessModule.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.Diagnostics.ProcessModule.ToString" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ProcessModule.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ProcessModule">
      <topicdata name="ProcessModule" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ProcessModule" />
      <apidata name="ProcessModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.ProcessModule.BaseAddress" />
        <element api="P:System.Diagnostics.ProcessModule.EntryPointAddress" />
        <element api="P:System.Diagnostics.ProcessModule.FileName" />
        <element api="P:System.Diagnostics.ProcessModule.FileVersionInfo" />
        <element api="P:System.Diagnostics.ProcessModule.ModuleMemorySize" />
        <element api="P:System.Diagnostics.ProcessModule.ModuleName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.ProcessModule">
      <topicdata name="ProcessModule" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.ProcessModule" />
      <apidata name="ProcessModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.BaseAddress">
      <topicdata group="api" />
      <apidata name="BaseAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseAddress" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <topicdata group="api" />
      <apidata name="EntryPointAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntryPointAddress" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <topicdata group="api" />
      <apidata name="FileVersionInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FileVersionInfo" />
      <returns>
        <type api="T:System.Diagnostics.FileVersionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <topicdata group="api" />
      <apidata name="ModuleMemorySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ModuleMemorySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModule.ModuleName">
      <topicdata group="api" />
      <apidata name="ModuleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ModuleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModule.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.ToString">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ProcessModuleCollection">
      <topicdata group="api" />
      <apidata name="ProcessModuleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Diagnostics.ProcessModuleCollection.#ctor">
          <element api="M:System.Diagnostics.ProcessModuleCollection.#ctor" />
          <element api="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])" />
        </element>
        <element api="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.ProcessModuleCollection">
      <topicdata name="ProcessModuleCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ProcessModuleCollection" />
      <apidata name="ProcessModuleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ProcessModuleCollection">
      <topicdata name="ProcessModuleCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ProcessModuleCollection" />
      <apidata name="ProcessModuleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.ProcessModuleCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.ProcessModuleCollection.#ctor" />
        <element api="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.ProcessModuleCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ProcessModuleCollection.#ctor" />
      <parameters>
        <parameter name="processModules">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.ProcessModule" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="module">
          <type api="T:System.Diagnostics.ProcessModule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.ProcessModule" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="module">
          <type api="T:System.Diagnostics.ProcessModule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.ProcessModule" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessModuleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ProcessPriorityClass">
      <topicdata group="api" />
      <apidata name="ProcessPriorityClass" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.ProcessPriorityClass.Normal" />
        <element api="F:System.Diagnostics.ProcessPriorityClass.Idle" />
        <element api="F:System.Diagnostics.ProcessPriorityClass.High" />
        <element api="F:System.Diagnostics.ProcessPriorityClass.RealTime" />
        <element api="F:System.Diagnostics.ProcessPriorityClass.BelowNormal" />
        <element api="F:System.Diagnostics.ProcessPriorityClass.AboveNormal" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <topicdata group="api" notopic="" />
      <apidata name="AboveNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>32768</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <topicdata group="api" notopic="" />
      <apidata name="BelowNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>16384</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.High">
      <topicdata group="api" notopic="" />
      <apidata name="High" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <topicdata group="api" notopic="" />
      <apidata name="Idle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <topicdata group="api" notopic="" />
      <apidata name="RealTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessPriorityClass" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ProcessStartInfo">
      <topicdata group="api" />
      <apidata name="ProcessStartInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.ProcessStartInfo.#ctor">
          <element api="M:System.Diagnostics.ProcessStartInfo.#ctor" />
          <element api="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
          <element api="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Arguments" />
        <element api="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Domain" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Environment" />
        <element api="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <element api="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
        <element api="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
        <element api="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <element api="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Password" />
        <element api="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <element api="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
        <element api="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
        <element api="P:System.Diagnostics.ProcessStartInfo.UserName" />
        <element api="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Verb" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Verbs" />
        <element api="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
        <element api="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SharedState">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SelfAffectingProcessMgmt">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.ProcessStartInfo">
      <topicdata name="ProcessStartInfo" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ProcessStartInfo" />
      <apidata name="ProcessStartInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ProcessStartInfo">
      <topicdata name="ProcessStartInfo" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ProcessStartInfo" />
      <apidata name="ProcessStartInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.ProcessStartInfo.Arguments" />
        <element api="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Domain" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Environment" />
        <element api="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <element api="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
        <element api="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
        <element api="P:System.Diagnostics.ProcessStartInfo.FileName" />
        <element api="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Password" />
        <element api="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <element api="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <element api="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
        <element api="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
        <element api="P:System.Diagnostics.ProcessStartInfo.UserName" />
        <element api="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Verb" />
        <element api="P:System.Diagnostics.ProcessStartInfo.Verbs" />
        <element api="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
        <element api="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.ProcessStartInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.ProcessStartInfo.#ctor" />
        <element api="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
        <element api="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ProcessStartInfo.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ProcessStartInfo.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ProcessStartInfo.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Arguments" />
      <setter name="set_Arguments" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <topicdata group="api" />
      <apidata name="CreateNoWindow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CreateNoWindow" />
      <setter name="set_CreateNoWindow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Domain" />
      <setter name="set_Domain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Environment">
      <topicdata group="api" />
      <apidata name="Environment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Environment" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <topicdata group="api" />
      <apidata name="EnvironmentVariables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvironmentVariables" />
      <returns>
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <topicdata group="api" />
      <apidata name="ErrorDialog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorDialog" />
      <setter name="set_ErrorDialog" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <topicdata group="api" />
      <apidata name="ErrorDialogParentHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorDialogParentHandle" />
      <setter name="set_ErrorDialogParentHandle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FileName" />
      <setter name="set_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <topicdata group="api" />
      <apidata name="LoadUserProfile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoadUserProfile" />
      <setter name="set_LoadUserProfile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.Security.SecureString" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <topicdata group="api" />
      <apidata name="PasswordInClearText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordInClearText" />
      <setter name="set_PasswordInClearText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <topicdata group="api" />
      <apidata name="RedirectStandardError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RedirectStandardError" />
      <setter name="set_RedirectStandardError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <topicdata group="api" />
      <apidata name="RedirectStandardInput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RedirectStandardInput" />
      <setter name="set_RedirectStandardInput" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <topicdata group="api" />
      <apidata name="RedirectStandardOutput" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RedirectStandardOutput" />
      <setter name="set_RedirectStandardOutput" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <topicdata group="api" />
      <apidata name="StandardErrorEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StandardErrorEncoding" />
      <setter name="set_StandardErrorEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <topicdata group="api" />
      <apidata name="StandardOutputEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StandardOutputEncoding" />
      <setter name="set_StandardOutputEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserName" />
      <setter name="set_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <topicdata group="api" />
      <apidata name="UseShellExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseShellExecute" />
      <setter name="set_UseShellExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Verb">
      <topicdata group="api" />
      <apidata name="Verb" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Verb" />
      <setter name="set_Verb" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <topicdata group="api" />
      <apidata name="Verbs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Verbs" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <topicdata group="api" />
      <apidata name="WindowStyle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowStyle" />
      <setter name="set_WindowStyle" />
      <returns>
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
            <enumValue>
              <field name="Normal" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <topicdata group="api" />
      <apidata name="WorkingDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkingDirectory" />
      <setter name="set_WorkingDirectory" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessStartInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.ProcessThread">
      <topicdata group="api" />
      <apidata name="ProcessThread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="Overload:System.Diagnostics.ProcessThread.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Diagnostics.ProcessThread.ResetIdealProcessor" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ProcessThread.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.ProcessThread.BasePriority" />
        <element api="P:System.Diagnostics.ProcessThread.CurrentPriority" />
        <element api="P:System.Diagnostics.ProcessThread.Id" />
        <element api="P:System.Diagnostics.ProcessThread.IdealProcessor" />
        <element api="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled" />
        <element api="P:System.Diagnostics.ProcessThread.PriorityLevel" />
        <element api="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.ProcessorAffinity" />
        <element api="P:System.Diagnostics.ProcessThread.StartAddress" />
        <element api="P:System.Diagnostics.ProcessThread.StartTime" />
        <element api="P:System.Diagnostics.ProcessThread.ThreadState" />
        <element api="P:System.Diagnostics.ProcessThread.TotalProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.UserProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.WaitReason" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="SelfAffectingProcessMgmt">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="SelfAffectingThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.ProcessThread">
      <topicdata name="ProcessThread" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ProcessThread" />
      <apidata name="ProcessThread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.ProcessThread.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Diagnostics.ProcessThread.ResetIdealProcessor" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.ProcessThread.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ProcessThread">
      <topicdata name="ProcessThread" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ProcessThread" />
      <apidata name="ProcessThread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Diagnostics.ProcessThread.BasePriority" />
        <element api="P:System.Diagnostics.ProcessThread.CurrentPriority" />
        <element api="P:System.Diagnostics.ProcessThread.Id" />
        <element api="P:System.Diagnostics.ProcessThread.IdealProcessor" />
        <element api="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled" />
        <element api="P:System.Diagnostics.ProcessThread.PriorityLevel" />
        <element api="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.ProcessorAffinity" />
        <element api="P:System.Diagnostics.ProcessThread.StartAddress" />
        <element api="P:System.Diagnostics.ProcessThread.StartTime" />
        <element api="P:System.Diagnostics.ProcessThread.ThreadState" />
        <element api="P:System.Diagnostics.ProcessThread.TotalProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.UserProcessorTime" />
        <element api="P:System.Diagnostics.ProcessThread.WaitReason" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" />
      </containers>
    </api>
    <api id="Events.T:System.Diagnostics.ProcessThread">
      <topicdata name="ProcessThread" group="list" subgroup="Events" typeTopicId="T:System.Diagnostics.ProcessThread" />
      <apidata name="ProcessThread" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.BasePriority">
      <topicdata group="api" />
      <apidata name="BasePriority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BasePriority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <topicdata group="api" />
      <apidata name="CurrentPriority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentPriority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <topicdata group="api" />
      <apidata name="IdealProcessor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata set="true" />
      <setter name="set_IdealProcessor" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <topicdata group="api" />
      <apidata name="PriorityBoostEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PriorityBoostEnabled" />
      <setter name="set_PriorityBoostEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <topicdata group="api" />
      <apidata name="PriorityLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PriorityLevel" />
      <setter name="set_PriorityLevel" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <topicdata group="api" />
      <apidata name="PrivilegedProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivilegedProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <topicdata group="api" />
      <apidata name="ProcessorAffinity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata set="true" />
      <setter name="set_ProcessorAffinity" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <topicdata group="api" />
      <apidata name="ResetIdealProcessor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.StartAddress">
      <topicdata group="api" />
      <apidata name="StartAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartAddress" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.StartTime">
      <topicdata group="api" />
      <apidata name="StartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.ThreadState">
      <topicdata group="api" />
      <apidata name="ThreadState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ThreadState" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <topicdata group="api" />
      <apidata name="TotalProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <topicdata group="api" />
      <apidata name="UserProcessorTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserProcessorTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThread.WaitReason">
      <topicdata group="api" />
      <apidata name="WaitReason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WaitReason" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ProcessThreadCollection">
      <topicdata group="api" />
      <apidata name="ProcessThreadCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="Overload:System.Diagnostics.ProcessThreadCollection.#ctor">
          <element api="M:System.Diagnostics.ProcessThreadCollection.#ctor" />
          <element api="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])" />
        </element>
        <element api="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.ProcessThreadCollection">
      <topicdata name="ProcessThreadCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.ProcessThreadCollection" />
      <apidata name="ProcessThreadCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.ProcessThreadCollection">
      <topicdata name="ProcessThreadCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.ProcessThreadCollection" />
      <apidata name="ProcessThreadCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.ProcessThreadCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.ProcessThreadCollection.#ctor" />
        <element api="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.ProcessThreadCollection.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.ProcessThreadCollection.#ctor" />
      <parameters>
        <parameter name="processThreads">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.ProcessThread" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thread">
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thread">
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.ProcessThread" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thread">
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="thread">
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.ProcessThread" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="thread">
          <type api="T:System.Diagnostics.ProcessThread" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessThreadCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ProcessWindowStyle">
      <topicdata group="api" />
      <apidata name="ProcessWindowStyle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.ProcessWindowStyle.Normal" />
        <element api="F:System.Diagnostics.ProcessWindowStyle.Hidden" />
        <element api="F:System.Diagnostics.ProcessWindowStyle.Minimized" />
        <element api="F:System.Diagnostics.ProcessWindowStyle.Maximized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <topicdata group="api" notopic="" />
      <apidata name="Hidden" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <topicdata group="api" notopic="" />
      <apidata name="Maximized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <topicdata group="api" notopic="" />
      <apidata name="Minimized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ProcessWindowStyle" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.SourceFilter">
      <topicdata group="api" />
      <apidata name="SourceFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.SourceFilter.#ctor(System.String)" />
        <element api="M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.SourceFilter.Source" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.SourceFilter">
      <topicdata name="SourceFilter" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.SourceFilter" />
      <apidata name="SourceFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceFilter" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.SourceFilter">
      <topicdata name="SourceFilter" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.SourceFilter" />
      <apidata name="SourceFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.SourceFilter.Source" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceFilter" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceFilter.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="ShouldTrace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
          <type api="T:System.Diagnostics.TraceFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="cache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="formatOrMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="data1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceFilter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SourceFilter.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceFilter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.SourceLevels">
      <topicdata group="api" />
      <apidata name="SourceLevels" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.SourceLevels.Off" />
        <element api="F:System.Diagnostics.SourceLevels.Critical" />
        <element api="F:System.Diagnostics.SourceLevels.Error" />
        <element api="F:System.Diagnostics.SourceLevels.Warning" />
        <element api="F:System.Diagnostics.SourceLevels.Information" />
        <element api="F:System.Diagnostics.SourceLevels.Verbose" />
        <element api="F:System.Diagnostics.SourceLevels.ActivityTracing" />
        <element api="F:System.Diagnostics.SourceLevels.All" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.ActivityTracing">
      <topicdata group="api" notopic="" />
      <apidata name="ActivityTracing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>65280</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Critical">
      <topicdata group="api" notopic="" />
      <apidata name="Critical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Information">
      <topicdata group="api" notopic="" />
      <apidata name="Information" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Off">
      <topicdata group="api" notopic="" />
      <apidata name="Off" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.SourceLevels.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.SourceSwitch">
      <topicdata group="api" />
      <apidata name="SourceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Switch" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.SourceSwitch.#ctor">
          <element api="M:System.Diagnostics.SourceSwitch.#ctor(System.String)" />
          <element api="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.SourceSwitch.OnValueChanged" />
        <element api="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)" />
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.SourceSwitch.Level" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.SourceSwitch">
      <topicdata name="SourceSwitch" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.SourceSwitch" />
      <apidata name="SourceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.SourceSwitch.OnValueChanged" />
        <element api="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)" />
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.SourceSwitch">
      <topicdata name="SourceSwitch" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.SourceSwitch" />
      <apidata name="SourceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.SourceSwitch.Level" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.SourceSwitch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.SourceSwitch.#ctor(System.String)" />
        <element api="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceSwitch.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.SourceSwitch.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceSwitch.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.SourceSwitch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultSwitchValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SourceSwitch.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:System.Diagnostics.SourceLevels" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceSwitch.OnValueChanged">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Switch.OnValueChanged">
          <type api="T:System.Diagnostics.Switch" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SourceSwitch.ShouldTrace(System.Diagnostics.TraceEventType)">
      <topicdata group="api" />
      <apidata name="ShouldTrace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.StackFrame">
      <topicdata group="api" />
      <apidata name="StackFrame" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackFrame.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN" />
        <element api="Overload:System.Diagnostics.StackFrame.#ctor">
          <element api="M:System.Diagnostics.StackFrame.#ctor" />
          <element api="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)" />
          <element api="M:System.Diagnostics.StackFrame.#ctor(System.Int32)" />
          <element api="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)" />
          <element api="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)" />
          <element api="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Diagnostics.StackFrame.GetFileColumnNumber" />
        <element api="M:System.Diagnostics.StackFrame.GetFileLineNumber" />
        <element api="M:System.Diagnostics.StackFrame.GetFileName" />
        <element api="M:System.Diagnostics.StackFrame.GetILOffset" />
        <element api="M:System.Diagnostics.StackFrame.GetMethod" />
        <element api="M:System.Diagnostics.StackFrame.GetNativeOffset" />
        <element api="M:System.Diagnostics.StackFrame.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.StackFrame">
      <topicdata name="StackFrame" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.StackFrame" />
      <apidata name="StackFrame" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackFrame.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.StackFrame.GetFileColumnNumber" />
        <element api="M:System.Diagnostics.StackFrame.GetFileLineNumber" />
        <element api="M:System.Diagnostics.StackFrame.GetFileName" />
        <element api="M:System.Diagnostics.StackFrame.GetILOffset" />
        <element api="M:System.Diagnostics.StackFrame.GetMethod" />
        <element api="M:System.Diagnostics.StackFrame.GetNativeOffset" />
        <element api="M:System.Diagnostics.StackFrame.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.StackFrame">
      <topicdata name="StackFrame" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.StackFrame" />
      <apidata name="StackFrame" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackFrame.#ctor" />
      <elements>
        <element api="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.StackFrame.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.StackFrame.#ctor" />
        <element api="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)" />
        <element api="M:System.Diagnostics.StackFrame.#ctor(System.Int32)" />
        <element api="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)" />
        <element api="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)" />
        <element api="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <parameters>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <parameters>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <parameters>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.#ctor(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackFrame.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lineNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="colNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
      <topicdata group="api" />
      <apidata name="GetFileColumnNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetFileLineNumber">
      <topicdata group="api" />
      <apidata name="GetFileLineNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetFileName">
      <topicdata group="api" />
      <apidata name="GetFileName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetILOffset">
      <topicdata group="api" />
      <apidata name="GetILOffset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetMethod">
      <topicdata group="api" />
      <apidata name="GetMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Reflection.MethodBase" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.GetNativeOffset">
      <topicdata group="api" />
      <apidata name="GetNativeOffset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.StackFrame.OFFSET_UNKNOWN">
      <topicdata group="api" />
      <apidata name="OFFSET_UNKNOWN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackFrame.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackTrace.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
        <element api="Overload:System.Diagnostics.StackTrace.#ctor">
          <element api="M:System.Diagnostics.StackTrace.#ctor" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
          <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
        <element api="M:System.Diagnostics.StackTrace.GetFrames" />
        <element api="M:System.Diagnostics.StackTrace.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.StackTrace.FrameCount" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.StackTrace">
      <topicdata name="StackTrace" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.StackTrace" />
      <apidata name="StackTrace" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackTrace.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
        <element api="M:System.Diagnostics.StackTrace.GetFrames" />
        <element api="M:System.Diagnostics.StackTrace.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.StackTrace">
      <topicdata name="StackTrace" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.StackTrace" />
      <apidata name="StackTrace" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackTrace.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.StackTrace.FrameCount" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.StackTrace">
      <topicdata name="StackTrace" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.StackTrace" />
      <apidata name="StackTrace" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Diagnostics.StackTrace.#ctor" />
      <elements>
        <element api="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.StackTrace.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.StackTrace.#ctor" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
        <element api="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="frame">
          <type api="T:System.Diagnostics.StackFrame" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="skipFrames">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="fNeedFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.StackTrace.#ctor" />
      <parameters>
        <parameter name="targetThread">
          <type api="T:System.Threading.Thread" ref="true" />
        </parameter>
        <parameter name="needFileInfo">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This constructor has been deprecated.  Please use a constructor that does not require a Thread parameter.  http://go.microsoft.com/fwlink/?linkid=14202</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.StackTrace.FrameCount">
      <topicdata group="api" />
      <apidata name="FrameCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_FrameCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetFrame" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.StackFrame" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.GetFrames">
      <topicdata group="api" />
      <apidata name="GetFrames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.StackFrame" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP">
      <topicdata group="api" />
      <apidata name="METHODS_TO_SKIP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.StackTrace.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.StackTrace" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Stopwatch">
      <topicdata group="api" />
      <apidata name="Stopwatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Stopwatch.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Diagnostics.Stopwatch.Frequency" />
        <element api="F:System.Diagnostics.Stopwatch.IsHighResolution" />
        <element api="M:System.Diagnostics.Stopwatch.#ctor" />
        <element api="M:System.Diagnostics.Stopwatch.GetTimestamp" />
        <element api="M:System.Diagnostics.Stopwatch.Reset" />
        <element api="M:System.Diagnostics.Stopwatch.Restart" />
        <element api="M:System.Diagnostics.Stopwatch.Start" />
        <element api="M:System.Diagnostics.Stopwatch.StartNew" />
        <element api="M:System.Diagnostics.Stopwatch.Stop" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Stopwatch.Elapsed" />
        <element api="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <element api="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
        <element api="P:System.Diagnostics.Stopwatch.IsRunning" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.Stopwatch">
      <topicdata name="Stopwatch" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Stopwatch" />
      <apidata name="Stopwatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Stopwatch.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.Stopwatch.GetTimestamp" />
        <element api="M:System.Diagnostics.Stopwatch.Reset" />
        <element api="M:System.Diagnostics.Stopwatch.Restart" />
        <element api="M:System.Diagnostics.Stopwatch.Start" />
        <element api="M:System.Diagnostics.Stopwatch.StartNew" />
        <element api="M:System.Diagnostics.Stopwatch.Stop" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Stopwatch">
      <topicdata name="Stopwatch" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Stopwatch" />
      <apidata name="Stopwatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Stopwatch.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.Stopwatch.Elapsed" />
        <element api="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds" />
        <element api="P:System.Diagnostics.Stopwatch.ElapsedTicks" />
        <element api="P:System.Diagnostics.Stopwatch.IsRunning" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" />
      </containers>
    </api>
    <api id="Fields.T:System.Diagnostics.Stopwatch">
      <topicdata name="Stopwatch" group="list" subgroup="Fields" typeTopicId="T:System.Diagnostics.Stopwatch" />
      <apidata name="Stopwatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.Stopwatch.#ctor" />
      <elements>
        <element api="F:System.Diagnostics.Stopwatch.Frequency" />
        <element api="F:System.Diagnostics.Stopwatch.IsHighResolution" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Stopwatch.Elapsed">
      <topicdata group="api" />
      <apidata name="Elapsed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Elapsed" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <topicdata group="api" />
      <apidata name="ElapsedMilliseconds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ElapsedMilliseconds" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <topicdata group="api" />
      <apidata name="ElapsedTicks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ElapsedTicks" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Stopwatch.Frequency">
      <topicdata group="api" />
      <apidata name="Frequency" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <topicdata group="api" />
      <apidata name="GetTimestamp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <topicdata group="api" />
      <apidata name="IsHighResolution" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Stopwatch.IsRunning">
      <topicdata group="api" />
      <apidata name="IsRunning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRunning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.Restart">
      <topicdata group="api" />
      <apidata name="Restart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.StartNew">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Stopwatch.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Stopwatch" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Switch">
      <topicdata group="api" />
      <apidata name="Switch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.BooleanSwitch" ref="true" />
          <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
          <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.Switch.#ctor">
          <element api="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Diagnostics.Switch.OnValueChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.Switch">
      <topicdata name="Switch" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Switch" />
      <apidata name="Switch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.Switch.OnSwitchSettingChanged" />
        <element api="M:System.Diagnostics.Switch.OnValueChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Switch">
      <topicdata name="Switch" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Switch" />
      <apidata name="Switch" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Switch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.Switch.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Switch.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Switch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.Switch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultSwitchValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Switch.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Switch.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Switch.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Switch.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Switch.OnSwitchSettingChanged">
      <topicdata group="api" />
      <apidata name="OnSwitchSettingChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Switch.OnValueChanged">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Switch.SwitchSetting">
      <topicdata group="api" />
      <apidata name="SwitchSetting" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwitchSetting" />
      <setter name="set_SwitchSetting" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Switch.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Switch" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.SwitchAttribute">
      <topicdata group="api" />
      <apidata name="SwitchAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)" />
        <element api="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchDescription" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchName" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Property" />
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.SwitchAttribute">
      <topicdata name="SwitchAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.SwitchAttribute" />
      <apidata name="SwitchAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.SwitchAttribute">
      <topicdata name="SwitchAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.SwitchAttribute" />
      <apidata name="SwitchAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchDescription" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchName" />
        <element api="P:System.Diagnostics.SwitchAttribute.SwitchType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SwitchAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="switchName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="switchType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="GetAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SwitchAttribute.SwitchDescription">
      <topicdata group="api" />
      <apidata name="SwitchDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwitchDescription" />
      <setter name="set_SwitchDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SwitchAttribute.SwitchName">
      <topicdata group="api" />
      <apidata name="SwitchName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwitchName" />
      <setter name="set_SwitchName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SwitchAttribute.SwitchType">
      <topicdata group="api" />
      <apidata name="SwitchType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwitchType" />
      <setter name="set_SwitchType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.SwitchLevelAttribute">
      <topicdata group="api" />
      <apidata name="SwitchLevelAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Diagnostics.SwitchLevelAttribute.#ctor(System.Type)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.SwitchLevelAttribute.SwitchLevelType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.SwitchLevelAttribute">
      <topicdata name="SwitchLevelAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.SwitchLevelAttribute" />
      <apidata name="SwitchLevelAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchLevelAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.SwitchLevelAttribute">
      <topicdata name="SwitchLevelAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.SwitchLevelAttribute" />
      <apidata name="SwitchLevelAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Diagnostics.SwitchLevelAttribute.SwitchLevelType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchLevelAttribute" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.SwitchLevelAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="switchLevelType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchLevelAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.SwitchLevelAttribute.SwitchLevelType">
      <topicdata group="api" />
      <apidata name="SwitchLevelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwitchLevelType" />
      <setter name="set_SwitchLevelType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.SwitchLevelAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TextWriterTraceListener">
      <topicdata group="api" />
      <apidata name="TextWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.ConsoleTraceListener" ref="true" />
          <type api="T:System.Diagnostics.DelimitedListTraceListener" ref="true" />
          <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.EventSchemaTraceListener" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.#ctor">
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.TextWriterTraceListener">
      <topicdata name="TextWriterTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TextWriterTraceListener" />
      <apidata name="TextWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <elements>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.TextWriterTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TextWriterTraceListener">
      <topicdata name="TextWriterTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TextWriterTraceListener" />
      <apidata name="TextWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TextWriterTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TextWriterTraceListener.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TextWriterTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TextWriterTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TextWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Close">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.TextWriterTraceListener.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Flush">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TextWriterTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TextWriterTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TextWriterTraceListener.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Writer" />
      <setter name="set_Writer" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ThreadPriorityLevel">
      <topicdata group="api" />
      <apidata name="ThreadPriorityLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.ThreadPriorityLevel.Idle" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.Lowest" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.Normal" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.Highest" />
        <element api="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <topicdata group="api" notopic="" />
      <apidata name="AboveNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <topicdata group="api" notopic="" />
      <apidata name="BelowNormal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <topicdata group="api" notopic="" />
      <apidata name="Highest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <topicdata group="api" notopic="" />
      <apidata name="Idle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>-15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <topicdata group="api" notopic="" />
      <apidata name="Lowest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>-2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <topicdata group="api" notopic="" />
      <apidata name="Normal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <topicdata group="api" notopic="" />
      <apidata name="TimeCritical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadPriorityLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ThreadState">
      <topicdata group="api" />
      <apidata name="ThreadState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.ThreadState.Initialized" />
        <element api="F:System.Diagnostics.ThreadState.Ready" />
        <element api="F:System.Diagnostics.ThreadState.Running" />
        <element api="F:System.Diagnostics.ThreadState.Standby" />
        <element api="F:System.Diagnostics.ThreadState.Terminated" />
        <element api="F:System.Diagnostics.ThreadState.Wait" />
        <element api="F:System.Diagnostics.ThreadState.Transition" />
        <element api="F:System.Diagnostics.ThreadState.Unknown" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Initialized">
      <topicdata group="api" notopic="" />
      <apidata name="Initialized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Ready">
      <topicdata group="api" notopic="" />
      <apidata name="Ready" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Running">
      <topicdata group="api" notopic="" />
      <apidata name="Running" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Standby">
      <topicdata group="api" notopic="" />
      <apidata name="Standby" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Terminated">
      <topicdata group="api" notopic="" />
      <apidata name="Terminated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Transition">
      <topicdata group="api" notopic="" />
      <apidata name="Transition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadState.Wait">
      <topicdata group="api" notopic="" />
      <apidata name="Wait" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadState" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.ThreadWaitReason">
      <topicdata group="api" />
      <apidata name="ThreadWaitReason" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.ThreadWaitReason.Executive" />
        <element api="F:System.Diagnostics.ThreadWaitReason.FreePage" />
        <element api="F:System.Diagnostics.ThreadWaitReason.PageIn" />
        <element api="F:System.Diagnostics.ThreadWaitReason.SystemAllocation" />
        <element api="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay" />
        <element api="F:System.Diagnostics.ThreadWaitReason.Suspended" />
        <element api="F:System.Diagnostics.ThreadWaitReason.UserRequest" />
        <element api="F:System.Diagnostics.ThreadWaitReason.EventPairHigh" />
        <element api="F:System.Diagnostics.ThreadWaitReason.EventPairLow" />
        <element api="F:System.Diagnostics.ThreadWaitReason.LpcReceive" />
        <element api="F:System.Diagnostics.ThreadWaitReason.LpcReply" />
        <element api="F:System.Diagnostics.ThreadWaitReason.VirtualMemory" />
        <element api="F:System.Diagnostics.ThreadWaitReason.PageOut" />
        <element api="F:System.Diagnostics.ThreadWaitReason.Unknown" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <topicdata group="api" notopic="" />
      <apidata name="EventPairHigh" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <topicdata group="api" notopic="" />
      <apidata name="EventPairLow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <topicdata group="api" notopic="" />
      <apidata name="ExecutionDelay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.Executive">
      <topicdata group="api" notopic="" />
      <apidata name="Executive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <topicdata group="api" notopic="" />
      <apidata name="FreePage" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <topicdata group="api" notopic="" />
      <apidata name="LpcReceive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <topicdata group="api" notopic="" />
      <apidata name="LpcReply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <topicdata group="api" notopic="" />
      <apidata name="PageIn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <topicdata group="api" notopic="" />
      <apidata name="PageOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <topicdata group="api" notopic="" />
      <apidata name="Suspended" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <topicdata group="api" notopic="" />
      <apidata name="SystemAllocation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <topicdata group="api" notopic="" />
      <apidata name="UserRequest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <topicdata group="api" notopic="" />
      <apidata name="VirtualMemory" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.ThreadWaitReason" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.Trace">
      <topicdata group="api" />
      <apidata name="Trace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.Trace.Assert">
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Trace.Close" />
        <element api="Overload:System.Diagnostics.Trace.Fail">
          <element api="M:System.Diagnostics.Trace.Fail(System.String)" />
          <element api="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Trace.Flush" />
        <element api="M:System.Diagnostics.Trace.Indent" />
        <element api="M:System.Diagnostics.Trace.Refresh" />
        <element api="Overload:System.Diagnostics.Trace.TraceError">
          <element api="M:System.Diagnostics.Trace.TraceError(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.TraceInformation">
          <element api="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.TraceWarning">
          <element api="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Trace.Unindent" />
        <element api="Overload:System.Diagnostics.Trace.Write">
          <element api="M:System.Diagnostics.Trace.Write(System.Object)" />
          <element api="M:System.Diagnostics.Trace.Write(System.String)" />
          <element api="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteIf">
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteLine">
          <element api="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteLineIf">
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Trace.AutoFlush" />
        <element api="P:System.Diagnostics.Trace.CorrelationManager" />
        <element api="P:System.Diagnostics.Trace.IndentLevel" />
        <element api="P:System.Diagnostics.Trace.IndentSize" />
        <element api="P:System.Diagnostics.Trace.Listeners" />
        <element api="P:System.Diagnostics.Trace.UseGlobalLock" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.Trace">
      <topicdata name="Trace" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.Trace" />
      <apidata name="Trace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.Trace.Assert">
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Trace.Close" />
        <element api="Overload:System.Diagnostics.Trace.Fail">
          <element api="M:System.Diagnostics.Trace.Fail(System.String)" />
          <element api="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.Trace.Flush" />
        <element api="M:System.Diagnostics.Trace.Indent" />
        <element api="M:System.Diagnostics.Trace.Refresh" />
        <element api="Overload:System.Diagnostics.Trace.TraceError">
          <element api="M:System.Diagnostics.Trace.TraceError(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.TraceInformation">
          <element api="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.TraceWarning">
          <element api="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
          <element api="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.Trace.Unindent" />
        <element api="Overload:System.Diagnostics.Trace.Write">
          <element api="M:System.Diagnostics.Trace.Write(System.Object)" />
          <element api="M:System.Diagnostics.Trace.Write(System.String)" />
          <element api="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteIf">
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteLine">
          <element api="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.Trace.WriteLineIf">
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
          <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.Trace">
      <topicdata name="Trace" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.Trace" />
      <apidata name="Trace" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Trace.AutoFlush" />
        <element api="P:System.Diagnostics.Trace.CorrelationManager" />
        <element api="P:System.Diagnostics.Trace.IndentLevel" />
        <element api="P:System.Diagnostics.Trace.IndentSize" />
        <element api="P:System.Diagnostics.Trace.Listeners" />
        <element api="P:System.Diagnostics.Trace.UseGlobalLock" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.Assert">
      <topicdata name="Assert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Assert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
        <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.Fail(System.String)" />
        <element api="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.TraceError">
      <topicdata name="TraceError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.TraceError(System.String)" />
        <element api="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.TraceInformation">
      <topicdata name="TraceInformation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
        <element api="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.TraceWarning">
      <topicdata name="TraceWarning" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceWarning" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
        <element api="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.Write(System.Object)" />
        <element api="M:System.Diagnostics.Trace.Write(System.String)" />
        <element api="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.WriteIf">
      <topicdata name="WriteIf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
        <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.Trace.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.Trace.WriteLineIf">
      <topicdata name="WriteLineIf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
        <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
        <element api="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.Assert(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Assert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Assert" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Trace.AutoFlush">
      <topicdata group="api" />
      <apidata name="AutoFlush" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoFlush" />
      <setter name="set_AutoFlush" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Trace.CorrelationManager">
      <topicdata group="api" />
      <apidata name="CorrelationManager" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CorrelationManager" />
      <returns>
        <type api="T:System.Diagnostics.CorrelationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.Fail(System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Fail" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Fail" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Indent">
      <topicdata group="api" />
      <apidata name="Indent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Trace.IndentLevel">
      <topicdata group="api" />
      <apidata name="IndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentLevel" />
      <setter name="set_IndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Trace.IndentSize">
      <topicdata group="api" />
      <apidata name="IndentSize" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentSize" />
      <setter name="set_IndentSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.Trace.Listeners">
      <topicdata group="api" />
      <apidata name="Listeners" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Listeners">
        <attributes>
          <attribute>
            <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="SharedState">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceError(System.String)">
      <topicdata group="api" />
      <apidata name="TraceError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceInformation(System.String)">
      <topicdata group="api" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceInformation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceInformation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceWarning(System.String)">
      <topicdata group="api" />
      <apidata name="TraceWarning" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceWarning" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceWarning" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.TraceWarning" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Unindent">
      <topicdata group="api" />
      <apidata name="Unindent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.Trace.UseGlobalLock">
      <topicdata group="api" />
      <apidata name="UseGlobalLock" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseGlobalLock" />
      <setter name="set_UseGlobalLock" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.Trace.Write(System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Write(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.Write(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.Write" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLine(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLine" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLineIf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Diagnostics.Trace.WriteLineIf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="condition">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.Trace" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.TraceEventCache">
      <topicdata group="api" />
      <apidata name="TraceEventCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TraceEventCache.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.TraceEventCache.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TraceEventCache.Callstack" />
        <element api="P:System.Diagnostics.TraceEventCache.DateTime" />
        <element api="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
        <element api="P:System.Diagnostics.TraceEventCache.ProcessId" />
        <element api="P:System.Diagnostics.TraceEventCache.ThreadId" />
        <element api="P:System.Diagnostics.TraceEventCache.Timestamp" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceEventCache">
      <topicdata name="TraceEventCache" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceEventCache" />
      <apidata name="TraceEventCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TraceEventCache.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TraceEventCache">
      <topicdata name="TraceEventCache" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TraceEventCache" />
      <apidata name="TraceEventCache" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Diagnostics.TraceEventCache.#ctor" />
      <elements>
        <element api="P:System.Diagnostics.TraceEventCache.Callstack" />
        <element api="P:System.Diagnostics.TraceEventCache.DateTime" />
        <element api="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
        <element api="P:System.Diagnostics.TraceEventCache.ProcessId" />
        <element api="P:System.Diagnostics.TraceEventCache.ThreadId" />
        <element api="P:System.Diagnostics.TraceEventCache.Timestamp" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceEventCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.Callstack">
      <topicdata group="api" />
      <apidata name="Callstack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Callstack" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.DateTime">
      <topicdata group="api" />
      <apidata name="DateTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DateTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
      <topicdata group="api" />
      <apidata name="LogicalOperationStack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LogicalOperationStack" />
      <returns>
        <type api="T:System.Collections.Stack" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.ProcessId">
      <topicdata group="api" />
      <apidata name="ProcessId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProcessId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.ThreadId">
      <topicdata group="api" />
      <apidata name="ThreadId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ThreadId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceEventCache.Timestamp">
      <topicdata group="api" />
      <apidata name="Timestamp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Timestamp" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceEventType">
      <topicdata group="api" />
      <apidata name="TraceEventType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.TraceEventType.Critical" />
        <element api="F:System.Diagnostics.TraceEventType.Error" />
        <element api="F:System.Diagnostics.TraceEventType.Warning" />
        <element api="F:System.Diagnostics.TraceEventType.Information" />
        <element api="F:System.Diagnostics.TraceEventType.Verbose" />
        <element api="F:System.Diagnostics.TraceEventType.Start" />
        <element api="F:System.Diagnostics.TraceEventType.Stop" />
        <element api="F:System.Diagnostics.TraceEventType.Suspend" />
        <element api="F:System.Diagnostics.TraceEventType.Resume" />
        <element api="F:System.Diagnostics.TraceEventType.Transfer" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Critical">
      <topicdata group="api" notopic="" />
      <apidata name="Critical" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Information">
      <topicdata group="api" notopic="" />
      <apidata name="Information" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Resume">
      <topicdata group="api" notopic="" />
      <apidata name="Resume" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Start">
      <topicdata group="api" notopic="" />
      <apidata name="Start" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Stop">
      <topicdata group="api" notopic="" />
      <apidata name="Stop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Suspend">
      <topicdata group="api" notopic="" />
      <apidata name="Suspend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Transfer">
      <topicdata group="api" notopic="" />
      <apidata name="Transfer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceEventType.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceEventType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceFilter">
      <topicdata group="api" />
      <apidata name="TraceFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.EventTypeFilter" ref="true" />
          <type api="T:System.Diagnostics.SourceFilter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Diagnostics.TraceFilter.#ctor" />
        <element api="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceFilter">
      <topicdata name="TraceFilter" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceFilter" />
      <apidata name="TraceFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceFilter" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceFilter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
      <topicdata group="api" />
      <apidata name="ShouldTrace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="cache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="formatOrMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="data1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceFilter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceLevel">
      <topicdata group="api" />
      <apidata name="TraceLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.TraceLevel.Off" />
        <element api="F:System.Diagnostics.TraceLevel.Error" />
        <element api="F:System.Diagnostics.TraceLevel.Warning" />
        <element api="F:System.Diagnostics.TraceLevel.Info" />
        <element api="F:System.Diagnostics.TraceLevel.Verbose" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLevel.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLevel.Info">
      <topicdata group="api" notopic="" />
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLevel.Off">
      <topicdata group="api" notopic="" />
      <apidata name="Off" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLevel.Verbose">
      <topicdata group="api" notopic="" />
      <apidata name="Verbose" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLevel.Warning">
      <topicdata group="api" notopic="" />
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceListener">
      <topicdata group="api" />
      <apidata name="TraceListener" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Diagnostics.DefaultTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.EventLogTraceListener" ref="true" />
          <type api="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" ref="true" />
          <type api="T:System.Web.IisTraceListener" ref="true" />
          <type api="T:System.Web.WebPageTraceListener" ref="true" />
          <type api="T:System.Diagnostics.Eventing.EventProviderTraceListener" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Diagnostics.TraceListener.#ctor">
          <element api="M:System.Diagnostics.TraceListener.#ctor" />
          <element api="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Close" />
        <element api="Overload:System.Diagnostics.TraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.TraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.TraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="Overload:System.Diagnostics.TraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.TraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceListener">
      <topicdata name="TraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceListener" />
      <apidata name="TraceListener" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Close" />
        <element api="Overload:System.Diagnostics.TraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Diagnostics.TraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TraceListener.TraceData">
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.TraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="Overload:System.Diagnostics.TraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.TraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TraceListener">
      <topicdata name="TraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TraceListener" />
      <apidata name="TraceListener" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.#ctor" />
        <element api="M:System.Diagnostics.TraceListener.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Dispose" />
        <element api="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.TraceListener.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Diagnostics.TraceListener.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Diagnostics.TraceListener.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Fail(System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Fail" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Fail" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.Diagnostics.TraceFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.IndentLevel">
      <topicdata group="api" />
      <apidata name="IndentLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentLevel" />
      <setter name="set_IndentLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.IndentSize">
      <topicdata group="api" />
      <apidata name="IndentSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IndentSize" />
      <setter name="set_IndentSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.IsThreadSafe">
      <topicdata group="api" />
      <apidata name="IsThreadSafe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsThreadSafe" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListener.NeedIndent">
      <topicdata group="api" />
      <apidata name="NeedIndent" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NeedIndent" />
      <setter name="set_NeedIndent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.TraceData" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.TraceData" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Diagnostics.TraceListener.TraceOutputOptions">
      <topicdata group="api" />
      <apidata name="TraceOutputOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TraceOutputOptions" />
      <setter name="set_TraceOutputOptions" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Write(System.Object)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Write" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Write" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Write" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.Write" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.WriteIndent">
      <topicdata group="api" />
      <apidata name="WriteIndent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.WriteLine(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.WriteLine" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceListenerCollection">
      <topicdata group="api" />
      <apidata name="TraceListenerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.AddRange">
          <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])" />
          <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)" />
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.Clear" />
        <element api="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.GetEnumerator" />
        <element api="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.Remove">
          <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)" />
          <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)" />
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TraceListenerCollection.Count" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.Item">
          <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)" />
          <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.String)" />
        </element>
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceListenerCollection">
      <topicdata name="TraceListenerCollection" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceListenerCollection" />
      <apidata name="TraceListenerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.AddRange">
          <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])" />
          <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)" />
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.Clear" />
        <element api="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.GetEnumerator" />
        <element api="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.Remove">
          <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)" />
          <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)" />
        </element>
        <element api="M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TraceListenerCollection">
      <topicdata name="TraceListenerCollection" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TraceListenerCollection" />
      <apidata name="TraceListenerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.TraceListenerCollection.Count" />
        <element api="Overload:System.Diagnostics.TraceListenerCollection.Item">
          <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)" />
          <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.String)" />
        </element>
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListenerCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])" />
        <element api="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListenerCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)" />
        <element api="P:System.Diagnostics.TraceListenerCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceListenerCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)" />
        <element api="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listeners">
          <arrayOf rank="1">
            <type api="T:System.Diagnostics.TraceListener" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="i">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Diagnostics.TraceListener" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceListenerCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceLogRetentionOption">
      <topicdata group="api" />
      <apidata name="TraceLogRetentionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles" />
        <element api="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles">
      <topicdata group="api" notopic="" />
      <apidata name="LimitedCircularFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.LimitedSequentialFiles">
      <topicdata group="api" notopic="" />
      <apidata name="LimitedSequentialFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.SingleFileBoundedSize">
      <topicdata group="api" notopic="" />
      <apidata name="SingleFileBoundedSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize">
      <topicdata group="api" notopic="" />
      <apidata name="SingleFileUnboundedSize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceLogRetentionOption.UnlimitedSequentialFiles">
      <topicdata group="api" notopic="" />
      <apidata name="UnlimitedSequentialFiles" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceLogRetentionOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceOptions">
      <topicdata group="api" />
      <apidata name="TraceOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Diagnostics.TraceOptions.None" />
        <element api="F:System.Diagnostics.TraceOptions.LogicalOperationStack" />
        <element api="F:System.Diagnostics.TraceOptions.DateTime" />
        <element api="F:System.Diagnostics.TraceOptions.Timestamp" />
        <element api="F:System.Diagnostics.TraceOptions.ProcessId" />
        <element api="F:System.Diagnostics.TraceOptions.ThreadId" />
        <element api="F:System.Diagnostics.TraceOptions.Callstack" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.Callstack">
      <topicdata group="api" notopic="" />
      <apidata name="Callstack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.DateTime">
      <topicdata group="api" notopic="" />
      <apidata name="DateTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.LogicalOperationStack">
      <topicdata group="api" notopic="" />
      <apidata name="LogicalOperationStack" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.ProcessId">
      <topicdata group="api" notopic="" />
      <apidata name="ProcessId" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.ThreadId">
      <topicdata group="api" notopic="" />
      <apidata name="ThreadId" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Diagnostics.TraceOptions.Timestamp">
      <topicdata group="api" notopic="" />
      <apidata name="Timestamp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.TraceSource">
      <topicdata group="api" />
      <apidata name="TraceSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.TraceSource.#ctor">
          <element api="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
          <element api="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
        </element>
        <element api="M:System.Diagnostics.TraceSource.Close" />
        <element api="M:System.Diagnostics.TraceSource.Flush" />
        <element api="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TraceSource.TraceData">
          <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceSource.TraceEvent">
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceSource.TraceInformation">
          <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
          <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TraceSource.Attributes" />
        <element api="P:System.Diagnostics.TraceSource.Listeners" />
        <element api="P:System.Diagnostics.TraceSource.Name" />
        <element api="P:System.Diagnostics.TraceSource.Switch" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceSource">
      <topicdata name="TraceSource" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceSource" />
      <apidata name="TraceSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.TraceSource.Close" />
        <element api="M:System.Diagnostics.TraceSource.Flush" />
        <element api="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TraceSource.TraceData">
          <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceSource.TraceEvent">
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.TraceSource.TraceInformation">
          <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
          <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TraceSource">
      <topicdata name="TraceSource" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TraceSource" />
      <apidata name="TraceSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.TraceSource.Attributes" />
        <element api="P:System.Diagnostics.TraceSource.Listeners" />
        <element api="P:System.Diagnostics.TraceSource.Name" />
        <element api="P:System.Diagnostics.TraceSource.Switch" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceSource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
        <element api="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceSource.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceSource.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceSource.TraceInformation">
      <topicdata name="TraceInformation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
        <element api="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TraceSource.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TraceSource.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultLevel">
          <type api="T:System.Diagnostics.SourceLevels" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSource.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.Specialized.StringDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.GetSupportedAttributes">
      <topicdata group="api" />
      <apidata name="GetSupportedAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSource.Listeners">
      <topicdata group="api" />
      <apidata name="Listeners" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Listeners" />
      <returns>
        <type api="T:System.Diagnostics.TraceListenerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSource.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSource.Switch">
      <topicdata group="api" />
      <apidata name="Switch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Switch" />
      <setter name="set_Switch" />
      <returns>
        <type api="T:System.Diagnostics.SourceSwitch" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceEvent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceInformation(System.String)">
      <topicdata group="api" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceInformation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceInformation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.TraceSource.TraceInformation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Diagnostics.ConditionalAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>TRACE</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Diagnostics.TraceSwitch">
      <topicdata group="api" />
      <apidata name="TraceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.Switch" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="Overload:System.Diagnostics.TraceSwitch.#ctor">
          <element api="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
        <element api="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
        <element api="P:System.Diagnostics.TraceSwitch.Level" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceError" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceInfo" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
    </api>
    <api id="Methods.T:System.Diagnostics.TraceSwitch">
      <topicdata name="TraceSwitch" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.TraceSwitch" />
      <apidata name="TraceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.Switch.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged" />
        <element api="M:System.Diagnostics.TraceSwitch.OnValueChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.TraceSwitch">
      <topicdata name="TraceSwitch" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.TraceSwitch" />
      <apidata name="TraceSwitch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.Switch.Attributes" />
        <element api="P:System.Diagnostics.Switch.Description" />
        <element api="P:System.Diagnostics.Switch.DisplayName" />
        <element api="P:System.Diagnostics.Switch.SwitchSetting" />
        <element api="P:System.Diagnostics.Switch.Value" />
        <element api="P:System.Diagnostics.TraceSwitch.Level" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceError" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceInfo" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceVerbose" />
        <element api="P:System.Diagnostics.TraceSwitch.TraceWarning" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.TraceSwitch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TraceSwitch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.TraceSwitch.#ctor" />
      <parameters>
        <parameter name="displayName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultSwitchValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSwitch.Level">
      <topicdata group="api" />
      <apidata name="Level" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Level" />
      <setter name="set_Level" />
      <returns>
        <type api="T:System.Diagnostics.TraceLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSwitch.OnSwitchSettingChanged">
      <topicdata group="api" />
      <apidata name="OnSwitchSettingChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Switch.OnSwitchSettingChanged">
          <type api="T:System.Diagnostics.Switch" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.TraceSwitch.OnValueChanged">
      <topicdata group="api" />
      <apidata name="OnValueChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.Switch.OnValueChanged">
          <type api="T:System.Diagnostics.Switch" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSwitch.TraceError">
      <topicdata group="api" />
      <apidata name="TraceError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSwitch.TraceInfo">
      <topicdata group="api" />
      <apidata name="TraceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceInfo" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSwitch.TraceVerbose">
      <topicdata group="api" />
      <apidata name="TraceVerbose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceVerbose" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.TraceSwitch.TraceWarning">
      <topicdata group="api" />
      <apidata name="TraceWarning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TraceWarning" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.TraceSwitch" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata group="api" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata name="UnescapedXmlDiagnosticData" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.UnescapedXmlDiagnosticData">
      <topicdata name="UnescapedXmlDiagnosticData" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      <apidata name="UnescapedXmlDiagnosticData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="xmlPayload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
    </api>
    <api id="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml">
      <topicdata group="api" />
      <apidata name="UnescapedXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnescapedXml" />
      <setter name="set_UnescapedXml" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.UnescapedXmlDiagnosticData" ref="true" />
      </containers>
    </api>
    <api id="T:System.Diagnostics.XmlWriterTraceListener">
      <topicdata group="api" />
      <apidata name="XmlWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor">
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
        </element>
        <element api="M:System.Diagnostics.XmlWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData">
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Diagnostics.XmlWriterTraceListener">
      <topicdata name="XmlWriterTraceListener" group="list" subgroup="Methods" typeTopicId="T:System.Diagnostics.XmlWriterTraceListener" />
      <apidata name="XmlWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Dispose">
          <element api="M:System.Diagnostics.TraceListener.Dispose" />
          <element api="M:System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Diagnostics.TextWriterTraceListener.Flush" />
        <element api="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
        <element api="M:System.Diagnostics.TraceListener.WriteIndent" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.Close" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Fail">
          <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData">
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent">
          <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        </element>
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.Write">
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
        </element>
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.WriteLine">
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
          <element api="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
          <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Diagnostics.XmlWriterTraceListener.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" />
      </containers>
    </api>
    <api id="Properties.T:System.Diagnostics.XmlWriterTraceListener">
      <topicdata name="XmlWriterTraceListener" group="list" subgroup="Properties" typeTopicId="T:System.Diagnostics.XmlWriterTraceListener" />
      <apidata name="XmlWriterTraceListener" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Diagnostics.TextWriterTraceListener.Writer" />
        <element api="P:System.Diagnostics.TraceListener.Attributes" />
        <element api="P:System.Diagnostics.TraceListener.Filter" />
        <element api="P:System.Diagnostics.TraceListener.IndentLevel" />
        <element api="P:System.Diagnostics.TraceListener.IndentSize" />
        <element api="P:System.Diagnostics.TraceListener.IsThreadSafe" />
        <element api="P:System.Diagnostics.TraceListener.Name" />
        <element api="P:System.Diagnostics.TraceListener.NeedIndent" />
        <element api="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.Fail">
      <topicdata name="Fail" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Fail" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Fail(System.String)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData">
      <topicdata name="TraceData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent">
      <topicdata name="TraceEvent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.Write">
      <topicdata name="Write" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Write" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.Write(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Diagnostics.XmlWriterTraceListener.WriteLine">
      <topicdata name="WriteLine" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object)" />
        <element api="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)" />
        <element api="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Diagnostics.XmlWriterTraceListener.#ctor" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Close">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Fail" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.Fail" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detailMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name="TraceTransfer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relatedActivityId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.Write" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)">
      <topicdata group="api" />
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Diagnostics.XmlWriterTraceListener.WriteLine" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TextWriterTraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Diagnostics" />
        <type api="T:System.Diagnostics.XmlWriterTraceListener" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>